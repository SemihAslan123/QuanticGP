{"ast":null,"code":"import _defineProperty from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _typeof from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _slicedToArray from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.every.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { cloneDeep, isEqual } from 'lodash-es';\nimport Delta, { AttributeMap } from 'quill-delta';\nimport { EmbedBlot, Scope, TextBlot } from 'parchment';\nimport Quill from '../core/quill.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nvar debug = logger('quill:keyboard');\nvar SHORTKEY = /Mac/i.test(navigator.platform) ? 'metaKey' : 'ctrlKey';\nvar Keyboard = /*#__PURE__*/function (_Module) {\n  function Keyboard(quill, options) {\n    var _this;\n    _classCallCheck(this, Keyboard);\n    _this = _callSuper(this, Keyboard, [quill, options]);\n    _this.bindings = {};\n    // @ts-expect-error Fix me later\n    Object.keys(_this.options.bindings).forEach(function (name) {\n      // @ts-expect-error Fix me later\n      if (_this.options.bindings[name]) {\n        // @ts-expect-error Fix me later\n        _this.addBinding(_this.options.bindings[name]);\n      }\n    });\n    _this.addBinding({\n      key: 'Enter',\n      shiftKey: null\n    }, _this.handleEnter);\n    _this.addBinding({\n      key: 'Enter',\n      metaKey: null,\n      ctrlKey: null,\n      altKey: null\n    }, function () {});\n    if (/Firefox/i.test(navigator.userAgent)) {\n      // Need to handle delete and backspace for Firefox in the general case #1171\n      _this.addBinding({\n        key: 'Backspace'\n      }, {\n        collapsed: true\n      }, _this.handleBackspace);\n      _this.addBinding({\n        key: 'Delete'\n      }, {\n        collapsed: true\n      }, _this.handleDelete);\n    } else {\n      _this.addBinding({\n        key: 'Backspace'\n      }, {\n        collapsed: true,\n        prefix: /^.?$/\n      }, _this.handleBackspace);\n      _this.addBinding({\n        key: 'Delete'\n      }, {\n        collapsed: true,\n        suffix: /^.?$/\n      }, _this.handleDelete);\n    }\n    _this.addBinding({\n      key: 'Backspace'\n    }, {\n      collapsed: false\n    }, _this.handleDeleteRange);\n    _this.addBinding({\n      key: 'Delete'\n    }, {\n      collapsed: false\n    }, _this.handleDeleteRange);\n    _this.addBinding({\n      key: 'Backspace',\n      altKey: null,\n      ctrlKey: null,\n      metaKey: null,\n      shiftKey: null\n    }, {\n      collapsed: true,\n      offset: 0\n    }, _this.handleBackspace);\n    _this.listen();\n    return _this;\n  }\n  _inherits(Keyboard, _Module);\n  return _createClass(Keyboard, [{\n    key: \"addBinding\",\n    value: function addBinding(keyBinding) {\n      var _this2 = this;\n      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var handler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var binding = normalize(keyBinding);\n      if (binding == null) {\n        debug.warn('Attempted to add invalid keyboard binding', binding);\n        return;\n      }\n      if (typeof context === 'function') {\n        context = {\n          handler: context\n        };\n      }\n      if (typeof handler === 'function') {\n        handler = {\n          handler: handler\n        };\n      }\n      var keys = Array.isArray(binding.key) ? binding.key : [binding.key];\n      keys.forEach(function (key) {\n        var singleBinding = _objectSpread(_objectSpread(_objectSpread({}, binding), {}, {\n          key: key\n        }, context), handler);\n        _this2.bindings[singleBinding.key] = _this2.bindings[singleBinding.key] || [];\n        _this2.bindings[singleBinding.key].push(singleBinding);\n      });\n    }\n  }, {\n    key: \"listen\",\n    value: function listen() {\n      var _this3 = this;\n      this.quill.root.addEventListener('keydown', function (evt) {\n        if (evt.defaultPrevented || evt.isComposing) return;\n\n        // evt.isComposing is false when pressing Enter/Backspace when composing in Safari\n        // https://bugs.webkit.org/show_bug.cgi?id=165004\n        var isComposing = evt.keyCode === 229 && (evt.key === 'Enter' || evt.key === 'Backspace');\n        if (isComposing) return;\n        var bindings = (_this3.bindings[evt.key] || []).concat(_this3.bindings[evt.which] || []);\n        var matches = bindings.filter(function (binding) {\n          return Keyboard.match(evt, binding);\n        });\n        if (matches.length === 0) return;\n        // @ts-expect-error\n        var blot = Quill.find(evt.target, true);\n        if (blot && blot.scroll !== _this3.quill.scroll) return;\n        var range = _this3.quill.getSelection();\n        if (range == null || !_this3.quill.hasFocus()) return;\n        var _this3$quill$getLine = _this3.quill.getLine(range.index),\n          _this3$quill$getLine2 = _slicedToArray(_this3$quill$getLine, 2),\n          line = _this3$quill$getLine2[0],\n          offset = _this3$quill$getLine2[1];\n        var _this3$quill$getLeaf = _this3.quill.getLeaf(range.index),\n          _this3$quill$getLeaf2 = _slicedToArray(_this3$quill$getLeaf, 2),\n          leafStart = _this3$quill$getLeaf2[0],\n          offsetStart = _this3$quill$getLeaf2[1];\n        var _ref3 = range.length === 0 ? [leafStart, offsetStart] : _this3.quill.getLeaf(range.index + range.length),\n          _ref4 = _slicedToArray(_ref3, 2),\n          leafEnd = _ref4[0],\n          offsetEnd = _ref4[1];\n        var prefixText = leafStart instanceof TextBlot ? leafStart.value().slice(0, offsetStart) : '';\n        var suffixText = leafEnd instanceof TextBlot ? leafEnd.value().slice(offsetEnd) : '';\n        var curContext = {\n          collapsed: range.length === 0,\n          // @ts-expect-error Fix me later\n          empty: range.length === 0 && line.length() <= 1,\n          format: _this3.quill.getFormat(range),\n          line: line,\n          offset: offset,\n          prefix: prefixText,\n          suffix: suffixText,\n          event: evt\n        };\n        var prevented = matches.some(function (binding) {\n          if (binding.collapsed != null && binding.collapsed !== curContext.collapsed) {\n            return false;\n          }\n          if (binding.empty != null && binding.empty !== curContext.empty) {\n            return false;\n          }\n          if (binding.offset != null && binding.offset !== curContext.offset) {\n            return false;\n          }\n          if (Array.isArray(binding.format)) {\n            // any format is present\n            if (binding.format.every(function (name) {\n              return curContext.format[name] == null;\n            })) {\n              return false;\n            }\n          } else if (_typeof(binding.format) === 'object') {\n            // all formats must match\n            if (!Object.keys(binding.format).every(function (name) {\n              // @ts-expect-error Fix me later\n              if (binding.format[name] === true) return curContext.format[name] != null;\n              // @ts-expect-error Fix me later\n              if (binding.format[name] === false) return curContext.format[name] == null;\n              // @ts-expect-error Fix me later\n              return isEqual(binding.format[name], curContext.format[name]);\n            })) {\n              return false;\n            }\n          }\n          if (binding.prefix != null && !binding.prefix.test(curContext.prefix)) {\n            return false;\n          }\n          if (binding.suffix != null && !binding.suffix.test(curContext.suffix)) {\n            return false;\n          }\n          // @ts-expect-error Fix me later\n          return binding.handler.call(_this3, range, curContext, binding) !== true;\n        });\n        if (prevented) {\n          evt.preventDefault();\n        }\n      });\n    }\n  }, {\n    key: \"handleBackspace\",\n    value: function handleBackspace(range, context) {\n      // Check for astral symbols\n      var length = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]$/.test(context.prefix) ? 2 : 1;\n      if (range.index === 0 || this.quill.getLength() <= 1) return;\n      var formats = {};\n      var _this$quill$getLine = this.quill.getLine(range.index),\n        _this$quill$getLine2 = _slicedToArray(_this$quill$getLine, 1),\n        line = _this$quill$getLine2[0];\n      var delta = new Delta().retain(range.index - length)[\"delete\"](length);\n      if (context.offset === 0) {\n        // Always deleting newline here, length always 1\n        var _this$quill$getLine3 = this.quill.getLine(range.index - 1),\n          _this$quill$getLine4 = _slicedToArray(_this$quill$getLine3, 1),\n          prev = _this$quill$getLine4[0];\n        if (prev) {\n          var isPrevLineEmpty = prev.statics.blotName === 'block' && prev.length() <= 1;\n          if (!isPrevLineEmpty) {\n            // @ts-expect-error Fix me later\n            var curFormats = line.formats();\n            var prevFormats = this.quill.getFormat(range.index - 1, 1);\n            formats = AttributeMap.diff(curFormats, prevFormats) || {};\n            if (Object.keys(formats).length > 0) {\n              // line.length() - 1 targets \\n in line, another -1 for newline being deleted\n              var formatDelta = new Delta()\n              // @ts-expect-error Fix me later\n              .retain(range.index + line.length() - 2).retain(1, formats);\n              delta = delta.compose(formatDelta);\n            }\n          }\n        }\n      }\n      this.quill.updateContents(delta, Quill.sources.USER);\n      this.quill.focus();\n    }\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete(range, context) {\n      // Check for astral symbols\n      var length = /^[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/.test(context.suffix) ? 2 : 1;\n      if (range.index >= this.quill.getLength() - length) return;\n      var formats = {};\n      var _this$quill$getLine5 = this.quill.getLine(range.index),\n        _this$quill$getLine6 = _slicedToArray(_this$quill$getLine5, 1),\n        line = _this$quill$getLine6[0];\n      var delta = new Delta().retain(range.index)[\"delete\"](length);\n      // @ts-expect-error Fix me later\n      if (context.offset >= line.length() - 1) {\n        var _this$quill$getLine7 = this.quill.getLine(range.index + 1),\n          _this$quill$getLine8 = _slicedToArray(_this$quill$getLine7, 1),\n          next = _this$quill$getLine8[0];\n        if (next) {\n          // @ts-expect-error Fix me later\n          var curFormats = line.formats();\n          var nextFormats = this.quill.getFormat(range.index, 1);\n          formats = AttributeMap.diff(curFormats, nextFormats) || {};\n          if (Object.keys(formats).length > 0) {\n            delta = delta.retain(next.length() - 1).retain(1, formats);\n          }\n        }\n      }\n      this.quill.updateContents(delta, Quill.sources.USER);\n      this.quill.focus();\n    }\n  }, {\n    key: \"handleDeleteRange\",\n    value: function handleDeleteRange(range) {\n      deleteRange({\n        range: range,\n        quill: this.quill\n      });\n      this.quill.focus();\n    }\n  }, {\n    key: \"handleEnter\",\n    value: function handleEnter(range, context) {\n      var _this4 = this;\n      var lineFormats = Object.keys(context.format).reduce(function (formats, format) {\n        if (_this4.quill.scroll.query(format, Scope.BLOCK) && !Array.isArray(context.format[format])) {\n          formats[format] = context.format[format];\n        }\n        return formats;\n      }, {});\n      var delta = new Delta().retain(range.index)[\"delete\"](range.length).insert('\\n', lineFormats);\n      this.quill.updateContents(delta, Quill.sources.USER);\n      this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n      this.quill.focus();\n    }\n  }], [{\n    key: \"match\",\n    value: function match(evt, binding) {\n      if (['altKey', 'ctrlKey', 'metaKey', 'shiftKey'].some(function (key) {\n        return !!binding[key] !== evt[key] && binding[key] !== null;\n      })) {\n        return false;\n      }\n      return binding.key === evt.key || binding.key === evt.which;\n    }\n  }]);\n}(Module);\nvar defaultOptions = {\n  bindings: {\n    bold: makeFormatHandler('bold'),\n    italic: makeFormatHandler('italic'),\n    underline: makeFormatHandler('underline'),\n    indent: {\n      // highlight tab or tab at beginning of list, indent or blockquote\n      key: 'Tab',\n      format: ['blockquote', 'indent', 'list'],\n      handler: function handler(range, context) {\n        if (context.collapsed && context.offset !== 0) return true;\n        this.quill.format('indent', '+1', Quill.sources.USER);\n        return false;\n      }\n    },\n    outdent: {\n      key: 'Tab',\n      shiftKey: true,\n      format: ['blockquote', 'indent', 'list'],\n      // highlight tab or tab at beginning of list, indent or blockquote\n      handler: function handler(range, context) {\n        if (context.collapsed && context.offset !== 0) return true;\n        this.quill.format('indent', '-1', Quill.sources.USER);\n        return false;\n      }\n    },\n    'outdent backspace': {\n      key: 'Backspace',\n      collapsed: true,\n      shiftKey: null,\n      metaKey: null,\n      ctrlKey: null,\n      altKey: null,\n      format: ['indent', 'list'],\n      offset: 0,\n      handler: function handler(range, context) {\n        if (context.format.indent != null) {\n          this.quill.format('indent', '-1', Quill.sources.USER);\n        } else if (context.format.list != null) {\n          this.quill.format('list', false, Quill.sources.USER);\n        }\n      }\n    },\n    'indent code-block': makeCodeBlockHandler(true),\n    'outdent code-block': makeCodeBlockHandler(false),\n    'remove tab': {\n      key: 'Tab',\n      shiftKey: true,\n      collapsed: true,\n      prefix: /\\t$/,\n      handler: function handler(range) {\n        this.quill.deleteText(range.index - 1, 1, Quill.sources.USER);\n      }\n    },\n    tab: {\n      key: 'Tab',\n      handler: function handler(range, context) {\n        if (context.format.table) return true;\n        this.quill.history.cutoff();\n        var delta = new Delta().retain(range.index)[\"delete\"](range.length).insert('\\t');\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.history.cutoff();\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        return false;\n      }\n    },\n    'blockquote empty enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['blockquote'],\n      empty: true,\n      handler: function handler() {\n        this.quill.format('blockquote', false, Quill.sources.USER);\n      }\n    },\n    'list empty enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['list'],\n      empty: true,\n      handler: function handler(range, context) {\n        var formats = {\n          list: false\n        };\n        if (context.format.indent) {\n          formats.indent = false;\n        }\n        this.quill.formatLine(range.index, range.length, formats, Quill.sources.USER);\n      }\n    },\n    'checklist enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: {\n        list: 'checked'\n      },\n      handler: function handler(range) {\n        var _this$quill$getLine9 = this.quill.getLine(range.index),\n          _this$quill$getLine10 = _slicedToArray(_this$quill$getLine9, 2),\n          line = _this$quill$getLine10[0],\n          offset = _this$quill$getLine10[1];\n        var formats = _objectSpread(_objectSpread({}, line.formats()), {}, {\n          list: 'checked'\n        });\n        var delta = new Delta().retain(range.index).insert('\\n', formats)\n        // @ts-expect-error Fix me later\n        .retain(line.length() - offset - 1).retain(1, {\n          list: 'unchecked'\n        });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        this.quill.scrollSelectionIntoView();\n      }\n    },\n    'header enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['header'],\n      suffix: /^$/,\n      handler: function handler(range, context) {\n        var _this$quill$getLine11 = this.quill.getLine(range.index),\n          _this$quill$getLine12 = _slicedToArray(_this$quill$getLine11, 2),\n          line = _this$quill$getLine12[0],\n          offset = _this$quill$getLine12[1];\n        var delta = new Delta().retain(range.index).insert('\\n', context.format)\n        // @ts-expect-error Fix me later\n        .retain(line.length() - offset - 1).retain(1, {\n          header: null\n        });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        this.quill.scrollSelectionIntoView();\n      }\n    },\n    'table backspace': {\n      key: 'Backspace',\n      format: ['table'],\n      collapsed: true,\n      offset: 0,\n      handler: function handler() {}\n    },\n    'table delete': {\n      key: 'Delete',\n      format: ['table'],\n      collapsed: true,\n      suffix: /^$/,\n      handler: function handler() {}\n    },\n    'table enter': {\n      key: 'Enter',\n      shiftKey: null,\n      format: ['table'],\n      handler: function handler(range) {\n        var module = this.quill.getModule('table');\n        if (module) {\n          // @ts-expect-error\n          var _module$getTable = module.getTable(range),\n            _module$getTable2 = _slicedToArray(_module$getTable, 4),\n            table = _module$getTable2[0],\n            row = _module$getTable2[1],\n            cell = _module$getTable2[2],\n            offset = _module$getTable2[3];\n          var shift = tableSide(table, row, cell, offset);\n          if (shift == null) return;\n          var index = table.offset();\n          if (shift < 0) {\n            var delta = new Delta().retain(index).insert('\\n');\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(range.index + 1, range.length, Quill.sources.SILENT);\n          } else if (shift > 0) {\n            index += table.length();\n            var _delta = new Delta().retain(index).insert('\\n');\n            this.quill.updateContents(_delta, Quill.sources.USER);\n            this.quill.setSelection(index, Quill.sources.USER);\n          }\n        }\n      }\n    },\n    'table tab': {\n      key: 'Tab',\n      shiftKey: null,\n      format: ['table'],\n      handler: function handler(range, context) {\n        var event = context.event,\n          cell = context.line;\n        var offset = cell.offset(this.quill.scroll);\n        if (event.shiftKey) {\n          this.quill.setSelection(offset - 1, Quill.sources.USER);\n        } else {\n          this.quill.setSelection(offset + cell.length(), Quill.sources.USER);\n        }\n      }\n    },\n    'list autofill': {\n      key: ' ',\n      shiftKey: null,\n      collapsed: true,\n      format: {\n        'code-block': false,\n        blockquote: false,\n        table: false\n      },\n      prefix: /^\\s*?(\\d+\\.|-|\\*|\\[ ?\\]|\\[x\\])$/,\n      handler: function handler(range, context) {\n        if (this.quill.scroll.query('list') == null) return true;\n        var length = context.prefix.length;\n        var _this$quill$getLine13 = this.quill.getLine(range.index),\n          _this$quill$getLine14 = _slicedToArray(_this$quill$getLine13, 2),\n          line = _this$quill$getLine14[0],\n          offset = _this$quill$getLine14[1];\n        if (offset > length) return true;\n        var value;\n        switch (context.prefix.trim()) {\n          case '[]':\n          case '[ ]':\n            value = 'unchecked';\n            break;\n          case '[x]':\n            value = 'checked';\n            break;\n          case '-':\n          case '*':\n            value = 'bullet';\n            break;\n          default:\n            value = 'ordered';\n        }\n        this.quill.insertText(range.index, ' ', Quill.sources.USER);\n        this.quill.history.cutoff();\n        var delta = new Delta().retain(range.index - offset)[\"delete\"](length + 1)\n        // @ts-expect-error Fix me later\n        .retain(line.length() - 2 - offset).retain(1, {\n          list: value\n        });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.history.cutoff();\n        this.quill.setSelection(range.index - length, Quill.sources.SILENT);\n        return false;\n      }\n    },\n    'code exit': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['code-block'],\n      prefix: /^$/,\n      suffix: /^\\s*$/,\n      handler: function handler(range) {\n        var _this$quill$getLine15 = this.quill.getLine(range.index),\n          _this$quill$getLine16 = _slicedToArray(_this$quill$getLine15, 2),\n          line = _this$quill$getLine16[0],\n          offset = _this$quill$getLine16[1];\n        var numLines = 2;\n        var cur = line;\n        while (cur != null && cur.length() <= 1 && cur.formats()['code-block']) {\n          // @ts-expect-error\n          cur = cur.prev;\n          numLines -= 1;\n          // Requisite prev lines are empty\n          if (numLines <= 0) {\n            var delta = new Delta()\n            // @ts-expect-error Fix me later\n            .retain(range.index + line.length() - offset - 2).retain(1, {\n              'code-block': null\n            })[\"delete\"](1);\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(range.index - 1, Quill.sources.SILENT);\n            return false;\n          }\n        }\n        return true;\n      }\n    },\n    'embed left': makeEmbedArrowHandler('ArrowLeft', false),\n    'embed left shift': makeEmbedArrowHandler('ArrowLeft', true),\n    'embed right': makeEmbedArrowHandler('ArrowRight', false),\n    'embed right shift': makeEmbedArrowHandler('ArrowRight', true),\n    'table down': makeTableArrowHandler(false),\n    'table up': makeTableArrowHandler(true)\n  }\n};\nKeyboard.DEFAULTS = defaultOptions;\nfunction makeCodeBlockHandler(indent) {\n  return {\n    key: 'Tab',\n    shiftKey: !indent,\n    format: {\n      'code-block': true\n    },\n    handler: function handler(range, _ref) {\n      var event = _ref.event;\n      var CodeBlock = this.quill.scroll.query('code-block');\n      // @ts-expect-error\n      var TAB = CodeBlock.TAB;\n      if (range.length === 0 && !event.shiftKey) {\n        this.quill.insertText(range.index, TAB, Quill.sources.USER);\n        this.quill.setSelection(range.index + TAB.length, Quill.sources.SILENT);\n        return;\n      }\n      var lines = range.length === 0 ? this.quill.getLines(range.index, 1) : this.quill.getLines(range);\n      var index = range.index,\n        length = range.length;\n      lines.forEach(function (line, i) {\n        if (indent) {\n          line.insertAt(0, TAB);\n          if (i === 0) {\n            index += TAB.length;\n          } else {\n            length += TAB.length;\n          }\n          // @ts-expect-error Fix me later\n        } else if (line.domNode.textContent.startsWith(TAB)) {\n          line.deleteAt(0, TAB.length);\n          if (i === 0) {\n            index -= TAB.length;\n          } else {\n            length -= TAB.length;\n          }\n        }\n      });\n      this.quill.update(Quill.sources.USER);\n      this.quill.setSelection(index, length, Quill.sources.SILENT);\n    }\n  };\n}\nfunction makeEmbedArrowHandler(key, shiftKey) {\n  var where = key === 'ArrowLeft' ? 'prefix' : 'suffix';\n  return _defineProperty(_defineProperty({\n    key: key,\n    shiftKey: shiftKey,\n    altKey: null\n  }, where, /^$/), \"handler\", function handler(range) {\n    var index = range.index;\n    if (key === 'ArrowRight') {\n      index += range.length + 1;\n    }\n    var _this$quill$getLeaf = this.quill.getLeaf(index),\n      _this$quill$getLeaf2 = _slicedToArray(_this$quill$getLeaf, 1),\n      leaf = _this$quill$getLeaf2[0];\n    if (!(leaf instanceof EmbedBlot)) return true;\n    if (key === 'ArrowLeft') {\n      if (shiftKey) {\n        this.quill.setSelection(range.index - 1, range.length + 1, Quill.sources.USER);\n      } else {\n        this.quill.setSelection(range.index - 1, Quill.sources.USER);\n      }\n    } else if (shiftKey) {\n      this.quill.setSelection(range.index, range.length + 1, Quill.sources.USER);\n    } else {\n      this.quill.setSelection(range.index + range.length + 1, Quill.sources.USER);\n    }\n    return false;\n  });\n}\nfunction makeFormatHandler(format) {\n  return {\n    key: format[0],\n    shortKey: true,\n    handler: function handler(range, context) {\n      this.quill.format(format, !context.format[format], Quill.sources.USER);\n    }\n  };\n}\nfunction makeTableArrowHandler(up) {\n  return {\n    key: up ? 'ArrowUp' : 'ArrowDown',\n    collapsed: true,\n    format: ['table'],\n    handler: function handler(range, context) {\n      // TODO move to table module\n      var key = up ? 'prev' : 'next';\n      var cell = context.line;\n      var targetRow = cell.parent[key];\n      if (targetRow != null) {\n        if (targetRow.statics.blotName === 'table-row') {\n          // @ts-expect-error\n          var targetCell = targetRow.children.head;\n          var cur = cell;\n          while (cur.prev != null) {\n            // @ts-expect-error\n            cur = cur.prev;\n            targetCell = targetCell.next;\n          }\n          var index = targetCell.offset(this.quill.scroll) + Math.min(context.offset, targetCell.length() - 1);\n          this.quill.setSelection(index, 0, Quill.sources.USER);\n        }\n      } else {\n        // @ts-expect-error\n        var targetLine = cell.table()[key];\n        if (targetLine != null) {\n          if (up) {\n            this.quill.setSelection(targetLine.offset(this.quill.scroll) + targetLine.length() - 1, 0, Quill.sources.USER);\n          } else {\n            this.quill.setSelection(targetLine.offset(this.quill.scroll), 0, Quill.sources.USER);\n          }\n        }\n      }\n      return false;\n    }\n  };\n}\nfunction normalize(binding) {\n  if (typeof binding === 'string' || typeof binding === 'number') {\n    binding = {\n      key: binding\n    };\n  } else if (_typeof(binding) === 'object') {\n    binding = cloneDeep(binding);\n  } else {\n    return null;\n  }\n  if (binding.shortKey) {\n    binding[SHORTKEY] = binding.shortKey;\n    delete binding.shortKey;\n  }\n  return binding;\n}\n\n// TODO: Move into quill.ts or editor.ts\nfunction deleteRange(_ref2) {\n  var quill = _ref2.quill,\n    range = _ref2.range;\n  var lines = quill.getLines(range);\n  var formats = {};\n  if (lines.length > 1) {\n    var firstFormats = lines[0].formats();\n    var lastFormats = lines[lines.length - 1].formats();\n    formats = AttributeMap.diff(lastFormats, firstFormats) || {};\n  }\n  quill.deleteText(range, Quill.sources.USER);\n  if (Object.keys(formats).length > 0) {\n    quill.formatLine(range.index, 1, formats, Quill.sources.USER);\n  }\n  quill.setSelection(range.index, Quill.sources.SILENT);\n}\nfunction tableSide(_table, row, cell, offset) {\n  if (row.prev == null && row.next == null) {\n    if (cell.prev == null && cell.next == null) {\n      return offset === 0 ? -1 : 1;\n    }\n    return cell.prev == null ? -1 : 1;\n  }\n  if (row.prev == null) {\n    return -1;\n  }\n  if (row.next == null) {\n    return 1;\n  }\n  return null;\n}\nexport { Keyboard as default, SHORTKEY, normalize, deleteRange };","map":{"version":3,"names":["cloneDeep","isEqual","Delta","AttributeMap","EmbedBlot","Scope","TextBlot","Quill","logger","Module","debug","SHORTKEY","test","navigator","platform","Keyboard","_Module","quill","options","_this","_classCallCheck","_callSuper","bindings","Object","keys","forEach","name","addBinding","key","shiftKey","handleEnter","metaKey","ctrlKey","altKey","userAgent","collapsed","handleBackspace","handleDelete","prefix","suffix","handleDeleteRange","offset","listen","_inherits","_createClass","value","keyBinding","_this2","context","arguments","length","undefined","handler","binding","normalize","warn","Array","isArray","singleBinding","_objectSpread","push","_this3","root","addEventListener","evt","defaultPrevented","isComposing","keyCode","concat","which","matches","filter","match","blot","find","target","scroll","range","getSelection","hasFocus","_this3$quill$getLine","getLine","index","_this3$quill$getLine2","_slicedToArray","line","_this3$quill$getLeaf","getLeaf","_this3$quill$getLeaf2","leafStart","offsetStart","_ref3","_ref4","leafEnd","offsetEnd","prefixText","slice","suffixText","curContext","empty","format","getFormat","event","prevented","some","every","_typeof","call","preventDefault","getLength","formats","_this$quill$getLine","_this$quill$getLine2","delta","retain","_this$quill$getLine3","_this$quill$getLine4","prev","isPrevLineEmpty","statics","blotName","curFormats","prevFormats","diff","formatDelta","compose","updateContents","sources","USER","focus","_this$quill$getLine5","_this$quill$getLine6","_this$quill$getLine7","_this$quill$getLine8","next","nextFormats","deleteRange","_this4","lineFormats","reduce","query","BLOCK","insert","setSelection","SILENT","defaultOptions","bold","makeFormatHandler","italic","underline","indent","outdent","list","makeCodeBlockHandler","deleteText","tab","table","history","cutoff","formatLine","_this$quill$getLine9","_this$quill$getLine10","scrollSelectionIntoView","_this$quill$getLine11","_this$quill$getLine12","header","module","getModule","_module$getTable","getTable","_module$getTable2","row","cell","shift","tableSide","blockquote","_this$quill$getLine13","_this$quill$getLine14","trim","insertText","_this$quill$getLine15","_this$quill$getLine16","numLines","cur","makeEmbedArrowHandler","makeTableArrowHandler","DEFAULTS","_ref","CodeBlock","TAB","lines","getLines","i","insertAt","domNode","textContent","startsWith","deleteAt","update","where","_defineProperty","_this$quill$getLeaf","_this$quill$getLeaf2","leaf","shortKey","up","targetRow","parent","targetCell","children","head","Math","min","targetLine","_ref2","firstFormats","lastFormats","_table","default"],"sources":["../../src/modules/keyboard.ts"],"sourcesContent":["import { cloneDeep, isEqual } from 'lodash-es';\nimport Delta, { AttributeMap } from 'quill-delta';\nimport { EmbedBlot, Scope, TextBlot } from 'parchment';\nimport type { Blot, BlockBlot } from 'parchment';\nimport Quill from '../core/quill.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nimport type { BlockEmbed } from '../blots/block.js';\nimport type { Range } from '../core/selection.js';\n\nconst debug = logger('quill:keyboard');\n\nconst SHORTKEY = /Mac/i.test(navigator.platform) ? 'metaKey' : 'ctrlKey';\n\nexport interface Context {\n  collapsed: boolean;\n  empty: boolean;\n  offset: number;\n  prefix: string;\n  suffix: string;\n  format: Record<string, unknown>;\n  event: KeyboardEvent;\n  line: BlockEmbed | BlockBlot;\n}\n\ninterface BindingObject\n  extends Partial<Omit<Context, 'prefix' | 'suffix' | 'format'>> {\n  key: number | string | string[];\n  shortKey?: boolean | null;\n  shiftKey?: boolean | null;\n  altKey?: boolean | null;\n  metaKey?: boolean | null;\n  ctrlKey?: boolean | null;\n  prefix?: RegExp;\n  suffix?: RegExp;\n  format?: Record<string, unknown> | string[];\n  handler?: (\n    this: { quill: Quill },\n    range: Range,\n    curContext: Context,\n    // eslint-disable-next-line no-use-before-define\n    binding: NormalizedBinding,\n  ) => boolean | void;\n}\n\ntype Binding = BindingObject | string | number;\n\ninterface NormalizedBinding extends Omit<BindingObject, 'key' | 'shortKey'> {\n  key: string | number;\n}\n\ninterface KeyboardOptions {\n  bindings: Record<string, Binding>;\n}\n\ninterface KeyboardOptions {\n  bindings: Record<string, Binding>;\n}\n\nclass Keyboard extends Module<KeyboardOptions> {\n  static DEFAULTS: KeyboardOptions;\n\n  static match(evt: KeyboardEvent, binding: BindingObject) {\n    if (\n      (['altKey', 'ctrlKey', 'metaKey', 'shiftKey'] as const).some((key) => {\n        return !!binding[key] !== evt[key] && binding[key] !== null;\n      })\n    ) {\n      return false;\n    }\n    return binding.key === evt.key || binding.key === evt.which;\n  }\n\n  bindings: Record<string, NormalizedBinding[]>;\n\n  constructor(quill: Quill, options: Partial<KeyboardOptions>) {\n    super(quill, options);\n    this.bindings = {};\n    // @ts-expect-error Fix me later\n    Object.keys(this.options.bindings).forEach((name) => {\n      // @ts-expect-error Fix me later\n      if (this.options.bindings[name]) {\n        // @ts-expect-error Fix me later\n        this.addBinding(this.options.bindings[name]);\n      }\n    });\n    this.addBinding({ key: 'Enter', shiftKey: null }, this.handleEnter);\n    this.addBinding(\n      { key: 'Enter', metaKey: null, ctrlKey: null, altKey: null },\n      () => {},\n    );\n    if (/Firefox/i.test(navigator.userAgent)) {\n      // Need to handle delete and backspace for Firefox in the general case #1171\n      this.addBinding(\n        { key: 'Backspace' },\n        { collapsed: true },\n        this.handleBackspace,\n      );\n      this.addBinding(\n        { key: 'Delete' },\n        { collapsed: true },\n        this.handleDelete,\n      );\n    } else {\n      this.addBinding(\n        { key: 'Backspace' },\n        { collapsed: true, prefix: /^.?$/ },\n        this.handleBackspace,\n      );\n      this.addBinding(\n        { key: 'Delete' },\n        { collapsed: true, suffix: /^.?$/ },\n        this.handleDelete,\n      );\n    }\n    this.addBinding(\n      { key: 'Backspace' },\n      { collapsed: false },\n      this.handleDeleteRange,\n    );\n    this.addBinding(\n      { key: 'Delete' },\n      { collapsed: false },\n      this.handleDeleteRange,\n    );\n    this.addBinding(\n      {\n        key: 'Backspace',\n        altKey: null,\n        ctrlKey: null,\n        metaKey: null,\n        shiftKey: null,\n      },\n      { collapsed: true, offset: 0 },\n      this.handleBackspace,\n    );\n    this.listen();\n  }\n\n  addBinding(\n    keyBinding: Binding,\n    context:\n      | Required<BindingObject['handler']>\n      | Partial<Omit<BindingObject, 'key' | 'handler'>> = {},\n    handler:\n      | Required<BindingObject['handler']>\n      | Partial<Omit<BindingObject, 'key' | 'handler'>> = {},\n  ) {\n    const binding = normalize(keyBinding);\n    if (binding == null) {\n      debug.warn('Attempted to add invalid keyboard binding', binding);\n      return;\n    }\n    if (typeof context === 'function') {\n      context = { handler: context };\n    }\n    if (typeof handler === 'function') {\n      handler = { handler };\n    }\n    const keys = Array.isArray(binding.key) ? binding.key : [binding.key];\n    keys.forEach((key) => {\n      const singleBinding = {\n        ...binding,\n        key,\n        ...context,\n        ...handler,\n      };\n      this.bindings[singleBinding.key] = this.bindings[singleBinding.key] || [];\n      this.bindings[singleBinding.key].push(singleBinding);\n    });\n  }\n\n  listen() {\n    this.quill.root.addEventListener('keydown', (evt) => {\n      if (evt.defaultPrevented || evt.isComposing) return;\n\n      // evt.isComposing is false when pressing Enter/Backspace when composing in Safari\n      // https://bugs.webkit.org/show_bug.cgi?id=165004\n      const isComposing =\n        evt.keyCode === 229 && (evt.key === 'Enter' || evt.key === 'Backspace');\n      if (isComposing) return;\n\n      const bindings = (this.bindings[evt.key] || []).concat(\n        this.bindings[evt.which] || [],\n      );\n      const matches = bindings.filter((binding) =>\n        Keyboard.match(evt, binding),\n      );\n      if (matches.length === 0) return;\n      // @ts-expect-error\n      const blot = Quill.find(evt.target, true);\n      if (blot && blot.scroll !== this.quill.scroll) return;\n      const range = this.quill.getSelection();\n      if (range == null || !this.quill.hasFocus()) return;\n      const [line, offset] = this.quill.getLine(range.index);\n      const [leafStart, offsetStart] = this.quill.getLeaf(range.index);\n      const [leafEnd, offsetEnd] =\n        range.length === 0\n          ? [leafStart, offsetStart]\n          : this.quill.getLeaf(range.index + range.length);\n      const prefixText =\n        leafStart instanceof TextBlot\n          ? leafStart.value().slice(0, offsetStart)\n          : '';\n      const suffixText =\n        leafEnd instanceof TextBlot ? leafEnd.value().slice(offsetEnd) : '';\n      const curContext = {\n        collapsed: range.length === 0,\n        // @ts-expect-error Fix me later\n        empty: range.length === 0 && line.length() <= 1,\n        format: this.quill.getFormat(range),\n        line,\n        offset,\n        prefix: prefixText,\n        suffix: suffixText,\n        event: evt,\n      };\n      const prevented = matches.some((binding) => {\n        if (\n          binding.collapsed != null &&\n          binding.collapsed !== curContext.collapsed\n        ) {\n          return false;\n        }\n        if (binding.empty != null && binding.empty !== curContext.empty) {\n          return false;\n        }\n        if (binding.offset != null && binding.offset !== curContext.offset) {\n          return false;\n        }\n        if (Array.isArray(binding.format)) {\n          // any format is present\n          if (binding.format.every((name) => curContext.format[name] == null)) {\n            return false;\n          }\n        } else if (typeof binding.format === 'object') {\n          // all formats must match\n          if (\n            !Object.keys(binding.format).every((name) => {\n              // @ts-expect-error Fix me later\n              if (binding.format[name] === true)\n                return curContext.format[name] != null;\n              // @ts-expect-error Fix me later\n              if (binding.format[name] === false)\n                return curContext.format[name] == null;\n              // @ts-expect-error Fix me later\n              return isEqual(binding.format[name], curContext.format[name]);\n            })\n          ) {\n            return false;\n          }\n        }\n        if (binding.prefix != null && !binding.prefix.test(curContext.prefix)) {\n          return false;\n        }\n        if (binding.suffix != null && !binding.suffix.test(curContext.suffix)) {\n          return false;\n        }\n        // @ts-expect-error Fix me later\n        return binding.handler.call(this, range, curContext, binding) !== true;\n      });\n      if (prevented) {\n        evt.preventDefault();\n      }\n    });\n  }\n\n  handleBackspace(range: Range, context: Context) {\n    // Check for astral symbols\n    const length = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]$/.test(context.prefix)\n      ? 2\n      : 1;\n    if (range.index === 0 || this.quill.getLength() <= 1) return;\n    let formats = {};\n    const [line] = this.quill.getLine(range.index);\n    let delta = new Delta().retain(range.index - length).delete(length);\n    if (context.offset === 0) {\n      // Always deleting newline here, length always 1\n      const [prev] = this.quill.getLine(range.index - 1);\n      if (prev) {\n        const isPrevLineEmpty =\n          prev.statics.blotName === 'block' && prev.length() <= 1;\n        if (!isPrevLineEmpty) {\n          // @ts-expect-error Fix me later\n          const curFormats = line.formats();\n          const prevFormats = this.quill.getFormat(range.index - 1, 1);\n          formats = AttributeMap.diff(curFormats, prevFormats) || {};\n          if (Object.keys(formats).length > 0) {\n            // line.length() - 1 targets \\n in line, another -1 for newline being deleted\n            const formatDelta = new Delta()\n              // @ts-expect-error Fix me later\n              .retain(range.index + line.length() - 2)\n              .retain(1, formats);\n            delta = delta.compose(formatDelta);\n          }\n        }\n      }\n    }\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.focus();\n  }\n\n  handleDelete(range: Range, context: Context) {\n    // Check for astral symbols\n    const length = /^[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/.test(context.suffix)\n      ? 2\n      : 1;\n    if (range.index >= this.quill.getLength() - length) return;\n    let formats = {};\n    const [line] = this.quill.getLine(range.index);\n    let delta = new Delta().retain(range.index).delete(length);\n    // @ts-expect-error Fix me later\n    if (context.offset >= line.length() - 1) {\n      const [next] = this.quill.getLine(range.index + 1);\n      if (next) {\n        // @ts-expect-error Fix me later\n        const curFormats = line.formats();\n        const nextFormats = this.quill.getFormat(range.index, 1);\n        formats = AttributeMap.diff(curFormats, nextFormats) || {};\n        if (Object.keys(formats).length > 0) {\n          delta = delta.retain(next.length() - 1).retain(1, formats);\n        }\n      }\n    }\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.focus();\n  }\n\n  handleDeleteRange(range: Range) {\n    deleteRange({ range, quill: this.quill });\n    this.quill.focus();\n  }\n\n  handleEnter(range: Range, context: Context) {\n    const lineFormats = Object.keys(context.format).reduce(\n      (formats: Record<string, unknown>, format) => {\n        if (\n          this.quill.scroll.query(format, Scope.BLOCK) &&\n          !Array.isArray(context.format[format])\n        ) {\n          formats[format] = context.format[format];\n        }\n        return formats;\n      },\n      {},\n    );\n    const delta = new Delta()\n      .retain(range.index)\n      .delete(range.length)\n      .insert('\\n', lineFormats);\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n    this.quill.focus();\n  }\n}\n\nconst defaultOptions: KeyboardOptions = {\n  bindings: {\n    bold: makeFormatHandler('bold'),\n    italic: makeFormatHandler('italic'),\n    underline: makeFormatHandler('underline'),\n    indent: {\n      // highlight tab or tab at beginning of list, indent or blockquote\n      key: 'Tab',\n      format: ['blockquote', 'indent', 'list'],\n      handler(range, context) {\n        if (context.collapsed && context.offset !== 0) return true;\n        this.quill.format('indent', '+1', Quill.sources.USER);\n        return false;\n      },\n    },\n    outdent: {\n      key: 'Tab',\n      shiftKey: true,\n      format: ['blockquote', 'indent', 'list'],\n      // highlight tab or tab at beginning of list, indent or blockquote\n      handler(range, context) {\n        if (context.collapsed && context.offset !== 0) return true;\n        this.quill.format('indent', '-1', Quill.sources.USER);\n        return false;\n      },\n    },\n    'outdent backspace': {\n      key: 'Backspace',\n      collapsed: true,\n      shiftKey: null,\n      metaKey: null,\n      ctrlKey: null,\n      altKey: null,\n      format: ['indent', 'list'],\n      offset: 0,\n      handler(range, context) {\n        if (context.format.indent != null) {\n          this.quill.format('indent', '-1', Quill.sources.USER);\n        } else if (context.format.list != null) {\n          this.quill.format('list', false, Quill.sources.USER);\n        }\n      },\n    },\n    'indent code-block': makeCodeBlockHandler(true),\n    'outdent code-block': makeCodeBlockHandler(false),\n    'remove tab': {\n      key: 'Tab',\n      shiftKey: true,\n      collapsed: true,\n      prefix: /\\t$/,\n      handler(range) {\n        this.quill.deleteText(range.index - 1, 1, Quill.sources.USER);\n      },\n    },\n    tab: {\n      key: 'Tab',\n      handler(range, context) {\n        if (context.format.table) return true;\n        this.quill.history.cutoff();\n        const delta = new Delta()\n          .retain(range.index)\n          .delete(range.length)\n          .insert('\\t');\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.history.cutoff();\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        return false;\n      },\n    },\n    'blockquote empty enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['blockquote'],\n      empty: true,\n      handler() {\n        this.quill.format('blockquote', false, Quill.sources.USER);\n      },\n    },\n    'list empty enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['list'],\n      empty: true,\n      handler(range, context) {\n        const formats: Record<string, unknown> = { list: false };\n        if (context.format.indent) {\n          formats.indent = false;\n        }\n        this.quill.formatLine(\n          range.index,\n          range.length,\n          formats,\n          Quill.sources.USER,\n        );\n      },\n    },\n    'checklist enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: { list: 'checked' },\n      handler(range) {\n        const [line, offset] = this.quill.getLine(range.index);\n        const formats = {\n          // @ts-expect-error Fix me later\n          ...line.formats(),\n          list: 'checked',\n        };\n        const delta = new Delta()\n          .retain(range.index)\n          .insert('\\n', formats)\n          // @ts-expect-error Fix me later\n          .retain(line.length() - offset - 1)\n          .retain(1, { list: 'unchecked' });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        this.quill.scrollSelectionIntoView();\n      },\n    },\n    'header enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['header'],\n      suffix: /^$/,\n      handler(range, context) {\n        const [line, offset] = this.quill.getLine(range.index);\n        const delta = new Delta()\n          .retain(range.index)\n          .insert('\\n', context.format)\n          // @ts-expect-error Fix me later\n          .retain(line.length() - offset - 1)\n          .retain(1, { header: null });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        this.quill.scrollSelectionIntoView();\n      },\n    },\n    'table backspace': {\n      key: 'Backspace',\n      format: ['table'],\n      collapsed: true,\n      offset: 0,\n      handler() {},\n    },\n    'table delete': {\n      key: 'Delete',\n      format: ['table'],\n      collapsed: true,\n      suffix: /^$/,\n      handler() {},\n    },\n    'table enter': {\n      key: 'Enter',\n      shiftKey: null,\n      format: ['table'],\n      handler(range) {\n        const module = this.quill.getModule('table');\n        if (module) {\n          // @ts-expect-error\n          const [table, row, cell, offset] = module.getTable(range);\n          const shift = tableSide(table, row, cell, offset);\n          if (shift == null) return;\n          let index = table.offset();\n          if (shift < 0) {\n            const delta = new Delta().retain(index).insert('\\n');\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(\n              range.index + 1,\n              range.length,\n              Quill.sources.SILENT,\n            );\n          } else if (shift > 0) {\n            index += table.length();\n            const delta = new Delta().retain(index).insert('\\n');\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(index, Quill.sources.USER);\n          }\n        }\n      },\n    },\n    'table tab': {\n      key: 'Tab',\n      shiftKey: null,\n      format: ['table'],\n      handler(range, context) {\n        const { event, line: cell } = context;\n        const offset = cell.offset(this.quill.scroll);\n        if (event.shiftKey) {\n          this.quill.setSelection(offset - 1, Quill.sources.USER);\n        } else {\n          this.quill.setSelection(offset + cell.length(), Quill.sources.USER);\n        }\n      },\n    },\n    'list autofill': {\n      key: ' ',\n      shiftKey: null,\n      collapsed: true,\n      format: {\n        'code-block': false,\n        blockquote: false,\n        table: false,\n      },\n      prefix: /^\\s*?(\\d+\\.|-|\\*|\\[ ?\\]|\\[x\\])$/,\n      handler(range, context) {\n        if (this.quill.scroll.query('list') == null) return true;\n        const { length } = context.prefix;\n        const [line, offset] = this.quill.getLine(range.index);\n        if (offset > length) return true;\n        let value;\n        switch (context.prefix.trim()) {\n          case '[]':\n          case '[ ]':\n            value = 'unchecked';\n            break;\n          case '[x]':\n            value = 'checked';\n            break;\n          case '-':\n          case '*':\n            value = 'bullet';\n            break;\n          default:\n            value = 'ordered';\n        }\n        this.quill.insertText(range.index, ' ', Quill.sources.USER);\n        this.quill.history.cutoff();\n        const delta = new Delta()\n          .retain(range.index - offset)\n          .delete(length + 1)\n          // @ts-expect-error Fix me later\n          .retain(line.length() - 2 - offset)\n          .retain(1, { list: value });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.history.cutoff();\n        this.quill.setSelection(range.index - length, Quill.sources.SILENT);\n        return false;\n      },\n    },\n    'code exit': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['code-block'],\n      prefix: /^$/,\n      suffix: /^\\s*$/,\n      handler(range) {\n        const [line, offset] = this.quill.getLine(range.index);\n        let numLines = 2;\n        let cur = line;\n        while (\n          cur != null &&\n          cur.length() <= 1 &&\n          cur.formats()['code-block']\n        ) {\n          // @ts-expect-error\n          cur = cur.prev;\n          numLines -= 1;\n          // Requisite prev lines are empty\n          if (numLines <= 0) {\n            const delta = new Delta()\n              // @ts-expect-error Fix me later\n              .retain(range.index + line.length() - offset - 2)\n              .retain(1, { 'code-block': null })\n              .delete(1);\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(range.index - 1, Quill.sources.SILENT);\n            return false;\n          }\n        }\n        return true;\n      },\n    },\n    'embed left': makeEmbedArrowHandler('ArrowLeft', false),\n    'embed left shift': makeEmbedArrowHandler('ArrowLeft', true),\n    'embed right': makeEmbedArrowHandler('ArrowRight', false),\n    'embed right shift': makeEmbedArrowHandler('ArrowRight', true),\n    'table down': makeTableArrowHandler(false),\n    'table up': makeTableArrowHandler(true),\n  },\n};\n\nKeyboard.DEFAULTS = defaultOptions;\n\nfunction makeCodeBlockHandler(indent: boolean): BindingObject {\n  return {\n    key: 'Tab',\n    shiftKey: !indent,\n    format: { 'code-block': true },\n    handler(range, { event }) {\n      const CodeBlock = this.quill.scroll.query('code-block');\n      // @ts-expect-error\n      const { TAB } = CodeBlock;\n      if (range.length === 0 && !event.shiftKey) {\n        this.quill.insertText(range.index, TAB, Quill.sources.USER);\n        this.quill.setSelection(range.index + TAB.length, Quill.sources.SILENT);\n        return;\n      }\n\n      const lines =\n        range.length === 0\n          ? this.quill.getLines(range.index, 1)\n          : this.quill.getLines(range);\n      let { index, length } = range;\n      lines.forEach((line, i) => {\n        if (indent) {\n          line.insertAt(0, TAB);\n          if (i === 0) {\n            index += TAB.length;\n          } else {\n            length += TAB.length;\n          }\n          // @ts-expect-error Fix me later\n        } else if (line.domNode.textContent.startsWith(TAB)) {\n          line.deleteAt(0, TAB.length);\n          if (i === 0) {\n            index -= TAB.length;\n          } else {\n            length -= TAB.length;\n          }\n        }\n      });\n      this.quill.update(Quill.sources.USER);\n      this.quill.setSelection(index, length, Quill.sources.SILENT);\n    },\n  };\n}\n\nfunction makeEmbedArrowHandler(\n  key: string,\n  shiftKey: boolean | null,\n): BindingObject {\n  const where = key === 'ArrowLeft' ? 'prefix' : 'suffix';\n  return {\n    key,\n    shiftKey,\n    altKey: null,\n    [where]: /^$/,\n    handler(range) {\n      let { index } = range;\n      if (key === 'ArrowRight') {\n        index += range.length + 1;\n      }\n      const [leaf] = this.quill.getLeaf(index);\n      if (!(leaf instanceof EmbedBlot)) return true;\n      if (key === 'ArrowLeft') {\n        if (shiftKey) {\n          this.quill.setSelection(\n            range.index - 1,\n            range.length + 1,\n            Quill.sources.USER,\n          );\n        } else {\n          this.quill.setSelection(range.index - 1, Quill.sources.USER);\n        }\n      } else if (shiftKey) {\n        this.quill.setSelection(\n          range.index,\n          range.length + 1,\n          Quill.sources.USER,\n        );\n      } else {\n        this.quill.setSelection(\n          range.index + range.length + 1,\n          Quill.sources.USER,\n        );\n      }\n      return false;\n    },\n  };\n}\n\nfunction makeFormatHandler(format: string): BindingObject {\n  return {\n    key: format[0],\n    shortKey: true,\n    handler(range, context) {\n      this.quill.format(format, !context.format[format], Quill.sources.USER);\n    },\n  };\n}\n\nfunction makeTableArrowHandler(up: boolean): BindingObject {\n  return {\n    key: up ? 'ArrowUp' : 'ArrowDown',\n    collapsed: true,\n    format: ['table'],\n    handler(range, context) {\n      // TODO move to table module\n      const key = up ? 'prev' : 'next';\n      const cell = context.line;\n      const targetRow = cell.parent[key];\n      if (targetRow != null) {\n        if (targetRow.statics.blotName === 'table-row') {\n          // @ts-expect-error\n          let targetCell = targetRow.children.head;\n          let cur = cell;\n          while (cur.prev != null) {\n            // @ts-expect-error\n            cur = cur.prev;\n            targetCell = targetCell.next;\n          }\n          const index =\n            targetCell.offset(this.quill.scroll) +\n            Math.min(context.offset, targetCell.length() - 1);\n          this.quill.setSelection(index, 0, Quill.sources.USER);\n        }\n      } else {\n        // @ts-expect-error\n        const targetLine = cell.table()[key];\n        if (targetLine != null) {\n          if (up) {\n            this.quill.setSelection(\n              targetLine.offset(this.quill.scroll) + targetLine.length() - 1,\n              0,\n              Quill.sources.USER,\n            );\n          } else {\n            this.quill.setSelection(\n              targetLine.offset(this.quill.scroll),\n              0,\n              Quill.sources.USER,\n            );\n          }\n        }\n      }\n      return false;\n    },\n  };\n}\n\nfunction normalize(binding: Binding): BindingObject | null {\n  if (typeof binding === 'string' || typeof binding === 'number') {\n    binding = { key: binding };\n  } else if (typeof binding === 'object') {\n    binding = cloneDeep(binding);\n  } else {\n    return null;\n  }\n  if (binding.shortKey) {\n    binding[SHORTKEY] = binding.shortKey;\n    delete binding.shortKey;\n  }\n  return binding;\n}\n\n// TODO: Move into quill.ts or editor.ts\nfunction deleteRange({ quill, range }: { quill: Quill; range: Range }) {\n  const lines = quill.getLines(range);\n  let formats = {};\n  if (lines.length > 1) {\n    const firstFormats = lines[0].formats();\n    const lastFormats = lines[lines.length - 1].formats();\n    formats = AttributeMap.diff(lastFormats, firstFormats) || {};\n  }\n  quill.deleteText(range, Quill.sources.USER);\n  if (Object.keys(formats).length > 0) {\n    quill.formatLine(range.index, 1, formats, Quill.sources.USER);\n  }\n  quill.setSelection(range.index, Quill.sources.SILENT);\n}\n\nfunction tableSide(_table: unknown, row: Blot, cell: Blot, offset: number) {\n  if (row.prev == null && row.next == null) {\n    if (cell.prev == null && cell.next == null) {\n      return offset === 0 ? -1 : 1;\n    }\n    return cell.prev == null ? -1 : 1;\n  }\n  if (row.prev == null) {\n    return -1;\n  }\n  if (row.next == null) {\n    return 1;\n  }\n  return null;\n}\n\nexport { Keyboard as default, SHORTKEY, normalize, deleteRange };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}