{"ast":null,"code":"import _defineProperty from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _superPropGet from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/superPropGet.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.timers.js\";\nimport Delta from 'quill-delta';\nimport { ClassAttributor, Scope } from 'parchment';\nimport Inline from '../blots/inline.js';\nimport Quill from '../core/quill.js';\nimport Module from '../core/module.js';\nimport { blockDelta } from '../blots/block.js';\nimport BreakBlot from '../blots/break.js';\nimport CursorBlot from '../blots/cursor.js';\nimport TextBlot, { escapeText } from '../blots/text.js';\nimport CodeBlock, { CodeBlockContainer } from '../formats/code.js';\nimport { traverse } from './clipboard.js';\nvar TokenAttributor = new ClassAttributor('code-token', 'hljs', {\n  scope: Scope.INLINE\n});\nvar CodeToken = /*#__PURE__*/function (_Inline) {\n  function CodeToken(scroll, domNode, value) {\n    var _this;\n    _classCallCheck(this, CodeToken);\n    // @ts-expect-error\n    _this = _callSuper(this, CodeToken, [scroll, domNode, value]);\n    TokenAttributor.add(_this.domNode, value);\n    return _this;\n  }\n  _inherits(CodeToken, _Inline);\n  return _createClass(CodeToken, [{\n    key: \"format\",\n    value: function format(_format, value) {\n      if (_format !== CodeToken.blotName) {\n        _superPropGet(CodeToken, \"format\", this, 3)([_format, value]);\n      } else if (value) {\n        TokenAttributor.add(this.domNode, value);\n      } else {\n        TokenAttributor.remove(this.domNode);\n        this.domNode.classList.remove(this.statics.className);\n      }\n    }\n  }, {\n    key: \"optimize\",\n    value: function optimize() {\n      // @ts-expect-error\n      _superPropGet(CodeToken, \"optimize\", this, 3)(arguments);\n      if (!TokenAttributor.value(this.domNode)) {\n        this.unwrap();\n      }\n    }\n  }], [{\n    key: \"formats\",\n    value: function formats(node, scroll) {\n      while (node != null && node !== scroll.domNode) {\n        if (node.classList && node.classList.contains(CodeBlock.className)) {\n          // @ts-expect-error\n          return _superPropGet(CodeToken, \"formats\", this, 2)([node, scroll]);\n        }\n        // @ts-expect-error\n        node = node.parentNode;\n      }\n      return undefined;\n    }\n  }]);\n}(Inline);\nCodeToken.blotName = 'code-token';\nCodeToken.className = 'ql-token';\nvar SyntaxCodeBlock = /*#__PURE__*/function (_CodeBlock) {\n  function SyntaxCodeBlock() {\n    _classCallCheck(this, SyntaxCodeBlock);\n    return _callSuper(this, SyntaxCodeBlock, arguments);\n  }\n  _inherits(SyntaxCodeBlock, _CodeBlock);\n  return _createClass(SyntaxCodeBlock, [{\n    key: \"format\",\n    value:\n    // Syntax module will register\n\n    function format(name, value) {\n      if (name === this.statics.blotName && value) {\n        // @ts-expect-error\n        this.domNode.setAttribute('data-language', value);\n      } else {\n        _superPropGet(SyntaxCodeBlock, \"format\", this, 3)([name, value]);\n      }\n    }\n  }, {\n    key: \"replaceWith\",\n    value: function replaceWith(name, value) {\n      this.formatAt(0, this.length(), CodeToken.blotName, false);\n      return _superPropGet(SyntaxCodeBlock, \"replaceWith\", this, 3)([name, value]);\n    }\n  }], [{\n    key: \"create\",\n    value: function create(value) {\n      var domNode = _superPropGet(SyntaxCodeBlock, \"create\", this, 2)([value]);\n      if (typeof value === 'string') {\n        domNode.setAttribute('data-language', value);\n      }\n      return domNode;\n    }\n  }, {\n    key: \"formats\",\n    value: function formats(domNode) {\n      // @ts-expect-error\n      return domNode.getAttribute('data-language') || 'plain';\n    }\n  }, {\n    key: \"register\",\n    value: function register() {}\n  }]);\n}(CodeBlock);\nvar SyntaxCodeBlockContainer = /*#__PURE__*/function (_CodeBlockContainer) {\n  function SyntaxCodeBlockContainer() {\n    _classCallCheck(this, SyntaxCodeBlockContainer);\n    return _callSuper(this, SyntaxCodeBlockContainer, arguments);\n  }\n  _inherits(SyntaxCodeBlockContainer, _CodeBlockContainer);\n  return _createClass(SyntaxCodeBlockContainer, [{\n    key: \"attach\",\n    value: function attach() {\n      _superPropGet(SyntaxCodeBlockContainer, \"attach\", this, 3)([]);\n      this.forceNext = false;\n      // @ts-expect-error\n      this.scroll.emitMount(this);\n    }\n  }, {\n    key: \"format\",\n    value: function format(name, value) {\n      if (name === SyntaxCodeBlock.blotName) {\n        this.forceNext = true;\n        this.children.forEach(function (child) {\n          // @ts-expect-error\n          child.format(name, value);\n        });\n      }\n    }\n  }, {\n    key: \"formatAt\",\n    value: function formatAt(index, length, name, value) {\n      if (name === SyntaxCodeBlock.blotName) {\n        this.forceNext = true;\n      }\n      _superPropGet(SyntaxCodeBlockContainer, \"formatAt\", this, 3)([index, length, name, value]);\n    }\n  }, {\n    key: \"highlight\",\n    value: function highlight(_highlight) {\n      var _this2 = this;\n      var forced = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (this.children.head == null) return;\n      var nodes = Array.from(this.domNode.childNodes).filter(function (node) {\n        return node !== _this2.uiNode;\n      });\n      var text = \"\".concat(nodes.map(function (node) {\n        return node.textContent;\n      }).join('\\n'), \"\\n\");\n      var language = SyntaxCodeBlock.formats(this.children.head.domNode);\n      if (forced || this.forceNext || this.cachedText !== text) {\n        if (text.trim().length > 0 || this.cachedText == null) {\n          var oldDelta = this.children.reduce(function (delta, child) {\n            // @ts-expect-error\n            return delta.concat(blockDelta(child, false));\n          }, new Delta());\n          var delta = _highlight(text, language);\n          oldDelta.diff(delta).reduce(function (index, _ref) {\n            var retain = _ref.retain,\n              attributes = _ref.attributes;\n            // Should be all retains\n            if (!retain) return index;\n            if (attributes) {\n              Object.keys(attributes).forEach(function (format) {\n                if ([SyntaxCodeBlock.blotName, CodeToken.blotName].includes(format)) {\n                  // @ts-expect-error\n                  _this2.formatAt(index, retain, format, attributes[format]);\n                }\n              });\n            }\n            // @ts-expect-error\n            return index + retain;\n          }, 0);\n        }\n        this.cachedText = text;\n        this.forceNext = false;\n      }\n    }\n  }, {\n    key: \"html\",\n    value: function html(index, length) {\n      var _this$children$find = this.children.find(index),\n        _this$children$find2 = _slicedToArray(_this$children$find, 1),\n        codeBlock = _this$children$find2[0];\n      var language = codeBlock ? SyntaxCodeBlock.formats(codeBlock.domNode) : 'plain';\n      return \"<pre data-language=\\\"\".concat(language, \"\\\">\\n\").concat(escapeText(this.code(index, length)), \"\\n</pre>\");\n    }\n  }, {\n    key: \"optimize\",\n    value: function optimize(context) {\n      _superPropGet(SyntaxCodeBlockContainer, \"optimize\", this, 3)([context]);\n      if (this.parent != null && this.children.head != null && this.uiNode != null) {\n        var language = SyntaxCodeBlock.formats(this.children.head.domNode);\n        // @ts-expect-error\n        if (language !== this.uiNode.value) {\n          // @ts-expect-error\n          this.uiNode.value = language;\n        }\n      }\n    }\n  }]);\n}(CodeBlockContainer);\nSyntaxCodeBlockContainer.allowedChildren = [SyntaxCodeBlock];\nSyntaxCodeBlock.requiredContainer = SyntaxCodeBlockContainer;\nSyntaxCodeBlock.allowedChildren = [CodeToken, CursorBlot, TextBlot, BreakBlot];\nvar highlight = function highlight(lib, language, text) {\n  if (typeof lib.versionString === 'string') {\n    var majorVersion = lib.versionString.split('.')[0];\n    if (parseInt(majorVersion, 10) >= 11) {\n      return lib.highlight(text, {\n        language: language\n      }).value;\n    }\n  }\n  return lib.highlight(language, text).value;\n};\nvar Syntax = /*#__PURE__*/function (_Module) {\n  function Syntax(quill, options) {\n    var _this3;\n    _classCallCheck(this, Syntax);\n    _this3 = _callSuper(this, Syntax, [quill, options]);\n    if (_this3.options.hljs == null) {\n      throw new Error('Syntax module requires highlight.js. Please include the library on the page before Quill.');\n    }\n    // @ts-expect-error Fix me later\n    _this3.languages = _this3.options.languages.reduce(function (memo, _ref2) {\n      var key = _ref2.key;\n      memo[key] = true;\n      return memo;\n    }, {});\n    _this3.highlightBlot = _this3.highlightBlot.bind(_this3);\n    _this3.initListener();\n    _this3.initTimer();\n    return _this3;\n  }\n  _inherits(Syntax, _Module);\n  return _createClass(Syntax, [{\n    key: \"initListener\",\n    value: function initListener() {\n      var _this4 = this;\n      this.quill.on(Quill.events.SCROLL_BLOT_MOUNT, function (blot) {\n        if (!(blot instanceof SyntaxCodeBlockContainer)) return;\n        var select = _this4.quill.root.ownerDocument.createElement('select');\n        // @ts-expect-error Fix me later\n        _this4.options.languages.forEach(function (_ref3) {\n          var key = _ref3.key,\n            label = _ref3.label;\n          var option = select.ownerDocument.createElement('option');\n          option.textContent = label;\n          option.setAttribute('value', key);\n          select.appendChild(option);\n        });\n        select.addEventListener('change', function () {\n          blot.format(SyntaxCodeBlock.blotName, select.value);\n          _this4.quill.root.focus(); // Prevent scrolling\n          _this4.highlight(blot, true);\n        });\n        if (blot.uiNode == null) {\n          blot.attachUI(select);\n          if (blot.children.head) {\n            select.value = SyntaxCodeBlock.formats(blot.children.head.domNode);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"initTimer\",\n    value: function initTimer() {\n      var _this5 = this;\n      var timer = null;\n      this.quill.on(Quill.events.SCROLL_OPTIMIZE, function () {\n        if (timer) {\n          clearTimeout(timer);\n        }\n        timer = setTimeout(function () {\n          _this5.highlight();\n          timer = null;\n        }, _this5.options.interval);\n      });\n    }\n  }, {\n    key: \"highlight\",\n    value: function highlight() {\n      var _this6 = this;\n      var blot = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (this.quill.selection.composing) return;\n      this.quill.update(Quill.sources.USER);\n      var range = this.quill.getSelection();\n      var blots = blot == null ? this.quill.scroll.descendants(SyntaxCodeBlockContainer) : [blot];\n      blots.forEach(function (container) {\n        container.highlight(_this6.highlightBlot, force);\n      });\n      this.quill.update(Quill.sources.SILENT);\n      if (range != null) {\n        this.quill.setSelection(range, Quill.sources.SILENT);\n      }\n    }\n  }, {\n    key: \"highlightBlot\",\n    value: function highlightBlot(text) {\n      var language = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'plain';\n      language = this.languages[language] ? language : 'plain';\n      if (language === 'plain') {\n        return escapeText(text).split('\\n').reduce(function (delta, line, i) {\n          if (i !== 0) {\n            delta.insert('\\n', _defineProperty({}, CodeBlock.blotName, language));\n          }\n          return delta.insert(line);\n        }, new Delta());\n      }\n      var container = this.quill.root.ownerDocument.createElement('div');\n      container.classList.add(CodeBlock.className);\n      container.innerHTML = highlight(this.options.hljs, language, text);\n      return traverse(this.quill.scroll, container, [function (node, delta) {\n        // @ts-expect-error\n        var value = TokenAttributor.value(node);\n        if (value) {\n          return delta.compose(new Delta().retain(delta.length(), _defineProperty({}, CodeToken.blotName, value)));\n        }\n        return delta;\n      }], [function (node, delta) {\n        // @ts-expect-error\n        return node.data.split('\\n').reduce(function (memo, nodeText, i) {\n          if (i !== 0) memo.insert('\\n', _defineProperty({}, CodeBlock.blotName, language));\n          return memo.insert(nodeText);\n        }, delta);\n      }], new WeakMap());\n    }\n  }], [{\n    key: \"register\",\n    value: function register() {\n      Quill.register(CodeToken, true);\n      Quill.register(SyntaxCodeBlock, true);\n      Quill.register(SyntaxCodeBlockContainer, true);\n    }\n  }]);\n}(Module);\nSyntax.DEFAULTS = {\n  hljs: function () {\n    return window.hljs;\n  }(),\n  interval: 1000,\n  languages: [{\n    key: 'plain',\n    label: 'Plain'\n  }, {\n    key: 'bash',\n    label: 'Bash'\n  }, {\n    key: 'cpp',\n    label: 'C++'\n  }, {\n    key: 'cs',\n    label: 'C#'\n  }, {\n    key: 'css',\n    label: 'CSS'\n  }, {\n    key: 'diff',\n    label: 'Diff'\n  }, {\n    key: 'xml',\n    label: 'HTML/XML'\n  }, {\n    key: 'java',\n    label: 'Java'\n  }, {\n    key: 'javascript',\n    label: 'JavaScript'\n  }, {\n    key: 'markdown',\n    label: 'Markdown'\n  }, {\n    key: 'php',\n    label: 'PHP'\n  }, {\n    key: 'python',\n    label: 'Python'\n  }, {\n    key: 'ruby',\n    label: 'Ruby'\n  }, {\n    key: 'sql',\n    label: 'SQL'\n  }]\n};\nexport { SyntaxCodeBlock as CodeBlock, CodeToken, Syntax as default };","map":{"version":3,"names":["Delta","ClassAttributor","Scope","Inline","Quill","Module","blockDelta","BreakBlot","CursorBlot","TextBlot","escapeText","CodeBlock","CodeBlockContainer","traverse","TokenAttributor","scope","INLINE","CodeToken","_Inline","scroll","domNode","value","_this","_classCallCheck","_callSuper","add","_inherits","_createClass","key","format","blotName","_superPropGet","remove","classList","statics","className","optimize","arguments","unwrap","formats","node","contains","parentNode","undefined","SyntaxCodeBlock","_CodeBlock","name","setAttribute","replaceWith","formatAt","length","create","getAttribute","register","SyntaxCodeBlockContainer","_CodeBlockContainer","attach","forceNext","emitMount","children","forEach","child","index","highlight","_this2","forced","head","nodes","Array","from","childNodes","filter","uiNode","text","concat","map","textContent","join","language","cachedText","trim","oldDelta","reduce","delta","diff","_ref","retain","attributes","Object","keys","includes","html","_this$children$find","find","_this$children$find2","_slicedToArray","codeBlock","code","context","parent","allowedChildren","requiredContainer","lib","versionString","majorVersion","split","parseInt","Syntax","_Module","quill","options","_this3","hljs","Error","languages","memo","_ref2","highlightBlot","bind","initListener","initTimer","_this4","on","events","SCROLL_BLOT_MOUNT","blot","select","root","ownerDocument","createElement","_ref3","label","option","appendChild","addEventListener","focus","attachUI","_this5","timer","SCROLL_OPTIMIZE","clearTimeout","setTimeout","interval","_this6","force","selection","composing","update","sources","USER","range","getSelection","blots","descendants","container","SILENT","setSelection","line","i","insert","_defineProperty","innerHTML","compose","data","nodeText","WeakMap","DEFAULTS","window","default"],"sources":["../../src/modules/syntax.ts"],"sourcesContent":["import Delta from 'quill-delta';\nimport { ClassAttributor, Scope } from 'parchment';\nimport type { Blot, ScrollBlot } from 'parchment';\nimport Inline from '../blots/inline.js';\nimport Quill from '../core/quill.js';\nimport Module from '../core/module.js';\nimport { blockDelta } from '../blots/block.js';\nimport BreakBlot from '../blots/break.js';\nimport CursorBlot from '../blots/cursor.js';\nimport TextBlot, { escapeText } from '../blots/text.js';\nimport CodeBlock, { CodeBlockContainer } from '../formats/code.js';\nimport { traverse } from './clipboard.js';\n\nconst TokenAttributor = new ClassAttributor('code-token', 'hljs', {\n  scope: Scope.INLINE,\n});\nclass CodeToken extends Inline {\n  static formats(node: Element, scroll: ScrollBlot) {\n    while (node != null && node !== scroll.domNode) {\n      if (node.classList && node.classList.contains(CodeBlock.className)) {\n        // @ts-expect-error\n        return super.formats(node, scroll);\n      }\n      // @ts-expect-error\n      node = node.parentNode;\n    }\n    return undefined;\n  }\n\n  constructor(scroll: ScrollBlot, domNode: Node, value: unknown) {\n    // @ts-expect-error\n    super(scroll, domNode, value);\n    TokenAttributor.add(this.domNode, value);\n  }\n\n  format(format: string, value: unknown) {\n    if (format !== CodeToken.blotName) {\n      super.format(format, value);\n    } else if (value) {\n      TokenAttributor.add(this.domNode, value);\n    } else {\n      TokenAttributor.remove(this.domNode);\n      this.domNode.classList.remove(this.statics.className);\n    }\n  }\n\n  optimize(...args: unknown[]) {\n    // @ts-expect-error\n    super.optimize(...args);\n    if (!TokenAttributor.value(this.domNode)) {\n      this.unwrap();\n    }\n  }\n}\nCodeToken.blotName = 'code-token';\nCodeToken.className = 'ql-token';\n\nclass SyntaxCodeBlock extends CodeBlock {\n  static create(value: unknown) {\n    const domNode = super.create(value);\n    if (typeof value === 'string') {\n      domNode.setAttribute('data-language', value);\n    }\n    return domNode;\n  }\n\n  static formats(domNode: Node) {\n    // @ts-expect-error\n    return domNode.getAttribute('data-language') || 'plain';\n  }\n\n  static register() {} // Syntax module will register\n\n  format(name: string, value: unknown) {\n    if (name === this.statics.blotName && value) {\n      // @ts-expect-error\n      this.domNode.setAttribute('data-language', value);\n    } else {\n      super.format(name, value);\n    }\n  }\n\n  replaceWith(name: string | Blot, value?: any) {\n    this.formatAt(0, this.length(), CodeToken.blotName, false);\n    return super.replaceWith(name, value);\n  }\n}\n\nclass SyntaxCodeBlockContainer extends CodeBlockContainer {\n  forceNext?: boolean;\n  cachedText?: string | null;\n\n  attach() {\n    super.attach();\n    this.forceNext = false;\n    // @ts-expect-error\n    this.scroll.emitMount(this);\n  }\n\n  format(name: string, value: unknown) {\n    if (name === SyntaxCodeBlock.blotName) {\n      this.forceNext = true;\n      this.children.forEach((child) => {\n        // @ts-expect-error\n        child.format(name, value);\n      });\n    }\n  }\n\n  formatAt(index: number, length: number, name: string, value: unknown) {\n    if (name === SyntaxCodeBlock.blotName) {\n      this.forceNext = true;\n    }\n    super.formatAt(index, length, name, value);\n  }\n\n  highlight(\n    highlight: (text: string, language: string) => Delta,\n    forced = false,\n  ) {\n    if (this.children.head == null) return;\n    const nodes = Array.from(this.domNode.childNodes).filter(\n      (node) => node !== this.uiNode,\n    );\n    const text = `${nodes.map((node) => node.textContent).join('\\n')}\\n`;\n    const language = SyntaxCodeBlock.formats(this.children.head.domNode);\n    if (forced || this.forceNext || this.cachedText !== text) {\n      if (text.trim().length > 0 || this.cachedText == null) {\n        const oldDelta = this.children.reduce((delta, child) => {\n          // @ts-expect-error\n          return delta.concat(blockDelta(child, false));\n        }, new Delta());\n        const delta = highlight(text, language);\n        oldDelta.diff(delta).reduce((index, { retain, attributes }) => {\n          // Should be all retains\n          if (!retain) return index;\n          if (attributes) {\n            Object.keys(attributes).forEach((format) => {\n              if (\n                [SyntaxCodeBlock.blotName, CodeToken.blotName].includes(format)\n              ) {\n                // @ts-expect-error\n                this.formatAt(index, retain, format, attributes[format]);\n              }\n            });\n          }\n          // @ts-expect-error\n          return index + retain;\n        }, 0);\n      }\n      this.cachedText = text;\n      this.forceNext = false;\n    }\n  }\n\n  html(index: number, length: number) {\n    const [codeBlock] = this.children.find(index);\n    const language = codeBlock\n      ? SyntaxCodeBlock.formats(codeBlock.domNode)\n      : 'plain';\n\n    return `<pre data-language=\"${language}\">\\n${escapeText(\n      this.code(index, length),\n    )}\\n</pre>`;\n  }\n\n  optimize(context: Record<string, any>) {\n    super.optimize(context);\n    if (\n      this.parent != null &&\n      this.children.head != null &&\n      this.uiNode != null\n    ) {\n      const language = SyntaxCodeBlock.formats(this.children.head.domNode);\n      // @ts-expect-error\n      if (language !== this.uiNode.value) {\n        // @ts-expect-error\n        this.uiNode.value = language;\n      }\n    }\n  }\n}\n\nSyntaxCodeBlockContainer.allowedChildren = [SyntaxCodeBlock];\nSyntaxCodeBlock.requiredContainer = SyntaxCodeBlockContainer;\nSyntaxCodeBlock.allowedChildren = [CodeToken, CursorBlot, TextBlot, BreakBlot];\n\ninterface SyntaxOptions {\n  interval: number;\n  languages: { key: string; label: string }[];\n  hljs: any;\n}\n\nconst highlight = (lib: any, language: string, text: string) => {\n  if (typeof lib.versionString === 'string') {\n    const majorVersion = lib.versionString.split('.')[0];\n    if (parseInt(majorVersion, 10) >= 11) {\n      return lib.highlight(text, { language }).value;\n    }\n  }\n  return lib.highlight(language, text).value;\n};\n\nclass Syntax extends Module<SyntaxOptions> {\n  static DEFAULTS: SyntaxOptions & { hljs: any };\n\n  static register() {\n    Quill.register(CodeToken, true);\n    Quill.register(SyntaxCodeBlock, true);\n    Quill.register(SyntaxCodeBlockContainer, true);\n  }\n\n  languages: Record<string, true>;\n\n  constructor(quill: Quill, options: Partial<SyntaxOptions>) {\n    super(quill, options);\n    if (this.options.hljs == null) {\n      throw new Error(\n        'Syntax module requires highlight.js. Please include the library on the page before Quill.',\n      );\n    }\n    // @ts-expect-error Fix me later\n    this.languages = this.options.languages.reduce(\n      (memo: Record<string, unknown>, { key }) => {\n        memo[key] = true;\n        return memo;\n      },\n      {},\n    );\n    this.highlightBlot = this.highlightBlot.bind(this);\n    this.initListener();\n    this.initTimer();\n  }\n\n  initListener() {\n    this.quill.on(Quill.events.SCROLL_BLOT_MOUNT, (blot: Blot) => {\n      if (!(blot instanceof SyntaxCodeBlockContainer)) return;\n      const select = this.quill.root.ownerDocument.createElement('select');\n      // @ts-expect-error Fix me later\n      this.options.languages.forEach(({ key, label }) => {\n        const option = select.ownerDocument.createElement('option');\n        option.textContent = label;\n        option.setAttribute('value', key);\n        select.appendChild(option);\n      });\n      select.addEventListener('change', () => {\n        blot.format(SyntaxCodeBlock.blotName, select.value);\n        this.quill.root.focus(); // Prevent scrolling\n        this.highlight(blot, true);\n      });\n      if (blot.uiNode == null) {\n        blot.attachUI(select);\n        if (blot.children.head) {\n          select.value = SyntaxCodeBlock.formats(blot.children.head.domNode);\n        }\n      }\n    });\n  }\n\n  initTimer() {\n    let timer: ReturnType<typeof setTimeout> | null = null;\n    this.quill.on(Quill.events.SCROLL_OPTIMIZE, () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      timer = setTimeout(() => {\n        this.highlight();\n        timer = null;\n      }, this.options.interval);\n    });\n  }\n\n  highlight(blot: SyntaxCodeBlockContainer | null = null, force = false) {\n    if (this.quill.selection.composing) return;\n    this.quill.update(Quill.sources.USER);\n    const range = this.quill.getSelection();\n    const blots =\n      blot == null\n        ? this.quill.scroll.descendants(SyntaxCodeBlockContainer)\n        : [blot];\n    blots.forEach((container) => {\n      container.highlight(this.highlightBlot, force);\n    });\n    this.quill.update(Quill.sources.SILENT);\n    if (range != null) {\n      this.quill.setSelection(range, Quill.sources.SILENT);\n    }\n  }\n\n  highlightBlot(text: string, language = 'plain') {\n    language = this.languages[language] ? language : 'plain';\n    if (language === 'plain') {\n      return escapeText(text)\n        .split('\\n')\n        .reduce((delta, line, i) => {\n          if (i !== 0) {\n            delta.insert('\\n', { [CodeBlock.blotName]: language });\n          }\n          return delta.insert(line);\n        }, new Delta());\n    }\n    const container = this.quill.root.ownerDocument.createElement('div');\n    container.classList.add(CodeBlock.className);\n    container.innerHTML = highlight(this.options.hljs, language, text);\n    return traverse(\n      this.quill.scroll,\n      container,\n      [\n        (node, delta) => {\n          // @ts-expect-error\n          const value = TokenAttributor.value(node);\n          if (value) {\n            return delta.compose(\n              new Delta().retain(delta.length(), {\n                [CodeToken.blotName]: value,\n              }),\n            );\n          }\n          return delta;\n        },\n      ],\n      [\n        (node, delta) => {\n          // @ts-expect-error\n          return node.data.split('\\n').reduce((memo, nodeText, i) => {\n            if (i !== 0) memo.insert('\\n', { [CodeBlock.blotName]: language });\n            return memo.insert(nodeText);\n          }, delta);\n        },\n      ],\n      new WeakMap(),\n    );\n  }\n}\nSyntax.DEFAULTS = {\n  hljs: (() => {\n    return window.hljs;\n  })(),\n  interval: 1000,\n  languages: [\n    { key: 'plain', label: 'Plain' },\n    { key: 'bash', label: 'Bash' },\n    { key: 'cpp', label: 'C++' },\n    { key: 'cs', label: 'C#' },\n    { key: 'css', label: 'CSS' },\n    { key: 'diff', label: 'Diff' },\n    { key: 'xml', label: 'HTML/XML' },\n    { key: 'java', label: 'Java' },\n    { key: 'javascript', label: 'JavaScript' },\n    { key: 'markdown', label: 'Markdown' },\n    { key: 'php', label: 'PHP' },\n    { key: 'python', label: 'Python' },\n    { key: 'ruby', label: 'Ruby' },\n    { key: 'sql', label: 'SQL' },\n  ],\n};\n\nexport { SyntaxCodeBlock as CodeBlock, CodeToken, Syntax as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}