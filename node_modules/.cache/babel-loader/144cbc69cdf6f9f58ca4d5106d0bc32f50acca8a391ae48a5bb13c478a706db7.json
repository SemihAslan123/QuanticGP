{"ast":null,"code":"import _classCallCheck from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _superPropGet from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/superPropGet.js\";\nimport _inherits from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport { ClassAttributor, Scope } from 'parchment';\nvar IndentAttributor = /*#__PURE__*/function (_ClassAttributor) {\n  function IndentAttributor() {\n    _classCallCheck(this, IndentAttributor);\n    return _callSuper(this, IndentAttributor, arguments);\n  }\n  _inherits(IndentAttributor, _ClassAttributor);\n  return _createClass(IndentAttributor, [{\n    key: \"add\",\n    value: function add(node, value) {\n      var normalizedValue = 0;\n      if (value === '+1' || value === '-1') {\n        var indent = this.value(node) || 0;\n        normalizedValue = value === '+1' ? indent + 1 : indent - 1;\n      } else if (typeof value === 'number') {\n        normalizedValue = value;\n      }\n      if (normalizedValue === 0) {\n        this.remove(node);\n        return true;\n      }\n      return _superPropGet(IndentAttributor, \"add\", this, 3)([node, normalizedValue.toString()]);\n    }\n  }, {\n    key: \"canAdd\",\n    value: function canAdd(node, value) {\n      return _superPropGet(IndentAttributor, \"canAdd\", this, 3)([node, value]) || _superPropGet(IndentAttributor, \"canAdd\", this, 3)([node, parseInt(value, 10)]);\n    }\n  }, {\n    key: \"value\",\n    value: function value(node) {\n      return parseInt(_superPropGet(IndentAttributor, \"value\", this, 3)([node]), 10) || undefined; // Don't return NaN\n    }\n  }]);\n}(ClassAttributor);\nvar IndentClass = new IndentAttributor('indent', 'ql-indent', {\n  scope: Scope.BLOCK,\n  // @ts-expect-error\n  whitelist: [1, 2, 3, 4, 5, 6, 7, 8]\n});\nexport default IndentClass;","map":{"version":3,"names":["ClassAttributor","Scope","IndentAttributor","_ClassAttributor","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","add","node","normalizedValue","indent","remove","_superPropGet","toString","canAdd","parseInt","undefined","IndentClass","scope","BLOCK","whitelist"],"sources":["../../src/formats/indent.ts"],"sourcesContent":["import { ClassAttributor, Scope } from 'parchment';\n\nclass IndentAttributor extends ClassAttributor {\n  add(node: HTMLElement, value: string | number) {\n    let normalizedValue = 0;\n    if (value === '+1' || value === '-1') {\n      const indent = this.value(node) || 0;\n      normalizedValue = value === '+1' ? indent + 1 : indent - 1;\n    } else if (typeof value === 'number') {\n      normalizedValue = value;\n    }\n    if (normalizedValue === 0) {\n      this.remove(node);\n      return true;\n    }\n    return super.add(node, normalizedValue.toString());\n  }\n\n  canAdd(node: HTMLElement, value: string) {\n    return super.canAdd(node, value) || super.canAdd(node, parseInt(value, 10));\n  }\n\n  value(node: HTMLElement) {\n    return parseInt(super.value(node), 10) || undefined; // Don't return NaN\n  }\n}\n\nconst IndentClass = new IndentAttributor('indent', 'ql-indent', {\n  scope: Scope.BLOCK,\n  // @ts-expect-error\n  whitelist: [1, 2, 3, 4, 5, 6, 7, 8],\n});\n\nexport default IndentClass;\n"],"mappings":";;;;;;;;;;AAAA,SAASA,eAAe,EAAEC,KAAK,QAAQ,WAAW;AAAA,IAE5CC,gBAAgB,0BAAAC,gBAAA;EAAA,SAAAD,iBAAA;IAAAE,eAAA,OAAAF,gBAAA;IAAA,OAAAG,UAAA,OAAAH,gBAAA,EAAAI,SAAA;EAAA;EAAAC,SAAA,CAAAL,gBAAA,EAAAC,gBAAA;EAAA,OAAAK,YAAA,CAAAN,gBAAA;IAAAO,GAAA;IAAAC,KAAA,EACpB,SAAAC,GAAGA,CAACC,IAAiB,EAAEF,KAAsB,EAAE;MAC7C,IAAIG,eAAe,GAAG,CAAC;MACvB,IAAIH,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,IAAI,EAAE;QACpC,IAAMI,MAAM,GAAG,IAAI,CAACJ,KAAK,CAACE,IAAI,CAAC,IAAI,CAAC;QACpCC,eAAe,GAAGH,KAAK,KAAK,IAAI,GAAGI,MAAM,GAAG,CAAC,GAAGA,MAAM,GAAG,CAAC;MAC5D,CAAC,MAAM,IAAI,OAAOJ,KAAK,KAAK,QAAQ,EAAE;QACpCG,eAAe,GAAGH,KAAK;MACzB;MACA,IAAIG,eAAe,KAAK,CAAC,EAAE;QACzB,IAAI,CAACE,MAAM,CAACH,IAAI,CAAC;QACjB,OAAO,IAAI;MACb;MACA,OAAAI,aAAA,CAAAd,gBAAA,mBAAiBU,IAAI,EAAEC,eAAe,CAACI,QAAQ,CAAC,CAAC;IACnD;EAAA;IAAAR,GAAA;IAAAC,KAAA,EAEA,SAAAQ,MAAMA,CAACN,IAAiB,EAAEF,KAAa,EAAE;MACvC,OAAOM,aAAA,CAAAd,gBAAA,sBAAaU,IAAI,EAAEF,KAAK,MAAAM,aAAA,CAAAd,gBAAA,sBAAkBU,IAAI,EAAEO,QAAQ,CAACT,KAAK,EAAE,EAAE,CAAC,EAAC;IAC7E;EAAA;IAAAD,GAAA;IAAAC,KAAA,EAEA,SAAAA,KAAKA,CAACE,IAAiB,EAAE;MACvB,OAAOO,QAAQ,CAAAH,aAAA,CAAAd,gBAAA,qBAAaU,IAAI,IAAG,EAAE,CAAC,IAAIQ,SAAS,CAAC,CAAC;IACvD;EAAA;AAAA,EAtB6BpB,eAAe;AAyB9C,IAAMqB,WAAW,GAAG,IAAInB,gBAAgB,CAAC,QAAQ,EAAE,WAAW,EAAE;EAC9DoB,KAAK,EAAErB,KAAK,CAACsB,KAAK;EAClB;EACAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AACpC,CAAC,CAAC;AAEF,eAAeH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}