{"ast":null,"code":"import _typeof from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _objectWithoutProperties from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _excluded = [\"modules\"],\n  _excluded2 = [\"modules\"];\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.object.from-entries.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { merge } from 'lodash-es';\nimport * as Parchment from 'parchment';\nimport Delta from 'quill-delta';\nimport Editor from './editor.js';\nimport Emitter from './emitter.js';\nimport instances from './instances.js';\nimport logger from './logger.js';\nimport Module from './module.js';\nimport Selection, { Range } from './selection.js';\nimport Composition from './composition.js';\nimport Theme from './theme.js';\nimport _scrollRectIntoView from './utils/scrollRectIntoView.js';\nimport createRegistryWithFormats from './utils/createRegistryWithFormats.js';\nvar debug = logger('quill');\nvar globalRegistry = new Parchment.Registry();\nParchment.ParentBlot.uiClass = 'ql-ui';\n\n/**\n * Options for initializing a Quill instance\n */\n\n/**\n * Similar to QuillOptions, but with all properties expanded to their default values,\n * and all selectors resolved to HTMLElements.\n */\nvar Quill = /*#__PURE__*/function () {\n  function Quill(container) {\n    var _this = this;\n    _classCallCheck(this, Quill);\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.options = expandConfig(container, options);\n    this.container = this.options.container;\n    if (this.container == null) {\n      debug.error('Invalid Quill container', container);\n      return;\n    }\n    if (this.options.debug) {\n      Quill.debug(this.options.debug);\n    }\n    var html = this.container.innerHTML.trim();\n    this.container.classList.add('ql-container');\n    this.container.innerHTML = '';\n    instances.set(this.container, this);\n    this.root = this.addContainer('ql-editor');\n    this.root.classList.add('ql-blank');\n    this.emitter = new Emitter();\n    var scrollBlotName = Parchment.ScrollBlot.blotName;\n    var ScrollBlot = this.options.registry.query(scrollBlotName);\n    if (!ScrollBlot || !('blotName' in ScrollBlot)) {\n      throw new Error(\"Cannot initialize Quill without \\\"\".concat(scrollBlotName, \"\\\" blot\"));\n    }\n    this.scroll = new ScrollBlot(this.options.registry, this.root, {\n      emitter: this.emitter\n    });\n    this.editor = new Editor(this.scroll);\n    this.selection = new Selection(this.scroll, this.emitter);\n    this.composition = new Composition(this.scroll, this.emitter);\n    this.theme = new this.options.theme(this, this.options); // eslint-disable-line new-cap\n    this.keyboard = this.theme.addModule('keyboard');\n    this.clipboard = this.theme.addModule('clipboard');\n    this.history = this.theme.addModule('history');\n    this.uploader = this.theme.addModule('uploader');\n    this.theme.addModule('input');\n    this.theme.addModule('uiNode');\n    this.theme.init();\n    this.emitter.on(Emitter.events.EDITOR_CHANGE, function (type) {\n      if (type === Emitter.events.TEXT_CHANGE) {\n        _this.root.classList.toggle('ql-blank', _this.editor.isBlank());\n      }\n    });\n    this.emitter.on(Emitter.events.SCROLL_UPDATE, function (source, mutations) {\n      var oldRange = _this.selection.lastRange;\n      var _this$selection$getRa = _this.selection.getRange(),\n        _this$selection$getRa2 = _slicedToArray(_this$selection$getRa, 1),\n        newRange = _this$selection$getRa2[0];\n      var selectionInfo = oldRange && newRange ? {\n        oldRange: oldRange,\n        newRange: newRange\n      } : undefined;\n      modify.call(_this, function () {\n        return _this.editor.update(null, mutations, selectionInfo);\n      }, source);\n    });\n    this.emitter.on(Emitter.events.SCROLL_EMBED_UPDATE, function (blot, delta) {\n      var oldRange = _this.selection.lastRange;\n      var _this$selection$getRa3 = _this.selection.getRange(),\n        _this$selection$getRa4 = _slicedToArray(_this$selection$getRa3, 1),\n        newRange = _this$selection$getRa4[0];\n      var selectionInfo = oldRange && newRange ? {\n        oldRange: oldRange,\n        newRange: newRange\n      } : undefined;\n      modify.call(_this, function () {\n        var change = new Delta().retain(blot.offset(_this)).retain(_defineProperty({}, blot.statics.blotName, delta));\n        return _this.editor.update(change, [], selectionInfo);\n      }, Quill.sources.USER);\n    });\n    if (html) {\n      var contents = this.clipboard.convert({\n        html: \"\".concat(html, \"<p><br></p>\"),\n        text: '\\n'\n      });\n      this.setContents(contents);\n    }\n    this.history.clear();\n    if (this.options.placeholder) {\n      this.root.setAttribute('data-placeholder', this.options.placeholder);\n    }\n    if (this.options.readOnly) {\n      this.disable();\n    }\n    this.allowReadOnlyEdits = false;\n  }\n  return _createClass(Quill, [{\n    key: \"addContainer\",\n    value: function addContainer(container) {\n      var refNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      if (typeof container === 'string') {\n        var className = container;\n        container = document.createElement('div');\n        container.classList.add(className);\n      }\n      this.container.insertBefore(container, refNode);\n      return container;\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.selection.setRange(null);\n    }\n  }, {\n    key: \"deleteText\",\n    value: function deleteText(index, length, source) {\n      var _this2 = this;\n      // @ts-expect-error\n      var _overload = overload(index, length, source);\n      var _overload2 = _slicedToArray(_overload, 4);\n      index = _overload2[0];\n      length = _overload2[1];\n      source = _overload2[3];\n      return modify.call(this, function () {\n        return _this2.editor.deleteText(index, length);\n      }, source, index, -1 * length);\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.enable(false);\n    }\n  }, {\n    key: \"editReadOnly\",\n    value: function editReadOnly(modifier) {\n      this.allowReadOnlyEdits = true;\n      var value = modifier();\n      this.allowReadOnlyEdits = false;\n      return value;\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this.scroll.enable(enabled);\n      this.container.classList.toggle('ql-disabled', !enabled);\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.selection.focus();\n      if (!options.preventScroll) {\n        this.scrollSelectionIntoView();\n      }\n    }\n  }, {\n    key: \"format\",\n    value: function format(name, value) {\n      var _this3 = this;\n      var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Emitter.sources.API;\n      return modify.call(this, function () {\n        var range = _this3.getSelection(true);\n        var change = new Delta();\n        if (range == null) return change;\n        if (_this3.scroll.query(name, Parchment.Scope.BLOCK)) {\n          change = _this3.editor.formatLine(range.index, range.length, _defineProperty({}, name, value));\n        } else if (range.length === 0) {\n          _this3.selection.format(name, value);\n          return change;\n        } else {\n          change = _this3.editor.formatText(range.index, range.length, _defineProperty({}, name, value));\n        }\n        _this3.setSelection(range, Emitter.sources.SILENT);\n        return change;\n      }, source);\n    }\n  }, {\n    key: \"formatLine\",\n    value: function formatLine(index, length, name, value, source) {\n      var _this4 = this;\n      var formats;\n      // eslint-disable-next-line prefer-const\n      var _overload3 = overload(index, length,\n      // @ts-expect-error\n      name, value, source);\n      var _overload4 = _slicedToArray(_overload3, 4);\n      index = _overload4[0];\n      length = _overload4[1];\n      formats = _overload4[2];\n      source = _overload4[3];\n      return modify.call(this, function () {\n        return _this4.editor.formatLine(index, length, formats);\n      }, source, index, 0);\n    }\n  }, {\n    key: \"formatText\",\n    value: function formatText(index, length, name, value, source) {\n      var _this5 = this;\n      var formats;\n      // eslint-disable-next-line prefer-const\n      var _overload5 = overload(\n      // @ts-expect-error\n      index, length, name, value, source);\n      var _overload6 = _slicedToArray(_overload5, 4);\n      index = _overload6[0];\n      length = _overload6[1];\n      formats = _overload6[2];\n      source = _overload6[3];\n      return modify.call(this, function () {\n        return _this5.editor.formatText(index, length, formats);\n      }, source, index, 0);\n    }\n  }, {\n    key: \"getBounds\",\n    value: function getBounds(index) {\n      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var bounds = null;\n      if (typeof index === 'number') {\n        bounds = this.selection.getBounds(index, length);\n      } else {\n        bounds = this.selection.getBounds(index.index, index.length);\n      }\n      if (!bounds) return null;\n      var containerBounds = this.container.getBoundingClientRect();\n      return {\n        bottom: bounds.bottom - containerBounds.top,\n        height: bounds.height,\n        left: bounds.left - containerBounds.left,\n        right: bounds.right - containerBounds.left,\n        top: bounds.top - containerBounds.top,\n        width: bounds.width\n      };\n    }\n  }, {\n    key: \"getContents\",\n    value: function getContents() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getLength() - index;\n      var _overload7 = overload(index, length);\n      var _overload8 = _slicedToArray(_overload7, 2);\n      index = _overload8[0];\n      length = _overload8[1];\n      return this.editor.getContents(index, length);\n    }\n  }, {\n    key: \"getFormat\",\n    value: function getFormat() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getSelection(true);\n      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      if (typeof index === 'number') {\n        return this.editor.getFormat(index, length);\n      }\n      return this.editor.getFormat(index.index, index.length);\n    }\n  }, {\n    key: \"getIndex\",\n    value: function getIndex(blot) {\n      return blot.offset(this.scroll);\n    }\n  }, {\n    key: \"getLength\",\n    value: function getLength() {\n      return this.scroll.length();\n    }\n  }, {\n    key: \"getLeaf\",\n    value: function getLeaf(index) {\n      return this.scroll.leaf(index);\n    }\n  }, {\n    key: \"getLine\",\n    value: function getLine(index) {\n      return this.scroll.line(index);\n    }\n  }, {\n    key: \"getLines\",\n    value: function getLines() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.MAX_VALUE;\n      if (typeof index !== 'number') {\n        return this.scroll.lines(index.index, index.length);\n      }\n      return this.scroll.lines(index, length);\n    }\n  }, {\n    key: \"getModule\",\n    value: function getModule(name) {\n      return this.theme.modules[name];\n    }\n  }, {\n    key: \"getSelection\",\n    value: function getSelection() {\n      var focus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (focus) this.focus();\n      this.update(); // Make sure we access getRange with editor in consistent state\n      return this.selection.getRange()[0];\n    }\n  }, {\n    key: \"getSemanticHTML\",\n    value: function getSemanticHTML() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var length = arguments.length > 1 ? arguments[1] : undefined;\n      if (typeof index === 'number') {\n        var _length;\n        length = (_length = length) !== null && _length !== void 0 ? _length : this.getLength() - index;\n      }\n      // @ts-expect-error\n      var _overload9 = overload(index, length);\n      var _overload10 = _slicedToArray(_overload9, 2);\n      index = _overload10[0];\n      length = _overload10[1];\n      return this.editor.getHTML(index, length);\n    }\n  }, {\n    key: \"getText\",\n    value: function getText() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var length = arguments.length > 1 ? arguments[1] : undefined;\n      if (typeof index === 'number') {\n        var _length2;\n        length = (_length2 = length) !== null && _length2 !== void 0 ? _length2 : this.getLength() - index;\n      }\n      // @ts-expect-error\n      var _overload11 = overload(index, length);\n      var _overload12 = _slicedToArray(_overload11, 2);\n      index = _overload12[0];\n      length = _overload12[1];\n      return this.editor.getText(index, length);\n    }\n  }, {\n    key: \"hasFocus\",\n    value: function hasFocus() {\n      return this.selection.hasFocus();\n    }\n  }, {\n    key: \"insertEmbed\",\n    value: function insertEmbed(index, embed, value) {\n      var _this6 = this;\n      var source = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Quill.sources.API;\n      return modify.call(this, function () {\n        return _this6.editor.insertEmbed(index, embed, value);\n      }, source, index);\n    }\n  }, {\n    key: \"insertText\",\n    value: function insertText(index, text, name, value, source) {\n      var _this7 = this;\n      var formats;\n      // eslint-disable-next-line prefer-const\n      // @ts-expect-error\n      var _overload13 = overload(index, 0, name, value, source);\n      var _overload14 = _slicedToArray(_overload13, 4);\n      index = _overload14[0];\n      formats = _overload14[2];\n      source = _overload14[3];\n      return modify.call(this, function () {\n        return _this7.editor.insertText(index, text, formats);\n      }, source, index, text.length);\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.scroll.isEnabled();\n    }\n  }, {\n    key: \"off\",\n    value: function off() {\n      var _this$emitter;\n      return (_this$emitter = this.emitter).off.apply(_this$emitter, arguments);\n    }\n  }, {\n    key: \"on\",\n    value: function on() {\n      var _this$emitter2;\n      return (_this$emitter2 = this.emitter).on.apply(_this$emitter2, arguments);\n    }\n  }, {\n    key: \"once\",\n    value: function once() {\n      var _this$emitter3;\n      return (_this$emitter3 = this.emitter).once.apply(_this$emitter3, arguments);\n    }\n  }, {\n    key: \"removeFormat\",\n    value: function removeFormat(index, length, source) {\n      var _this8 = this;\n      var _overload15 = overload(index, length, source);\n      var _overload16 = _slicedToArray(_overload15, 4);\n      index = _overload16[0];\n      length = _overload16[1];\n      source = _overload16[3];\n      return modify.call(this, function () {\n        return _this8.editor.removeFormat(index, length);\n      }, source, index);\n    }\n  }, {\n    key: \"scrollRectIntoView\",\n    value: function scrollRectIntoView(rect) {\n      _scrollRectIntoView(this.root, rect);\n    }\n\n    /**\n     * @deprecated Use Quill#scrollSelectionIntoView() instead.\n     */\n  }, {\n    key: \"scrollIntoView\",\n    value: function scrollIntoView() {\n      console.warn('Quill#scrollIntoView() has been deprecated and will be removed in the near future. Please use Quill#scrollSelectionIntoView() instead.');\n      this.scrollSelectionIntoView();\n    }\n\n    /**\n     * Scroll the current selection into the visible area.\n     * If the selection is already visible, no scrolling will occur.\n     */\n  }, {\n    key: \"scrollSelectionIntoView\",\n    value: function scrollSelectionIntoView() {\n      var range = this.selection.lastRange;\n      var bounds = range && this.selection.getBounds(range.index, range.length);\n      if (bounds) {\n        this.scrollRectIntoView(bounds);\n      }\n    }\n  }, {\n    key: \"setContents\",\n    value: function setContents(delta) {\n      var _this9 = this;\n      var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Emitter.sources.API;\n      return modify.call(this, function () {\n        delta = new Delta(delta);\n        var length = _this9.getLength();\n        // Quill will set empty editor to \\n\n        var delete1 = _this9.editor.deleteText(0, length);\n        var applied = _this9.editor.insertContents(0, delta);\n        // Remove extra \\n from empty editor initialization\n        var delete2 = _this9.editor.deleteText(_this9.getLength() - 1, 1);\n        return delete1.compose(applied).compose(delete2);\n      }, source);\n    }\n  }, {\n    key: \"setSelection\",\n    value: function setSelection(index, length, source) {\n      if (index == null) {\n        // @ts-expect-error https://github.com/microsoft/TypeScript/issues/22609\n        this.selection.setRange(null, length || Quill.sources.API);\n      } else {\n        // @ts-expect-error\n        var _overload17 = overload(index, length, source);\n        var _overload18 = _slicedToArray(_overload17, 4);\n        index = _overload18[0];\n        length = _overload18[1];\n        source = _overload18[3];\n        this.selection.setRange(new Range(Math.max(0, index), length), source);\n        if (source !== Emitter.sources.SILENT) {\n          this.scrollSelectionIntoView();\n        }\n      }\n    }\n  }, {\n    key: \"setText\",\n    value: function setText(text) {\n      var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Emitter.sources.API;\n      var delta = new Delta().insert(text);\n      return this.setContents(delta, source);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Emitter.sources.USER;\n      var change = this.scroll.update(source); // Will update selection before selection.update() does if text changes\n      this.selection.update(source);\n      // TODO this is usually undefined\n      return change;\n    }\n  }, {\n    key: \"updateContents\",\n    value: function updateContents(delta) {\n      var _this10 = this;\n      var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Emitter.sources.API;\n      return modify.call(this, function () {\n        delta = new Delta(delta);\n        return _this10.editor.applyDelta(delta);\n      }, source, true);\n    }\n  }], [{\n    key: \"debug\",\n    value: function debug(limit) {\n      if (limit === true) {\n        limit = 'log';\n      }\n      logger.level(limit);\n    }\n  }, {\n    key: \"find\",\n    value: function find(node) {\n      var bubble = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return instances.get(node) || globalRegistry.find(node, bubble);\n    }\n  }, {\n    key: \"import\",\n    value: function _import(name) {\n      if (this.imports[name] == null) {\n        debug.error(\"Cannot import \".concat(name, \". Are you sure it was registered?\"));\n      }\n      return this.imports[name];\n    }\n  }, {\n    key: \"register\",\n    value: function register() {\n      var _this11 = this;\n      if (typeof (arguments.length <= 0 ? undefined : arguments[0]) !== 'string') {\n        var target = arguments.length <= 0 ? undefined : arguments[0];\n        var overwrite = !!(arguments.length <= 1 ? undefined : arguments[1]);\n        var name = 'attrName' in target ? target.attrName : target.blotName;\n        if (typeof name === 'string') {\n          // Shortcut for formats:\n          // register(Blot | Attributor, overwrite)\n          this.register(\"formats/\".concat(name), target, overwrite);\n        } else {\n          Object.keys(target).forEach(function (key) {\n            _this11.register(key, target[key], overwrite);\n          });\n        }\n      } else {\n        var path = arguments.length <= 0 ? undefined : arguments[0];\n        var _target = arguments.length <= 1 ? undefined : arguments[1];\n        var _overwrite = !!(arguments.length <= 2 ? undefined : arguments[2]);\n        if (this.imports[path] != null && !_overwrite) {\n          debug.warn(\"Overwriting \".concat(path, \" with\"), _target);\n        }\n        this.imports[path] = _target;\n        if ((path.startsWith('blots/') || path.startsWith('formats/')) && _target && typeof _target !== 'boolean' && _target.blotName !== 'abstract') {\n          globalRegistry.register(_target);\n        }\n        if (typeof _target.register === 'function') {\n          _target.register(globalRegistry);\n        }\n      }\n    }\n  }]);\n}();\n_defineProperty(Quill, \"DEFAULTS\", {\n  bounds: null,\n  modules: {\n    clipboard: true,\n    keyboard: true,\n    history: true,\n    uploader: true\n  },\n  placeholder: '',\n  readOnly: false,\n  registry: globalRegistry,\n  theme: 'default'\n});\n_defineProperty(Quill, \"events\", Emitter.events);\n_defineProperty(Quill, \"sources\", Emitter.sources);\n_defineProperty(Quill, \"version\", typeof \"2.0.3\" === 'undefined' ? 'dev' : \"2.0.3\");\n_defineProperty(Quill, \"imports\", {\n  delta: Delta,\n  parchment: Parchment,\n  'core/module': Module,\n  'core/theme': Theme\n});\nfunction resolveSelector(selector) {\n  return typeof selector === 'string' ? document.querySelector(selector) : selector;\n}\nfunction expandModuleConfig(config) {\n  return Object.entries(config !== null && config !== void 0 ? config : {}).reduce(function (expanded, _ref) {\n    var _ref3 = _slicedToArray(_ref, 2),\n      key = _ref3[0],\n      value = _ref3[1];\n    return _objectSpread(_objectSpread({}, expanded), {}, _defineProperty({}, key, value === true ? {} : value));\n  }, {});\n}\nfunction omitUndefinedValuesFromOptions(obj) {\n  return Object.fromEntries(Object.entries(obj).filter(function (entry) {\n    return entry[1] !== undefined;\n  }));\n}\nfunction expandConfig(containerOrSelector, options) {\n  var container = resolveSelector(containerOrSelector);\n  if (!container) {\n    throw new Error('Invalid Quill container');\n  }\n  var shouldUseDefaultTheme = !options.theme || options.theme === Quill.DEFAULTS.theme;\n  var theme = shouldUseDefaultTheme ? Theme : Quill[\"import\"](\"themes/\".concat(options.theme));\n  if (!theme) {\n    throw new Error(\"Invalid theme \".concat(options.theme, \". Did you register it?\"));\n  }\n  var _Quill$DEFAULTS = Quill.DEFAULTS,\n    quillModuleDefaults = _Quill$DEFAULTS.modules,\n    quillDefaults = _objectWithoutProperties(_Quill$DEFAULTS, _excluded);\n  var _theme$DEFAULTS = theme.DEFAULTS,\n    themeModuleDefaults = _theme$DEFAULTS.modules,\n    themeDefaults = _objectWithoutProperties(_theme$DEFAULTS, _excluded2);\n  var userModuleOptions = expandModuleConfig(options.modules);\n  // Special case toolbar shorthand\n  if (userModuleOptions != null && userModuleOptions.toolbar && userModuleOptions.toolbar.constructor !== Object) {\n    userModuleOptions = _objectSpread(_objectSpread({}, userModuleOptions), {}, {\n      toolbar: {\n        container: userModuleOptions.toolbar\n      }\n    });\n  }\n  var modules = merge({}, expandModuleConfig(quillModuleDefaults), expandModuleConfig(themeModuleDefaults), userModuleOptions);\n  var config = _objectSpread(_objectSpread(_objectSpread({}, quillDefaults), omitUndefinedValuesFromOptions(themeDefaults)), omitUndefinedValuesFromOptions(options));\n  var registry = options.registry;\n  if (registry) {\n    if (options.formats) {\n      debug.warn('Ignoring \"formats\" option because \"registry\" is specified');\n    }\n  } else {\n    registry = options.formats ? createRegistryWithFormats(options.formats, config.registry, debug) : config.registry;\n  }\n  return _objectSpread(_objectSpread({}, config), {}, {\n    registry: registry,\n    container: container,\n    theme: theme,\n    modules: Object.entries(modules).reduce(function (modulesWithDefaults, _ref2) {\n      var _ref4 = _slicedToArray(_ref2, 2),\n        name = _ref4[0],\n        value = _ref4[1];\n      if (!value) return modulesWithDefaults;\n      var moduleClass = Quill[\"import\"](\"modules/\".concat(name));\n      if (moduleClass == null) {\n        debug.error(\"Cannot load \".concat(name, \" module. Are you sure you registered it?\"));\n        return modulesWithDefaults;\n      }\n      return _objectSpread(_objectSpread({}, modulesWithDefaults), {}, _defineProperty({}, name, merge({}, moduleClass.DEFAULTS || {}, value)));\n    }, {}),\n    bounds: resolveSelector(config.bounds)\n  });\n}\n\n// Handle selection preservation and TEXT_CHANGE emission\n// common to modification APIs\nfunction modify(modifier, source, index, shift) {\n  if (!this.isEnabled() && source === Emitter.sources.USER && !this.allowReadOnlyEdits) {\n    return new Delta();\n  }\n  var range = index == null ? null : this.getSelection();\n  var oldDelta = this.editor.delta;\n  var change = modifier();\n  if (range != null) {\n    if (index === true) {\n      index = range.index; // eslint-disable-line prefer-destructuring\n    }\n    if (shift == null) {\n      range = shiftRange(range, change, source);\n    } else if (shift !== 0) {\n      // @ts-expect-error index should always be number\n      range = shiftRange(range, index, shift, source);\n    }\n    this.setSelection(range, Emitter.sources.SILENT);\n  }\n  if (change.length() > 0) {\n    var _this$emitter4;\n    var args = [Emitter.events.TEXT_CHANGE, change, oldDelta, source];\n    (_this$emitter4 = this.emitter).emit.apply(_this$emitter4, [Emitter.events.EDITOR_CHANGE].concat(args));\n    if (source !== Emitter.sources.SILENT) {\n      var _this$emitter5;\n      (_this$emitter5 = this.emitter).emit.apply(_this$emitter5, args);\n    }\n  }\n  return change;\n}\nfunction overload(index, length, name, value, source) {\n  var formats = {};\n  // @ts-expect-error\n  if (typeof index.index === 'number' && typeof index.length === 'number') {\n    // Allow for throwaway end (used by insertText/insertEmbed)\n    if (typeof length !== 'number') {\n      // @ts-expect-error\n      source = value;\n      value = name;\n      name = length;\n      // @ts-expect-error\n      length = index.length; // eslint-disable-line prefer-destructuring\n      // @ts-expect-error\n      index = index.index; // eslint-disable-line prefer-destructuring\n    } else {\n      // @ts-expect-error\n      length = index.length; // eslint-disable-line prefer-destructuring\n      // @ts-expect-error\n      index = index.index; // eslint-disable-line prefer-destructuring\n    }\n  } else if (typeof length !== 'number') {\n    // @ts-expect-error\n    source = value;\n    value = name;\n    name = length;\n    length = 0;\n  }\n  // Handle format being object, two format name/value strings or excluded\n  if (_typeof(name) === 'object') {\n    // @ts-expect-error Fix me later\n    formats = name;\n    // @ts-expect-error\n    source = value;\n  } else if (typeof name === 'string') {\n    if (value != null) {\n      formats[name] = value;\n    } else {\n      // @ts-expect-error\n      source = name;\n    }\n  }\n  // Handle optional source\n  source = source || Emitter.sources.API;\n  // @ts-expect-error\n  return [index, length, formats, source];\n}\nfunction shiftRange(range, index, lengthOrSource, source) {\n  var length = typeof lengthOrSource === 'number' ? lengthOrSource : 0;\n  if (range == null) return null;\n  var start;\n  var end;\n  // @ts-expect-error -- TODO: add a better type guard around `index`\n  if (index && typeof index.transformPosition === 'function') {\n    var _map = [range.index, range.index + range.length].map(function (pos) {\n      return (\n        // @ts-expect-error -- TODO: add a better type guard around `index`\n        index.transformPosition(pos, source !== Emitter.sources.USER)\n      );\n    });\n    var _map2 = _slicedToArray(_map, 2);\n    start = _map2[0];\n    end = _map2[1];\n  } else {\n    var _map3 = [range.index, range.index + range.length].map(function (pos) {\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      if (pos < index || pos === index && source === Emitter.sources.USER) return pos;\n      if (length >= 0) {\n        return pos + length;\n      }\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      return Math.max(index, pos + length);\n    });\n    var _map4 = _slicedToArray(_map3, 2);\n    start = _map4[0];\n    end = _map4[1];\n  }\n  return new Range(start, end - start);\n}\nexport { Parchment, Range };\nexport { globalRegistry, expandConfig, overload, Quill as default };","map":{"version":3,"names":["merge","Parchment","Delta","Editor","Emitter","instances","logger","Module","Selection","Range","Composition","Theme","scrollRectIntoView","createRegistryWithFormats","debug","globalRegistry","Registry","ParentBlot","uiClass","Quill","container","_this","_classCallCheck","options","arguments","length","undefined","expandConfig","error","html","innerHTML","trim","classList","add","set","root","addContainer","emitter","scrollBlotName","ScrollBlot","blotName","registry","query","Error","concat","scroll","editor","selection","composition","theme","keyboard","addModule","clipboard","history","uploader","init","on","events","EDITOR_CHANGE","type","TEXT_CHANGE","toggle","isBlank","SCROLL_UPDATE","source","mutations","oldRange","lastRange","_this$selection$getRa","getRange","_this$selection$getRa2","_slicedToArray","newRange","selectionInfo","modify","call","update","SCROLL_EMBED_UPDATE","blot","delta","_this$selection$getRa3","_this$selection$getRa4","change","retain","offset","_defineProperty","statics","sources","USER","contents","convert","text","setContents","clear","placeholder","setAttribute","readOnly","disable","allowReadOnlyEdits","_createClass","key","value","refNode","className","document","createElement","insertBefore","blur","setRange","deleteText","index","_this2","_overload","overload","_overload2","enable","editReadOnly","modifier","enabled","focus","preventScroll","scrollSelectionIntoView","format","name","_this3","API","range","getSelection","Scope","BLOCK","formatLine","formatText","setSelection","SILENT","_this4","formats","_overload3","_overload4","_this5","_overload5","_overload6","getBounds","bounds","containerBounds","getBoundingClientRect","bottom","top","height","left","right","width","getContents","getLength","_overload7","_overload8","getFormat","getIndex","getLeaf","leaf","getLine","line","getLines","Number","MAX_VALUE","lines","getModule","modules","getSemanticHTML","_length","_overload9","_overload10","getHTML","getText","_length2","_overload11","_overload12","hasFocus","insertEmbed","embed","_this6","insertText","_this7","_overload13","_overload14","isEnabled","off","_this$emitter","apply","_this$emitter2","once","_this$emitter3","removeFormat","_this8","_overload15","_overload16","rect","scrollIntoView","console","warn","_this9","delete1","applied","insertContents","delete2","compose","_overload17","_overload18","Math","max","setText","insert","updateContents","_this10","applyDelta","limit","level","find","node","bubble","get","import","imports","register","_this11","target","overwrite","attrName","Object","keys","forEach","path","startsWith","parchment","resolveSelector","selector","querySelector","expandModuleConfig","config","entries","reduce","expanded","_ref","_ref3","_objectSpread","omitUndefinedValuesFromOptions","obj","fromEntries","filter","entry","containerOrSelector","shouldUseDefaultTheme","DEFAULTS","_Quill$DEFAULTS","quillModuleDefaults","quillDefaults","_objectWithoutProperties","_excluded","_theme$DEFAULTS","themeModuleDefaults","themeDefaults","_excluded2","userModuleOptions","toolbar","constructor","modulesWithDefaults","_ref2","_ref4","moduleClass","shift","oldDelta","shiftRange","_this$emitter4","args","emit","_this$emitter5","_typeof","lengthOrSource","start","end","transformPosition","_map","map","pos","_map2","_map3","_map4","default"],"sources":["../../src/core/quill.ts"],"sourcesContent":["import { merge } from 'lodash-es';\nimport * as Parchment from 'parchment';\nimport type { Op } from 'quill-delta';\nimport Delta from 'quill-delta';\nimport type { BlockEmbed } from '../blots/block.js';\nimport type Block from '../blots/block.js';\nimport type Scroll from '../blots/scroll.js';\nimport type Clipboard from '../modules/clipboard.js';\nimport type History from '../modules/history.js';\nimport type Keyboard from '../modules/keyboard.js';\nimport type Uploader from '../modules/uploader.js';\nimport Editor from './editor.js';\nimport Emitter from './emitter.js';\nimport type { EmitterSource } from './emitter.js';\nimport instances from './instances.js';\nimport logger from './logger.js';\nimport type { DebugLevel } from './logger.js';\nimport Module from './module.js';\nimport Selection, { Range } from './selection.js';\nimport type { Bounds } from './selection.js';\nimport Composition from './composition.js';\nimport Theme from './theme.js';\nimport type { ThemeConstructor } from './theme.js';\nimport scrollRectIntoView from './utils/scrollRectIntoView.js';\nimport type { Rect } from './utils/scrollRectIntoView.js';\nimport createRegistryWithFormats from './utils/createRegistryWithFormats.js';\n\nconst debug = logger('quill');\n\nconst globalRegistry = new Parchment.Registry();\nParchment.ParentBlot.uiClass = 'ql-ui';\n\n/**\n * Options for initializing a Quill instance\n */\nexport interface QuillOptions {\n  theme?: string;\n  debug?: DebugLevel | boolean;\n  registry?: Parchment.Registry;\n  /**\n   * Whether to disable the editing\n   * @default false\n   */\n  readOnly?: boolean;\n\n  /**\n   * Placeholder text to display when the editor is empty\n   * @default \"\"\n   */\n  placeholder?: string;\n  bounds?: HTMLElement | string | null;\n  modules?: Record<string, unknown>;\n\n  /**\n   * A list of formats that are recognized and can exist within the editor contents.\n   * `null` means all formats are allowed.\n   * @default null\n   */\n  formats?: string[] | null;\n}\n\n/**\n * Similar to QuillOptions, but with all properties expanded to their default values,\n * and all selectors resolved to HTMLElements.\n */\nexport interface ExpandedQuillOptions\n  extends Omit<QuillOptions, 'theme' | 'formats'> {\n  theme: ThemeConstructor;\n  registry: Parchment.Registry;\n  container: HTMLElement;\n  modules: Record<string, unknown>;\n  bounds?: HTMLElement | null;\n  readOnly: boolean;\n}\n\nclass Quill {\n  static DEFAULTS = {\n    bounds: null,\n    modules: {\n      clipboard: true,\n      keyboard: true,\n      history: true,\n      uploader: true,\n    },\n    placeholder: '',\n    readOnly: false,\n    registry: globalRegistry,\n    theme: 'default',\n  } satisfies Partial<QuillOptions>;\n  static events = Emitter.events;\n  static sources = Emitter.sources;\n  static version = typeof QUILL_VERSION === 'undefined' ? 'dev' : QUILL_VERSION;\n\n  static imports: Record<string, unknown> = {\n    delta: Delta,\n    parchment: Parchment,\n    'core/module': Module,\n    'core/theme': Theme,\n  };\n\n  static debug(limit: DebugLevel | boolean) {\n    if (limit === true) {\n      limit = 'log';\n    }\n    logger.level(limit);\n  }\n\n  static find(node: Node, bubble = false) {\n    return instances.get(node) || globalRegistry.find(node, bubble);\n  }\n\n  static import(name: 'core/module'): typeof Module;\n  static import(name: `themes/${string}`): typeof Theme;\n  static import(name: 'parchment'): typeof Parchment;\n  static import(name: 'delta'): typeof Delta;\n  static import(name: string): unknown;\n  static import(name: string) {\n    if (this.imports[name] == null) {\n      debug.error(`Cannot import ${name}. Are you sure it was registered?`);\n    }\n    return this.imports[name];\n  }\n\n  static register(\n    targets: Record<\n      string,\n      | Parchment.RegistryDefinition\n      | Record<string, unknown> // any objects\n      | Theme\n      | Module\n      | Function // ES5 constructors\n    >,\n    overwrite?: boolean,\n  ): void;\n  static register(\n    target: Parchment.RegistryDefinition,\n    overwrite?: boolean,\n  ): void;\n  static register(path: string, target: any, overwrite?: boolean): void;\n  static register(...args: any[]): void {\n    if (typeof args[0] !== 'string') {\n      const target = args[0];\n      const overwrite = !!args[1];\n\n      const name = 'attrName' in target ? target.attrName : target.blotName;\n      if (typeof name === 'string') {\n        // Shortcut for formats:\n        // register(Blot | Attributor, overwrite)\n        this.register(`formats/${name}`, target, overwrite);\n      } else {\n        Object.keys(target).forEach((key) => {\n          this.register(key, target[key], overwrite);\n        });\n      }\n    } else {\n      const path = args[0];\n      const target = args[1];\n      const overwrite = !!args[2];\n\n      if (this.imports[path] != null && !overwrite) {\n        debug.warn(`Overwriting ${path} with`, target);\n      }\n      this.imports[path] = target;\n      if (\n        (path.startsWith('blots/') || path.startsWith('formats/')) &&\n        target &&\n        typeof target !== 'boolean' &&\n        target.blotName !== 'abstract'\n      ) {\n        globalRegistry.register(target);\n      }\n      if (typeof target.register === 'function') {\n        target.register(globalRegistry);\n      }\n    }\n  }\n\n  container: HTMLElement;\n  root: HTMLDivElement;\n  scroll: Scroll;\n  emitter: Emitter;\n  protected allowReadOnlyEdits: boolean;\n  editor: Editor;\n  composition: Composition;\n  selection: Selection;\n\n  theme: Theme;\n  keyboard: Keyboard;\n  clipboard: Clipboard;\n  history: History;\n  uploader: Uploader;\n\n  options: ExpandedQuillOptions;\n\n  constructor(container: HTMLElement | string, options: QuillOptions = {}) {\n    this.options = expandConfig(container, options);\n    this.container = this.options.container;\n    if (this.container == null) {\n      debug.error('Invalid Quill container', container);\n      return;\n    }\n    if (this.options.debug) {\n      Quill.debug(this.options.debug);\n    }\n    const html = this.container.innerHTML.trim();\n    this.container.classList.add('ql-container');\n    this.container.innerHTML = '';\n    instances.set(this.container, this);\n    this.root = this.addContainer('ql-editor');\n    this.root.classList.add('ql-blank');\n    this.emitter = new Emitter();\n    const scrollBlotName = Parchment.ScrollBlot.blotName;\n    const ScrollBlot = this.options.registry.query(scrollBlotName);\n    if (!ScrollBlot || !('blotName' in ScrollBlot)) {\n      throw new Error(\n        `Cannot initialize Quill without \"${scrollBlotName}\" blot`,\n      );\n    }\n    this.scroll = new ScrollBlot(this.options.registry, this.root, {\n      emitter: this.emitter,\n    }) as Scroll;\n    this.editor = new Editor(this.scroll);\n    this.selection = new Selection(this.scroll, this.emitter);\n    this.composition = new Composition(this.scroll, this.emitter);\n    this.theme = new this.options.theme(this, this.options); // eslint-disable-line new-cap\n    this.keyboard = this.theme.addModule('keyboard');\n    this.clipboard = this.theme.addModule('clipboard');\n    this.history = this.theme.addModule('history');\n    this.uploader = this.theme.addModule('uploader');\n    this.theme.addModule('input');\n    this.theme.addModule('uiNode');\n    this.theme.init();\n    this.emitter.on(Emitter.events.EDITOR_CHANGE, (type) => {\n      if (type === Emitter.events.TEXT_CHANGE) {\n        this.root.classList.toggle('ql-blank', this.editor.isBlank());\n      }\n    });\n    this.emitter.on(Emitter.events.SCROLL_UPDATE, (source, mutations) => {\n      const oldRange = this.selection.lastRange;\n      const [newRange] = this.selection.getRange();\n      const selectionInfo =\n        oldRange && newRange ? { oldRange, newRange } : undefined;\n      modify.call(\n        this,\n        () => this.editor.update(null, mutations, selectionInfo),\n        source,\n      );\n    });\n    this.emitter.on(Emitter.events.SCROLL_EMBED_UPDATE, (blot, delta) => {\n      const oldRange = this.selection.lastRange;\n      const [newRange] = this.selection.getRange();\n      const selectionInfo =\n        oldRange && newRange ? { oldRange, newRange } : undefined;\n      modify.call(\n        this,\n        () => {\n          const change = new Delta()\n            .retain(blot.offset(this))\n            .retain({ [blot.statics.blotName]: delta });\n          return this.editor.update(change, [], selectionInfo);\n        },\n        Quill.sources.USER,\n      );\n    });\n    if (html) {\n      const contents = this.clipboard.convert({\n        html: `${html}<p><br></p>`,\n        text: '\\n',\n      });\n      this.setContents(contents);\n    }\n    this.history.clear();\n    if (this.options.placeholder) {\n      this.root.setAttribute('data-placeholder', this.options.placeholder);\n    }\n    if (this.options.readOnly) {\n      this.disable();\n    }\n    this.allowReadOnlyEdits = false;\n  }\n\n  addContainer(container: string, refNode?: Node | null): HTMLDivElement;\n  addContainer(container: HTMLElement, refNode?: Node | null): HTMLElement;\n  addContainer(\n    container: string | HTMLElement,\n    refNode: Node | null = null,\n  ): HTMLDivElement | HTMLElement {\n    if (typeof container === 'string') {\n      const className = container;\n      container = document.createElement('div');\n      container.classList.add(className);\n    }\n    this.container.insertBefore(container, refNode);\n    return container;\n  }\n\n  blur() {\n    this.selection.setRange(null);\n  }\n\n  deleteText(range: Range, source?: EmitterSource): Delta;\n  deleteText(index: number, length: number, source?: EmitterSource): Delta;\n  deleteText(\n    index: number | Range,\n    length?: number | EmitterSource,\n    source?: EmitterSource,\n  ): Delta {\n    // @ts-expect-error\n    [index, length, , source] = overload(index, length, source);\n    return modify.call(\n      this,\n      () => {\n        return this.editor.deleteText(index, length);\n      },\n      source,\n      index,\n      -1 * length,\n    );\n  }\n\n  disable() {\n    this.enable(false);\n  }\n\n  editReadOnly<T>(modifier: () => T): T {\n    this.allowReadOnlyEdits = true;\n    const value = modifier();\n    this.allowReadOnlyEdits = false;\n    return value;\n  }\n\n  enable(enabled = true) {\n    this.scroll.enable(enabled);\n    this.container.classList.toggle('ql-disabled', !enabled);\n  }\n\n  focus(options: { preventScroll?: boolean } = {}) {\n    this.selection.focus();\n    if (!options.preventScroll) {\n      this.scrollSelectionIntoView();\n    }\n  }\n\n  format(\n    name: string,\n    value: unknown,\n    source: EmitterSource = Emitter.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        const range = this.getSelection(true);\n        let change = new Delta();\n        if (range == null) return change;\n        if (this.scroll.query(name, Parchment.Scope.BLOCK)) {\n          change = this.editor.formatLine(range.index, range.length, {\n            [name]: value,\n          });\n        } else if (range.length === 0) {\n          this.selection.format(name, value);\n          return change;\n        } else {\n          change = this.editor.formatText(range.index, range.length, {\n            [name]: value,\n          });\n        }\n        this.setSelection(range, Emitter.sources.SILENT);\n        return change;\n      },\n      source,\n    );\n  }\n\n  formatLine(\n    index: number,\n    length: number,\n    formats: Record<string, unknown>,\n    source?: EmitterSource,\n  ): Delta;\n  formatLine(\n    index: number,\n    length: number,\n    name: string,\n    value?: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  formatLine(\n    index: number,\n    length: number,\n    name: string | Record<string, unknown>,\n    value?: unknown | EmitterSource,\n    source?: EmitterSource,\n  ): Delta {\n    let formats: Record<string, unknown>;\n    // eslint-disable-next-line prefer-const\n    [index, length, formats, source] = overload(\n      index,\n      length,\n      // @ts-expect-error\n      name,\n      value,\n      source,\n    );\n    return modify.call(\n      this,\n      () => {\n        return this.editor.formatLine(index, length, formats);\n      },\n      source,\n      index,\n      0,\n    );\n  }\n\n  formatText(\n    range: Range,\n    name: string,\n    value: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  formatText(\n    index: number,\n    length: number,\n    name: string,\n    value: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  formatText(\n    index: number,\n    length: number,\n    formats: Record<string, unknown>,\n    source?: EmitterSource,\n  ): Delta;\n  formatText(\n    index: number | Range,\n    length: number | string,\n    name: string | unknown,\n    value?: unknown | EmitterSource,\n    source?: EmitterSource,\n  ): Delta {\n    let formats: Record<string, unknown>;\n    // eslint-disable-next-line prefer-const\n    [index, length, formats, source] = overload(\n      // @ts-expect-error\n      index,\n      length,\n      name,\n      value,\n      source,\n    );\n    return modify.call(\n      this,\n      () => {\n        return this.editor.formatText(index, length, formats);\n      },\n      source,\n      index,\n      0,\n    );\n  }\n\n  getBounds(index: number | Range, length = 0): Bounds | null {\n    let bounds: Bounds | null = null;\n    if (typeof index === 'number') {\n      bounds = this.selection.getBounds(index, length);\n    } else {\n      bounds = this.selection.getBounds(index.index, index.length);\n    }\n    if (!bounds) return null;\n    const containerBounds = this.container.getBoundingClientRect();\n    return {\n      bottom: bounds.bottom - containerBounds.top,\n      height: bounds.height,\n      left: bounds.left - containerBounds.left,\n      right: bounds.right - containerBounds.left,\n      top: bounds.top - containerBounds.top,\n      width: bounds.width,\n    };\n  }\n\n  getContents(index = 0, length = this.getLength() - index) {\n    [index, length] = overload(index, length);\n    return this.editor.getContents(index, length);\n  }\n\n  getFormat(index?: number, length?: number): { [format: string]: unknown };\n  getFormat(range?: Range): {\n    [format: string]: unknown;\n  };\n  getFormat(\n    index: Range | number = this.getSelection(true),\n    length = 0,\n  ): { [format: string]: unknown } {\n    if (typeof index === 'number') {\n      return this.editor.getFormat(index, length);\n    }\n    return this.editor.getFormat(index.index, index.length);\n  }\n\n  getIndex(blot: Parchment.Blot) {\n    return blot.offset(this.scroll);\n  }\n\n  getLength() {\n    return this.scroll.length();\n  }\n\n  getLeaf(index: number) {\n    return this.scroll.leaf(index);\n  }\n\n  getLine(index: number) {\n    return this.scroll.line(index);\n  }\n\n  getLines(range: Range): (Block | BlockEmbed)[];\n  getLines(index?: number, length?: number): (Block | BlockEmbed)[];\n  getLines(\n    index: Range | number = 0,\n    length = Number.MAX_VALUE,\n  ): (Block | BlockEmbed)[] {\n    if (typeof index !== 'number') {\n      return this.scroll.lines(index.index, index.length);\n    }\n    return this.scroll.lines(index, length);\n  }\n\n  getModule(name: string) {\n    return this.theme.modules[name];\n  }\n\n  getSelection(focus: true): Range;\n  getSelection(focus?: boolean): Range | null;\n  getSelection(focus = false): Range | null {\n    if (focus) this.focus();\n    this.update(); // Make sure we access getRange with editor in consistent state\n    return this.selection.getRange()[0];\n  }\n\n  getSemanticHTML(range: Range): string;\n  getSemanticHTML(index?: number, length?: number): string;\n  getSemanticHTML(index: Range | number = 0, length?: number) {\n    if (typeof index === 'number') {\n      length = length ?? this.getLength() - index;\n    }\n    // @ts-expect-error\n    [index, length] = overload(index, length);\n    return this.editor.getHTML(index, length);\n  }\n\n  getText(range?: Range): string;\n  getText(index?: number, length?: number): string;\n  getText(index: Range | number = 0, length?: number): string {\n    if (typeof index === 'number') {\n      length = length ?? this.getLength() - index;\n    }\n    // @ts-expect-error\n    [index, length] = overload(index, length);\n    return this.editor.getText(index, length);\n  }\n\n  hasFocus() {\n    return this.selection.hasFocus();\n  }\n\n  insertEmbed(\n    index: number,\n    embed: string,\n    value: unknown,\n    source: EmitterSource = Quill.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        return this.editor.insertEmbed(index, embed, value);\n      },\n      source,\n      index,\n    );\n  }\n\n  insertText(index: number, text: string, source?: EmitterSource): Delta;\n  insertText(\n    index: number,\n    text: string,\n    formats: Record<string, unknown>,\n    source?: EmitterSource,\n  ): Delta;\n  insertText(\n    index: number,\n    text: string,\n    name: string,\n    value: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  insertText(\n    index: number,\n    text: string,\n    name?: string | Record<string, unknown> | EmitterSource,\n    value?: unknown,\n    source?: EmitterSource,\n  ): Delta {\n    let formats: Record<string, unknown>;\n    // eslint-disable-next-line prefer-const\n    // @ts-expect-error\n    [index, , formats, source] = overload(index, 0, name, value, source);\n    return modify.call(\n      this,\n      () => {\n        return this.editor.insertText(index, text, formats);\n      },\n      source,\n      index,\n      text.length,\n    );\n  }\n\n  isEnabled() {\n    return this.scroll.isEnabled();\n  }\n\n  off(...args: Parameters<(typeof Emitter)['prototype']['off']>) {\n    return this.emitter.off(...args);\n  }\n\n  on(\n    event: (typeof Emitter)['events']['TEXT_CHANGE'],\n    handler: (delta: Delta, oldContent: Delta, source: EmitterSource) => void,\n  ): Emitter;\n  on(\n    event: (typeof Emitter)['events']['SELECTION_CHANGE'],\n    handler: (range: Range, oldRange: Range, source: EmitterSource) => void,\n  ): Emitter;\n  on(\n    event: (typeof Emitter)['events']['EDITOR_CHANGE'],\n    handler: (\n      ...args:\n        | [\n            (typeof Emitter)['events']['TEXT_CHANGE'],\n            Delta,\n            Delta,\n            EmitterSource,\n          ]\n        | [\n            (typeof Emitter)['events']['SELECTION_CHANGE'],\n            Range,\n            Range,\n            EmitterSource,\n          ]\n    ) => void,\n  ): Emitter;\n  on(event: string, ...args: unknown[]): Emitter;\n  on(...args: Parameters<(typeof Emitter)['prototype']['on']>): Emitter {\n    return this.emitter.on(...args);\n  }\n\n  once(...args: Parameters<(typeof Emitter)['prototype']['once']>) {\n    return this.emitter.once(...args);\n  }\n\n  removeFormat(index: number, length: number, source?: EmitterSource): Delta {\n    [index, length, , source] = overload(index, length, source);\n    return modify.call(\n      this,\n      () => {\n        return this.editor.removeFormat(index, length);\n      },\n      source,\n      index,\n    );\n  }\n\n  scrollRectIntoView(rect: Rect) {\n    scrollRectIntoView(this.root, rect);\n  }\n\n  /**\n   * @deprecated Use Quill#scrollSelectionIntoView() instead.\n   */\n  scrollIntoView() {\n    console.warn(\n      'Quill#scrollIntoView() has been deprecated and will be removed in the near future. Please use Quill#scrollSelectionIntoView() instead.',\n    );\n    this.scrollSelectionIntoView();\n  }\n\n  /**\n   * Scroll the current selection into the visible area.\n   * If the selection is already visible, no scrolling will occur.\n   */\n  scrollSelectionIntoView() {\n    const range = this.selection.lastRange;\n    const bounds = range && this.selection.getBounds(range.index, range.length);\n    if (bounds) {\n      this.scrollRectIntoView(bounds);\n    }\n  }\n\n  setContents(\n    delta: Delta | Op[],\n    source: EmitterSource = Emitter.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        delta = new Delta(delta);\n        const length = this.getLength();\n        // Quill will set empty editor to \\n\n        const delete1 = this.editor.deleteText(0, length);\n        const applied = this.editor.insertContents(0, delta);\n        // Remove extra \\n from empty editor initialization\n        const delete2 = this.editor.deleteText(this.getLength() - 1, 1);\n        return delete1.compose(applied).compose(delete2);\n      },\n      source,\n    );\n  }\n  setSelection(range: Range | null, source?: EmitterSource): void;\n  setSelection(index: number, source?: EmitterSource): void;\n  setSelection(index: number, length?: number, source?: EmitterSource): void;\n  setSelection(index: number, source?: EmitterSource): void;\n  setSelection(\n    index: Range | null | number,\n    length?: EmitterSource | number,\n    source?: EmitterSource,\n  ): void {\n    if (index == null) {\n      // @ts-expect-error https://github.com/microsoft/TypeScript/issues/22609\n      this.selection.setRange(null, length || Quill.sources.API);\n    } else {\n      // @ts-expect-error\n      [index, length, , source] = overload(index, length, source);\n      this.selection.setRange(new Range(Math.max(0, index), length), source);\n      if (source !== Emitter.sources.SILENT) {\n        this.scrollSelectionIntoView();\n      }\n    }\n  }\n\n  setText(text: string, source: EmitterSource = Emitter.sources.API) {\n    const delta = new Delta().insert(text);\n    return this.setContents(delta, source);\n  }\n\n  update(source: EmitterSource = Emitter.sources.USER) {\n    const change = this.scroll.update(source); // Will update selection before selection.update() does if text changes\n    this.selection.update(source);\n    // TODO this is usually undefined\n    return change;\n  }\n\n  updateContents(\n    delta: Delta | Op[],\n    source: EmitterSource = Emitter.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        delta = new Delta(delta);\n        return this.editor.applyDelta(delta);\n      },\n      source,\n      true,\n    );\n  }\n}\n\nfunction resolveSelector(selector: string | HTMLElement | null | undefined) {\n  return typeof selector === 'string'\n    ? document.querySelector<HTMLElement>(selector)\n    : selector;\n}\n\nfunction expandModuleConfig(config: Record<string, unknown> | undefined) {\n  return Object.entries(config ?? {}).reduce(\n    (expanded, [key, value]) => ({\n      ...expanded,\n      [key]: value === true ? {} : value,\n    }),\n    {} as Record<string, unknown>,\n  );\n}\n\nfunction omitUndefinedValuesFromOptions(obj: QuillOptions) {\n  return Object.fromEntries(\n    Object.entries(obj).filter((entry) => entry[1] !== undefined),\n  );\n}\n\nfunction expandConfig(\n  containerOrSelector: HTMLElement | string,\n  options: QuillOptions,\n): ExpandedQuillOptions {\n  const container = resolveSelector(containerOrSelector);\n  if (!container) {\n    throw new Error('Invalid Quill container');\n  }\n\n  const shouldUseDefaultTheme =\n    !options.theme || options.theme === Quill.DEFAULTS.theme;\n  const theme = shouldUseDefaultTheme\n    ? Theme\n    : Quill.import(`themes/${options.theme}`);\n  if (!theme) {\n    throw new Error(`Invalid theme ${options.theme}. Did you register it?`);\n  }\n\n  const { modules: quillModuleDefaults, ...quillDefaults } = Quill.DEFAULTS;\n  const { modules: themeModuleDefaults, ...themeDefaults } = theme.DEFAULTS;\n\n  let userModuleOptions = expandModuleConfig(options.modules);\n  // Special case toolbar shorthand\n  if (\n    userModuleOptions != null &&\n    userModuleOptions.toolbar &&\n    userModuleOptions.toolbar.constructor !== Object\n  ) {\n    userModuleOptions = {\n      ...userModuleOptions,\n      toolbar: { container: userModuleOptions.toolbar },\n    };\n  }\n\n  const modules: ExpandedQuillOptions['modules'] = merge(\n    {},\n    expandModuleConfig(quillModuleDefaults),\n    expandModuleConfig(themeModuleDefaults),\n    userModuleOptions,\n  );\n\n  const config = {\n    ...quillDefaults,\n    ...omitUndefinedValuesFromOptions(themeDefaults),\n    ...omitUndefinedValuesFromOptions(options),\n  };\n\n  let registry = options.registry;\n  if (registry) {\n    if (options.formats) {\n      debug.warn('Ignoring \"formats\" option because \"registry\" is specified');\n    }\n  } else {\n    registry = options.formats\n      ? createRegistryWithFormats(options.formats, config.registry, debug)\n      : config.registry;\n  }\n\n  return {\n    ...config,\n    registry,\n    container,\n    theme,\n    modules: Object.entries(modules).reduce(\n      (modulesWithDefaults, [name, value]) => {\n        if (!value) return modulesWithDefaults;\n\n        const moduleClass = Quill.import(`modules/${name}`);\n        if (moduleClass == null) {\n          debug.error(\n            `Cannot load ${name} module. Are you sure you registered it?`,\n          );\n          return modulesWithDefaults;\n        }\n        return {\n          ...modulesWithDefaults,\n          // @ts-expect-error\n          [name]: merge({}, moduleClass.DEFAULTS || {}, value),\n        };\n      },\n      {},\n    ),\n    bounds: resolveSelector(config.bounds),\n  };\n}\n\n// Handle selection preservation and TEXT_CHANGE emission\n// common to modification APIs\nfunction modify(\n  modifier: () => Delta,\n  source: EmitterSource,\n  index: number | boolean,\n  shift: number | null,\n) {\n  if (\n    !this.isEnabled() &&\n    source === Emitter.sources.USER &&\n    !this.allowReadOnlyEdits\n  ) {\n    return new Delta();\n  }\n  let range = index == null ? null : this.getSelection();\n  const oldDelta = this.editor.delta;\n  const change = modifier();\n  if (range != null) {\n    if (index === true) {\n      index = range.index; // eslint-disable-line prefer-destructuring\n    }\n    if (shift == null) {\n      range = shiftRange(range, change, source);\n    } else if (shift !== 0) {\n      // @ts-expect-error index should always be number\n      range = shiftRange(range, index, shift, source);\n    }\n    this.setSelection(range, Emitter.sources.SILENT);\n  }\n  if (change.length() > 0) {\n    const args = [Emitter.events.TEXT_CHANGE, change, oldDelta, source];\n    this.emitter.emit(Emitter.events.EDITOR_CHANGE, ...args);\n    if (source !== Emitter.sources.SILENT) {\n      this.emitter.emit(...args);\n    }\n  }\n  return change;\n}\n\ntype NormalizedIndexLength = [\n  number,\n  number,\n  Record<string, unknown>,\n  EmitterSource,\n];\nfunction overload(index: number, source?: EmitterSource): NormalizedIndexLength;\nfunction overload(\n  index: number,\n  length: number,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  index: number,\n  length: number,\n  format: string,\n  value: unknown,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  index: number,\n  length: number,\n  format: Record<string, unknown>,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(range: Range, source?: EmitterSource): NormalizedIndexLength;\nfunction overload(\n  range: Range,\n  format: string,\n  value: unknown,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  range: Range,\n  format: Record<string, unknown>,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  index: Range | number,\n  length?: number | string | Record<string, unknown> | EmitterSource,\n  name?: string | unknown | Record<string, unknown> | EmitterSource,\n  value?: unknown | EmitterSource,\n  source?: EmitterSource,\n): NormalizedIndexLength {\n  let formats: Record<string, unknown> = {};\n  // @ts-expect-error\n  if (typeof index.index === 'number' && typeof index.length === 'number') {\n    // Allow for throwaway end (used by insertText/insertEmbed)\n    if (typeof length !== 'number') {\n      // @ts-expect-error\n      source = value;\n      value = name;\n      name = length;\n      // @ts-expect-error\n      length = index.length; // eslint-disable-line prefer-destructuring\n      // @ts-expect-error\n      index = index.index; // eslint-disable-line prefer-destructuring\n    } else {\n      // @ts-expect-error\n      length = index.length; // eslint-disable-line prefer-destructuring\n      // @ts-expect-error\n      index = index.index; // eslint-disable-line prefer-destructuring\n    }\n  } else if (typeof length !== 'number') {\n    // @ts-expect-error\n    source = value;\n    value = name;\n    name = length;\n    length = 0;\n  }\n  // Handle format being object, two format name/value strings or excluded\n  if (typeof name === 'object') {\n    // @ts-expect-error Fix me later\n    formats = name;\n    // @ts-expect-error\n    source = value;\n  } else if (typeof name === 'string') {\n    if (value != null) {\n      formats[name] = value;\n    } else {\n      // @ts-expect-error\n      source = name;\n    }\n  }\n  // Handle optional source\n  source = source || Emitter.sources.API;\n  // @ts-expect-error\n  return [index, length, formats, source];\n}\n\nfunction shiftRange(range: Range, change: Delta, source?: EmitterSource): Range;\nfunction shiftRange(\n  range: Range,\n  index: number,\n  length?: number,\n  source?: EmitterSource,\n): Range;\nfunction shiftRange(\n  range: Range,\n  index: number | Delta,\n  lengthOrSource?: number | EmitterSource,\n  source?: EmitterSource,\n) {\n  const length = typeof lengthOrSource === 'number' ? lengthOrSource : 0;\n  if (range == null) return null;\n  let start;\n  let end;\n  // @ts-expect-error -- TODO: add a better type guard around `index`\n  if (index && typeof index.transformPosition === 'function') {\n    [start, end] = [range.index, range.index + range.length].map((pos) =>\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      index.transformPosition(pos, source !== Emitter.sources.USER),\n    );\n  } else {\n    [start, end] = [range.index, range.index + range.length].map((pos) => {\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      if (pos < index || (pos === index && source === Emitter.sources.USER))\n        return pos;\n      if (length >= 0) {\n        return pos + length;\n      }\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      return Math.max(index, pos + length);\n    });\n  }\n  return new Range(start, end - start);\n}\n\nexport type { Bounds, DebugLevel, EmitterSource };\nexport { Parchment, Range };\n\nexport { globalRegistry, expandConfig, overload, Quill as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}