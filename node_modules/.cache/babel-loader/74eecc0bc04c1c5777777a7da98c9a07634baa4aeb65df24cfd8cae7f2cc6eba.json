{"ast":null,"code":"import \"core-js/modules/es.number.is-nan.js\";\nimport \"core-js/modules/es.parse-int.js\";\nvar getParentElement = function getParentElement(element) {\n  return element.parentElement || element.getRootNode().host || null;\n};\nvar getElementRect = function getElementRect(element) {\n  var rect = element.getBoundingClientRect();\n  var scaleX = 'offsetWidth' in element && Math.abs(rect.width) / element.offsetWidth || 1;\n  var scaleY = 'offsetHeight' in element && Math.abs(rect.height) / element.offsetHeight || 1;\n  return {\n    top: rect.top,\n    right: rect.left + element.clientWidth * scaleX,\n    bottom: rect.top + element.clientHeight * scaleY,\n    left: rect.left\n  };\n};\nvar paddingValueToInt = function paddingValueToInt(value) {\n  var number = parseInt(value, 10);\n  return Number.isNaN(number) ? 0 : number;\n};\n\n// Follow the steps described in https://www.w3.org/TR/cssom-view-1/#element-scrolling-members,\n// assuming that the scroll option is set to 'nearest'.\nvar getScrollDistance = function getScrollDistance(targetStart, targetEnd, scrollStart, scrollEnd, scrollPaddingStart, scrollPaddingEnd) {\n  if (targetStart < scrollStart && targetEnd > scrollEnd) {\n    return 0;\n  }\n  if (targetStart < scrollStart) {\n    return -(scrollStart - targetStart + scrollPaddingStart);\n  }\n  if (targetEnd > scrollEnd) {\n    return targetEnd - targetStart > scrollEnd - scrollStart ? targetStart + scrollPaddingStart - scrollStart : targetEnd - scrollEnd + scrollPaddingEnd;\n  }\n  return 0;\n};\nvar scrollRectIntoView = function scrollRectIntoView(root, targetRect) {\n  var document = root.ownerDocument;\n  var rect = targetRect;\n  var current = root;\n  while (current) {\n    var _window$visualViewpor, _window$visualViewpor2, _window$visualViewpor3, _window$visualViewpor4;\n    var isDocumentBody = current === document.body;\n    var bounding = isDocumentBody ? {\n      top: 0,\n      right: (_window$visualViewpor = (_window$visualViewpor2 = window.visualViewport) === null || _window$visualViewpor2 === void 0 ? void 0 : _window$visualViewpor2.width) !== null && _window$visualViewpor !== void 0 ? _window$visualViewpor : document.documentElement.clientWidth,\n      bottom: (_window$visualViewpor3 = (_window$visualViewpor4 = window.visualViewport) === null || _window$visualViewpor4 === void 0 ? void 0 : _window$visualViewpor4.height) !== null && _window$visualViewpor3 !== void 0 ? _window$visualViewpor3 : document.documentElement.clientHeight,\n      left: 0\n    } : getElementRect(current);\n    var style = getComputedStyle(current);\n    var scrollDistanceX = getScrollDistance(rect.left, rect.right, bounding.left, bounding.right, paddingValueToInt(style.scrollPaddingLeft), paddingValueToInt(style.scrollPaddingRight));\n    var scrollDistanceY = getScrollDistance(rect.top, rect.bottom, bounding.top, bounding.bottom, paddingValueToInt(style.scrollPaddingTop), paddingValueToInt(style.scrollPaddingBottom));\n    if (scrollDistanceX || scrollDistanceY) {\n      if (isDocumentBody) {\n        var _document$defaultView;\n        (_document$defaultView = document.defaultView) === null || _document$defaultView === void 0 || _document$defaultView.scrollBy(scrollDistanceX, scrollDistanceY);\n      } else {\n        var _current = current,\n          scrollLeft = _current.scrollLeft,\n          scrollTop = _current.scrollTop;\n        if (scrollDistanceY) {\n          current.scrollTop += scrollDistanceY;\n        }\n        if (scrollDistanceX) {\n          current.scrollLeft += scrollDistanceX;\n        }\n        var scrolledLeft = current.scrollLeft - scrollLeft;\n        var scrolledTop = current.scrollTop - scrollTop;\n        rect = {\n          left: rect.left - scrolledLeft,\n          top: rect.top - scrolledTop,\n          right: rect.right - scrolledLeft,\n          bottom: rect.bottom - scrolledTop\n        };\n      }\n    }\n    current = isDocumentBody || style.position === 'fixed' ? null : getParentElement(current);\n  }\n};\nexport default scrollRectIntoView;","map":{"version":3,"names":["getParentElement","element","parentElement","getRootNode","host","getElementRect","rect","getBoundingClientRect","scaleX","Math","abs","width","offsetWidth","scaleY","height","offsetHeight","top","right","left","clientWidth","bottom","clientHeight","paddingValueToInt","value","number","parseInt","Number","isNaN","getScrollDistance","targetStart","targetEnd","scrollStart","scrollEnd","scrollPaddingStart","scrollPaddingEnd","scrollRectIntoView","root","targetRect","document","ownerDocument","current","_window$visualViewpor","_window$visualViewpor2","_window$visualViewpor3","_window$visualViewpor4","isDocumentBody","body","bounding","window","visualViewport","documentElement","style","getComputedStyle","scrollDistanceX","scrollPaddingLeft","scrollPaddingRight","scrollDistanceY","scrollPaddingTop","scrollPaddingBottom","_document$defaultView","defaultView","scrollBy","_current","scrollLeft","scrollTop","scrolledLeft","scrolledTop","position"],"sources":["../../../src/core/utils/scrollRectIntoView.ts"],"sourcesContent":["export type Rect = {\n  top: number;\n  right: number;\n  bottom: number;\n  left: number;\n};\n\nconst getParentElement = (element: Node): Element | null =>\n  element.parentElement || (element.getRootNode() as ShadowRoot).host || null;\n\nconst getElementRect = (element: Element): Rect => {\n  const rect = element.getBoundingClientRect();\n  const scaleX =\n    ('offsetWidth' in element &&\n      Math.abs(rect.width) / (element as HTMLElement).offsetWidth) ||\n    1;\n  const scaleY =\n    ('offsetHeight' in element &&\n      Math.abs(rect.height) / (element as HTMLElement).offsetHeight) ||\n    1;\n  return {\n    top: rect.top,\n    right: rect.left + element.clientWidth * scaleX,\n    bottom: rect.top + element.clientHeight * scaleY,\n    left: rect.left,\n  };\n};\n\nconst paddingValueToInt = (value: string) => {\n  const number = parseInt(value, 10);\n  return Number.isNaN(number) ? 0 : number;\n};\n\n// Follow the steps described in https://www.w3.org/TR/cssom-view-1/#element-scrolling-members,\n// assuming that the scroll option is set to 'nearest'.\nconst getScrollDistance = (\n  targetStart: number,\n  targetEnd: number,\n  scrollStart: number,\n  scrollEnd: number,\n  scrollPaddingStart: number,\n  scrollPaddingEnd: number,\n) => {\n  if (targetStart < scrollStart && targetEnd > scrollEnd) {\n    return 0;\n  }\n\n  if (targetStart < scrollStart) {\n    return -(scrollStart - targetStart + scrollPaddingStart);\n  }\n\n  if (targetEnd > scrollEnd) {\n    return targetEnd - targetStart > scrollEnd - scrollStart\n      ? targetStart + scrollPaddingStart - scrollStart\n      : targetEnd - scrollEnd + scrollPaddingEnd;\n  }\n  return 0;\n};\n\nconst scrollRectIntoView = (root: HTMLElement, targetRect: Rect) => {\n  const document = root.ownerDocument;\n\n  let rect = targetRect;\n\n  let current: Element | null = root;\n  while (current) {\n    const isDocumentBody: boolean = current === document.body;\n    const bounding = isDocumentBody\n      ? {\n          top: 0,\n          right:\n            window.visualViewport?.width ??\n            document.documentElement.clientWidth,\n          bottom:\n            window.visualViewport?.height ??\n            document.documentElement.clientHeight,\n          left: 0,\n        }\n      : getElementRect(current);\n\n    const style = getComputedStyle(current);\n    const scrollDistanceX = getScrollDistance(\n      rect.left,\n      rect.right,\n      bounding.left,\n      bounding.right,\n      paddingValueToInt(style.scrollPaddingLeft),\n      paddingValueToInt(style.scrollPaddingRight),\n    );\n    const scrollDistanceY = getScrollDistance(\n      rect.top,\n      rect.bottom,\n      bounding.top,\n      bounding.bottom,\n      paddingValueToInt(style.scrollPaddingTop),\n      paddingValueToInt(style.scrollPaddingBottom),\n    );\n    if (scrollDistanceX || scrollDistanceY) {\n      if (isDocumentBody) {\n        document.defaultView?.scrollBy(scrollDistanceX, scrollDistanceY);\n      } else {\n        const { scrollLeft, scrollTop } = current;\n        if (scrollDistanceY) {\n          current.scrollTop += scrollDistanceY;\n        }\n        if (scrollDistanceX) {\n          current.scrollLeft += scrollDistanceX;\n        }\n        const scrolledLeft = current.scrollLeft - scrollLeft;\n        const scrolledTop = current.scrollTop - scrollTop;\n        rect = {\n          left: rect.left - scrolledLeft,\n          top: rect.top - scrolledTop,\n          right: rect.right - scrolledLeft,\n          bottom: rect.bottom - scrolledTop,\n        };\n      }\n    }\n\n    current =\n      isDocumentBody || style.position === 'fixed'\n        ? null\n        : getParentElement(current);\n  }\n};\n\nexport default scrollRectIntoView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}