{"ast":null,"code":"import _slicedToArray from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport Delta from 'quill-delta';\nimport Quill from '../core/quill.js';\nimport Module from '../core/module.js';\nimport { TableCell, TableRow, TableBody, TableContainer, tableId } from '../formats/table.js';\nvar Table = /*#__PURE__*/function (_Module) {\n  function Table() {\n    var _this;\n    _classCallCheck(this, Table);\n    _this = _callSuper(this, Table, arguments);\n    _this.listenBalanceCells();\n    return _this;\n  }\n  _inherits(Table, _Module);\n  return _createClass(Table, [{\n    key: \"balanceTables\",\n    value: function balanceTables() {\n      this.quill.scroll.descendants(TableContainer).forEach(function (table) {\n        table.balanceCells();\n      });\n    }\n  }, {\n    key: \"deleteColumn\",\n    value: function deleteColumn() {\n      var _this$getTable = this.getTable(),\n        _this$getTable2 = _slicedToArray(_this$getTable, 3),\n        table = _this$getTable2[0],\n        cell = _this$getTable2[2];\n      if (cell == null) return;\n      // @ts-expect-error\n      table.deleteColumn(cell.cellOffset());\n      this.quill.update(Quill.sources.USER);\n    }\n  }, {\n    key: \"deleteRow\",\n    value: function deleteRow() {\n      var _this$getTable3 = this.getTable(),\n        _this$getTable4 = _slicedToArray(_this$getTable3, 2),\n        row = _this$getTable4[1];\n      if (row == null) return;\n      row.remove();\n      this.quill.update(Quill.sources.USER);\n    }\n  }, {\n    key: \"deleteTable\",\n    value: function deleteTable() {\n      var _this$getTable5 = this.getTable(),\n        _this$getTable6 = _slicedToArray(_this$getTable5, 1),\n        table = _this$getTable6[0];\n      if (table == null) return;\n      // @ts-expect-error\n      var offset = table.offset();\n      // @ts-expect-error\n      table.remove();\n      this.quill.update(Quill.sources.USER);\n      this.quill.setSelection(offset, Quill.sources.SILENT);\n    }\n  }, {\n    key: \"getTable\",\n    value: function getTable() {\n      var range = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.quill.getSelection();\n      if (range == null) return [null, null, null, -1];\n      var _this$quill$getLine = this.quill.getLine(range.index),\n        _this$quill$getLine2 = _slicedToArray(_this$quill$getLine, 2),\n        cell = _this$quill$getLine2[0],\n        offset = _this$quill$getLine2[1];\n      if (cell == null || cell.statics.blotName !== TableCell.blotName) {\n        return [null, null, null, -1];\n      }\n      var row = cell.parent;\n      var table = row.parent.parent;\n      // @ts-expect-error\n      return [table, row, cell, offset];\n    }\n  }, {\n    key: \"insertColumn\",\n    value: function insertColumn(offset) {\n      var range = this.quill.getSelection();\n      if (!range) return;\n      var _this$getTable7 = this.getTable(range),\n        _this$getTable8 = _slicedToArray(_this$getTable7, 3),\n        table = _this$getTable8[0],\n        row = _this$getTable8[1],\n        cell = _this$getTable8[2];\n      if (cell == null) return;\n      var column = cell.cellOffset();\n      table.insertColumn(column + offset);\n      this.quill.update(Quill.sources.USER);\n      var shift = row.rowOffset();\n      if (offset === 0) {\n        shift += 1;\n      }\n      this.quill.setSelection(range.index + shift, range.length, Quill.sources.SILENT);\n    }\n  }, {\n    key: \"insertColumnLeft\",\n    value: function insertColumnLeft() {\n      this.insertColumn(0);\n    }\n  }, {\n    key: \"insertColumnRight\",\n    value: function insertColumnRight() {\n      this.insertColumn(1);\n    }\n  }, {\n    key: \"insertRow\",\n    value: function insertRow(offset) {\n      var range = this.quill.getSelection();\n      if (!range) return;\n      var _this$getTable9 = this.getTable(range),\n        _this$getTable10 = _slicedToArray(_this$getTable9, 3),\n        table = _this$getTable10[0],\n        row = _this$getTable10[1],\n        cell = _this$getTable10[2];\n      if (cell == null) return;\n      var index = row.rowOffset();\n      table.insertRow(index + offset);\n      this.quill.update(Quill.sources.USER);\n      if (offset > 0) {\n        this.quill.setSelection(range, Quill.sources.SILENT);\n      } else {\n        this.quill.setSelection(range.index + row.children.length, range.length, Quill.sources.SILENT);\n      }\n    }\n  }, {\n    key: \"insertRowAbove\",\n    value: function insertRowAbove() {\n      this.insertRow(0);\n    }\n  }, {\n    key: \"insertRowBelow\",\n    value: function insertRowBelow() {\n      this.insertRow(1);\n    }\n  }, {\n    key: \"insertTable\",\n    value: function insertTable(rows, columns) {\n      var range = this.quill.getSelection();\n      if (range == null) return;\n      var delta = new Array(rows).fill(0).reduce(function (memo) {\n        var text = new Array(columns).fill('\\n').join('');\n        return memo.insert(text, {\n          table: tableId()\n        });\n      }, new Delta().retain(range.index));\n      this.quill.updateContents(delta, Quill.sources.USER);\n      this.quill.setSelection(range.index, Quill.sources.SILENT);\n      this.balanceTables();\n    }\n  }, {\n    key: \"listenBalanceCells\",\n    value: function listenBalanceCells() {\n      var _this2 = this;\n      this.quill.on(Quill.events.SCROLL_OPTIMIZE, function (mutations) {\n        mutations.some(function (mutation) {\n          if (['TD', 'TR', 'TBODY', 'TABLE'].includes(mutation.target.tagName)) {\n            _this2.quill.once(Quill.events.TEXT_CHANGE, function (delta, old, source) {\n              if (source !== Quill.sources.USER) return;\n              _this2.balanceTables();\n            });\n            return true;\n          }\n          return false;\n        });\n      });\n    }\n  }], [{\n    key: \"register\",\n    value: function register() {\n      Quill.register(TableCell);\n      Quill.register(TableRow);\n      Quill.register(TableBody);\n      Quill.register(TableContainer);\n    }\n  }]);\n}(Module);\nexport default Table;","map":{"version":3,"names":["Delta","Quill","Module","TableCell","TableRow","TableBody","TableContainer","tableId","Table","_Module","_this","_classCallCheck","_callSuper","arguments","listenBalanceCells","_inherits","_createClass","key","value","balanceTables","quill","scroll","descendants","forEach","table","balanceCells","deleteColumn","_this$getTable","getTable","_this$getTable2","_slicedToArray","cell","cellOffset","update","sources","USER","deleteRow","_this$getTable3","_this$getTable4","row","remove","deleteTable","_this$getTable5","_this$getTable6","offset","setSelection","SILENT","range","length","undefined","getSelection","_this$quill$getLine","getLine","index","_this$quill$getLine2","statics","blotName","parent","insertColumn","_this$getTable7","_this$getTable8","column","shift","rowOffset","insertColumnLeft","insertColumnRight","insertRow","_this$getTable9","_this$getTable10","children","insertRowAbove","insertRowBelow","insertTable","rows","columns","delta","Array","fill","reduce","memo","text","join","insert","retain","updateContents","_this2","on","events","SCROLL_OPTIMIZE","mutations","some","mutation","includes","target","tagName","once","TEXT_CHANGE","old","source","register"],"sources":["../../src/modules/table.ts"],"sourcesContent":["import Delta from 'quill-delta';\nimport Quill from '../core/quill.js';\nimport Module from '../core/module.js';\nimport {\n  TableCell,\n  TableRow,\n  TableBody,\n  TableContainer,\n  tableId,\n} from '../formats/table.js';\n\nclass Table extends Module {\n  static register() {\n    Quill.register(TableCell);\n    Quill.register(TableRow);\n    Quill.register(TableBody);\n    Quill.register(TableContainer);\n  }\n\n  constructor(...args: ConstructorParameters<typeof Module>) {\n    super(...args);\n    this.listenBalanceCells();\n  }\n\n  balanceTables() {\n    this.quill.scroll.descendants(TableContainer).forEach((table) => {\n      table.balanceCells();\n    });\n  }\n\n  deleteColumn() {\n    const [table, , cell] = this.getTable();\n    if (cell == null) return;\n    // @ts-expect-error\n    table.deleteColumn(cell.cellOffset());\n    this.quill.update(Quill.sources.USER);\n  }\n\n  deleteRow() {\n    const [, row] = this.getTable();\n    if (row == null) return;\n    row.remove();\n    this.quill.update(Quill.sources.USER);\n  }\n\n  deleteTable() {\n    const [table] = this.getTable();\n    if (table == null) return;\n    // @ts-expect-error\n    const offset = table.offset();\n    // @ts-expect-error\n    table.remove();\n    this.quill.update(Quill.sources.USER);\n    this.quill.setSelection(offset, Quill.sources.SILENT);\n  }\n\n  getTable(\n    range = this.quill.getSelection(),\n  ): [null, null, null, -1] | [Table, TableRow, TableCell, number] {\n    if (range == null) return [null, null, null, -1];\n    const [cell, offset] = this.quill.getLine(range.index);\n    if (cell == null || cell.statics.blotName !== TableCell.blotName) {\n      return [null, null, null, -1];\n    }\n    const row = cell.parent;\n    const table = row.parent.parent;\n    // @ts-expect-error\n    return [table, row, cell, offset];\n  }\n\n  insertColumn(offset: number) {\n    const range = this.quill.getSelection();\n    if (!range) return;\n    const [table, row, cell] = this.getTable(range);\n    if (cell == null) return;\n    const column = cell.cellOffset();\n    table.insertColumn(column + offset);\n    this.quill.update(Quill.sources.USER);\n    let shift = row.rowOffset();\n    if (offset === 0) {\n      shift += 1;\n    }\n    this.quill.setSelection(\n      range.index + shift,\n      range.length,\n      Quill.sources.SILENT,\n    );\n  }\n\n  insertColumnLeft() {\n    this.insertColumn(0);\n  }\n\n  insertColumnRight() {\n    this.insertColumn(1);\n  }\n\n  insertRow(offset: number) {\n    const range = this.quill.getSelection();\n    if (!range) return;\n    const [table, row, cell] = this.getTable(range);\n    if (cell == null) return;\n    const index = row.rowOffset();\n    table.insertRow(index + offset);\n    this.quill.update(Quill.sources.USER);\n    if (offset > 0) {\n      this.quill.setSelection(range, Quill.sources.SILENT);\n    } else {\n      this.quill.setSelection(\n        range.index + row.children.length,\n        range.length,\n        Quill.sources.SILENT,\n      );\n    }\n  }\n\n  insertRowAbove() {\n    this.insertRow(0);\n  }\n\n  insertRowBelow() {\n    this.insertRow(1);\n  }\n\n  insertTable(rows: number, columns: number) {\n    const range = this.quill.getSelection();\n    if (range == null) return;\n    const delta = new Array(rows).fill(0).reduce((memo) => {\n      const text = new Array(columns).fill('\\n').join('');\n      return memo.insert(text, { table: tableId() });\n    }, new Delta().retain(range.index));\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.setSelection(range.index, Quill.sources.SILENT);\n    this.balanceTables();\n  }\n\n  listenBalanceCells() {\n    this.quill.on(\n      Quill.events.SCROLL_OPTIMIZE,\n      (mutations: MutationRecord[]) => {\n        mutations.some((mutation) => {\n          if (\n            ['TD', 'TR', 'TBODY', 'TABLE'].includes(\n              (mutation.target as HTMLElement).tagName,\n            )\n          ) {\n            this.quill.once(Quill.events.TEXT_CHANGE, (delta, old, source) => {\n              if (source !== Quill.sources.USER) return;\n              this.balanceTables();\n            });\n            return true;\n          }\n          return false;\n        });\n      },\n    );\n  }\n}\n\nexport default Table;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}