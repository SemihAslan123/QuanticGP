{"ast":null,"code":"import _defineProperty from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _possibleConstructorReturn from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _callSuper from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport Delta from 'quill-delta';\nimport { EmbedBlot, Scope } from 'parchment';\nimport Quill from '../core/quill.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nvar debug = logger('quill:toolbar');\nvar Toolbar = /*#__PURE__*/function (_Module) {\n  function Toolbar(quill, options) {\n    var _this;\n    _classCallCheck(this, Toolbar);\n    _this = _callSuper(this, Toolbar, [quill, options]);\n    if (Array.isArray(_this.options.container)) {\n      var _quill$container;\n      var container = document.createElement('div');\n      container.setAttribute('role', 'toolbar');\n      addControls(container, _this.options.container);\n      (_quill$container = quill.container) === null || _quill$container === void 0 || (_quill$container = _quill$container.parentNode) === null || _quill$container === void 0 || _quill$container.insertBefore(container, quill.container);\n      _this.container = container;\n    } else if (typeof _this.options.container === 'string') {\n      _this.container = document.querySelector(_this.options.container);\n    } else {\n      _this.container = _this.options.container;\n    }\n    if (!(_this.container instanceof HTMLElement)) {\n      debug.error('Container required for toolbar', _this.options);\n      return _possibleConstructorReturn(_this);\n    }\n    _this.container.classList.add('ql-toolbar');\n    _this.controls = [];\n    _this.handlers = {};\n    if (_this.options.handlers) {\n      Object.keys(_this.options.handlers).forEach(function (format) {\n        var _this$options$handler;\n        var handler = (_this$options$handler = _this.options.handlers) === null || _this$options$handler === void 0 ? void 0 : _this$options$handler[format];\n        if (handler) {\n          _this.addHandler(format, handler);\n        }\n      });\n    }\n    Array.from(_this.container.querySelectorAll('button, select')).forEach(function (input) {\n      // @ts-expect-error\n      _this.attach(input);\n    });\n    _this.quill.on(Quill.events.EDITOR_CHANGE, function () {\n      var _this$quill$selection = _this.quill.selection.getRange(),\n        _this$quill$selection2 = _slicedToArray(_this$quill$selection, 1),\n        range = _this$quill$selection2[0]; // quill.getSelection triggers update\n      _this.update(range);\n    });\n    return _this;\n  }\n  _inherits(Toolbar, _Module);\n  return _createClass(Toolbar, [{\n    key: \"addHandler\",\n    value: function addHandler(format, handler) {\n      this.handlers[format] = handler;\n    }\n  }, {\n    key: \"attach\",\n    value: function attach(input) {\n      var _this2 = this;\n      var format = Array.from(input.classList).find(function (className) {\n        return className.indexOf('ql-') === 0;\n      });\n      if (!format) return;\n      format = format.slice('ql-'.length);\n      if (input.tagName === 'BUTTON') {\n        input.setAttribute('type', 'button');\n      }\n      if (this.handlers[format] == null && this.quill.scroll.query(format) == null) {\n        debug.warn('ignoring attaching to nonexistent format', format, input);\n        return;\n      }\n      var eventName = input.tagName === 'SELECT' ? 'change' : 'click';\n      input.addEventListener(eventName, function (e) {\n        var value;\n        if (input.tagName === 'SELECT') {\n          // @ts-expect-error\n          if (input.selectedIndex < 0) return;\n          // @ts-expect-error\n          var selected = input.options[input.selectedIndex];\n          if (selected.hasAttribute('selected')) {\n            value = false;\n          } else {\n            value = selected.value || false;\n          }\n        } else {\n          if (input.classList.contains('ql-active')) {\n            value = false;\n          } else {\n            // @ts-expect-error\n            value = input.value || !input.hasAttribute('value');\n          }\n          e.preventDefault();\n        }\n        _this2.quill.focus();\n        var _this2$quill$selectio = _this2.quill.selection.getRange(),\n          _this2$quill$selectio2 = _slicedToArray(_this2$quill$selectio, 1),\n          range = _this2$quill$selectio2[0];\n        if (_this2.handlers[format] != null) {\n          _this2.handlers[format].call(_this2, value);\n        } else if (\n        // @ts-expect-error\n        _this2.quill.scroll.query(format).prototype instanceof EmbedBlot) {\n          value = prompt(\"Enter \".concat(format)); // eslint-disable-line no-alert\n          if (!value) return;\n          _this2.quill.updateContents(new Delta()\n          // @ts-expect-error Fix me later\n          .retain(range.index)\n          // @ts-expect-error Fix me later\n          [\"delete\"](range.length).insert(_defineProperty({}, format, value)), Quill.sources.USER);\n        } else {\n          _this2.quill.format(format, value, Quill.sources.USER);\n        }\n        _this2.update(range);\n      });\n      this.controls.push([format, input]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(range) {\n      var formats = range == null ? {} : this.quill.getFormat(range);\n      this.controls.forEach(function (pair) {\n        var _pair = _slicedToArray(pair, 2),\n          format = _pair[0],\n          input = _pair[1];\n        if (input.tagName === 'SELECT') {\n          var option = null;\n          if (range == null) {\n            option = null;\n          } else if (formats[format] == null) {\n            option = input.querySelector('option[selected]');\n          } else if (!Array.isArray(formats[format])) {\n            var value = formats[format];\n            if (typeof value === 'string') {\n              value = value.replace(/\"/g, '\\\\\"');\n            }\n            option = input.querySelector(\"option[value=\\\"\".concat(value, \"\\\"]\"));\n          }\n          if (option == null) {\n            // @ts-expect-error TODO fix me later\n            input.value = ''; // TODO make configurable?\n            // @ts-expect-error TODO fix me later\n            input.selectedIndex = -1;\n          } else {\n            option.selected = true;\n          }\n        } else if (range == null) {\n          input.classList.remove('ql-active');\n          input.setAttribute('aria-pressed', 'false');\n        } else if (input.hasAttribute('value')) {\n          // both being null should match (default values)\n          // '1' should match with 1 (headers)\n          var _value = formats[format];\n          var isActive = _value === input.getAttribute('value') || _value != null && _value.toString() === input.getAttribute('value') || _value == null && !input.getAttribute('value');\n          input.classList.toggle('ql-active', isActive);\n          input.setAttribute('aria-pressed', isActive.toString());\n        } else {\n          var _isActive = formats[format] != null;\n          input.classList.toggle('ql-active', _isActive);\n          input.setAttribute('aria-pressed', _isActive.toString());\n        }\n      });\n    }\n  }]);\n}(Module);\nToolbar.DEFAULTS = {};\nfunction addButton(container, format, value) {\n  var input = document.createElement('button');\n  input.setAttribute('type', 'button');\n  input.classList.add(\"ql-\".concat(format));\n  input.setAttribute('aria-pressed', 'false');\n  if (value != null) {\n    input.value = value;\n    input.setAttribute('aria-label', \"\".concat(format, \": \").concat(value));\n  } else {\n    input.setAttribute('aria-label', format);\n  }\n  container.appendChild(input);\n}\nfunction addControls(container, groups) {\n  if (!Array.isArray(groups[0])) {\n    // @ts-expect-error\n    groups = [groups];\n  }\n  groups.forEach(function (controls) {\n    var group = document.createElement('span');\n    group.classList.add('ql-formats');\n    controls.forEach(function (control) {\n      if (typeof control === 'string') {\n        addButton(group, control);\n      } else {\n        var format = Object.keys(control)[0];\n        var value = control[format];\n        if (Array.isArray(value)) {\n          addSelect(group, format, value);\n        } else {\n          addButton(group, format, value);\n        }\n      }\n    });\n    container.appendChild(group);\n  });\n}\nfunction addSelect(container, format, values) {\n  var input = document.createElement('select');\n  input.classList.add(\"ql-\".concat(format));\n  values.forEach(function (value) {\n    var option = document.createElement('option');\n    if (value !== false) {\n      option.setAttribute('value', String(value));\n    } else {\n      option.setAttribute('selected', 'selected');\n    }\n    input.appendChild(option);\n  });\n  container.appendChild(input);\n}\nToolbar.DEFAULTS = {\n  container: null,\n  handlers: {\n    clean: function clean() {\n      var _this3 = this;\n      var range = this.quill.getSelection();\n      if (range == null) return;\n      if (range.length === 0) {\n        var formats = this.quill.getFormat();\n        Object.keys(formats).forEach(function (name) {\n          // Clean functionality in existing apps only clean inline formats\n          if (_this3.quill.scroll.query(name, Scope.INLINE) != null) {\n            _this3.quill.format(name, false, Quill.sources.USER);\n          }\n        });\n      } else {\n        this.quill.removeFormat(range.index, range.length, Quill.sources.USER);\n      }\n    },\n    direction: function direction(value) {\n      var _this$quill$getFormat = this.quill.getFormat(),\n        align = _this$quill$getFormat.align;\n      if (value === 'rtl' && align == null) {\n        this.quill.format('align', 'right', Quill.sources.USER);\n      } else if (!value && align === 'right') {\n        this.quill.format('align', false, Quill.sources.USER);\n      }\n      this.quill.format('direction', value, Quill.sources.USER);\n    },\n    indent: function indent(value) {\n      var range = this.quill.getSelection();\n      // @ts-expect-error\n      var formats = this.quill.getFormat(range);\n      // @ts-expect-error\n      var indent = parseInt(formats.indent || 0, 10);\n      if (value === '+1' || value === '-1') {\n        var modifier = value === '+1' ? 1 : -1;\n        if (formats.direction === 'rtl') modifier *= -1;\n        this.quill.format('indent', indent + modifier, Quill.sources.USER);\n      }\n    },\n    link: function link(value) {\n      if (value === true) {\n        value = prompt('Enter link URL:'); // eslint-disable-line no-alert\n      }\n      this.quill.format('link', value, Quill.sources.USER);\n    },\n    list: function list(value) {\n      var range = this.quill.getSelection();\n      // @ts-expect-error\n      var formats = this.quill.getFormat(range);\n      if (value === 'check') {\n        if (formats.list === 'checked' || formats.list === 'unchecked') {\n          this.quill.format('list', false, Quill.sources.USER);\n        } else {\n          this.quill.format('list', 'unchecked', Quill.sources.USER);\n        }\n      } else {\n        this.quill.format('list', value, Quill.sources.USER);\n      }\n    }\n  }\n};\nexport { Toolbar as default, addControls };","map":{"version":3,"names":["Delta","EmbedBlot","Scope","Quill","logger","Module","debug","Toolbar","_Module","quill","options","_this","_classCallCheck","_callSuper","Array","isArray","container","_quill$container","document","createElement","setAttribute","addControls","parentNode","insertBefore","querySelector","HTMLElement","error","_possibleConstructorReturn","classList","add","controls","handlers","Object","keys","forEach","format","_this$options$handler","handler","addHandler","from","querySelectorAll","input","attach","on","events","EDITOR_CHANGE","_this$quill$selection","selection","getRange","_this$quill$selection2","_slicedToArray","range","update","_inherits","_createClass","key","value","_this2","find","className","indexOf","slice","length","tagName","scroll","query","warn","eventName","addEventListener","e","selectedIndex","selected","hasAttribute","contains","preventDefault","focus","_this2$quill$selectio","_this2$quill$selectio2","call","prototype","prompt","concat","updateContents","retain","index","insert","_defineProperty","sources","USER","push","formats","getFormat","pair","_pair","option","replace","remove","isActive","getAttribute","toString","toggle","DEFAULTS","addButton","appendChild","groups","group","control","addSelect","values","String","clean","_this3","getSelection","name","INLINE","removeFormat","direction","_this$quill$getFormat","align","indent","parseInt","modifier","link","list","default"],"sources":["../../src/modules/toolbar.ts"],"sourcesContent":["import Delta from 'quill-delta';\nimport { EmbedBlot, Scope } from 'parchment';\nimport Quill from '../core/quill.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nimport type { Range } from '../core/selection.js';\n\nconst debug = logger('quill:toolbar');\n\ntype Handler = (this: Toolbar, value: any) => void;\n\nexport type ToolbarConfig = Array<\n  string[] | Array<string | Record<string, unknown>>\n>;\nexport interface ToolbarProps {\n  container?: HTMLElement | ToolbarConfig | null;\n  handlers?: Record<string, Handler>;\n  option?: number;\n  module?: boolean;\n  theme?: boolean;\n}\n\nclass Toolbar extends Module<ToolbarProps> {\n  static DEFAULTS: ToolbarProps;\n\n  container?: HTMLElement | null;\n  controls: [string, HTMLElement][];\n  handlers: Record<string, Handler>;\n\n  constructor(quill: Quill, options: Partial<ToolbarProps>) {\n    super(quill, options);\n    if (Array.isArray(this.options.container)) {\n      const container = document.createElement('div');\n      container.setAttribute('role', 'toolbar');\n      addControls(container, this.options.container);\n      quill.container?.parentNode?.insertBefore(container, quill.container);\n      this.container = container;\n    } else if (typeof this.options.container === 'string') {\n      this.container = document.querySelector(this.options.container);\n    } else {\n      this.container = this.options.container;\n    }\n    if (!(this.container instanceof HTMLElement)) {\n      debug.error('Container required for toolbar', this.options);\n      return;\n    }\n    this.container.classList.add('ql-toolbar');\n    this.controls = [];\n    this.handlers = {};\n    if (this.options.handlers) {\n      Object.keys(this.options.handlers).forEach((format) => {\n        const handler = this.options.handlers?.[format];\n        if (handler) {\n          this.addHandler(format, handler);\n        }\n      });\n    }\n    Array.from(this.container.querySelectorAll('button, select')).forEach(\n      (input) => {\n        // @ts-expect-error\n        this.attach(input);\n      },\n    );\n    this.quill.on(Quill.events.EDITOR_CHANGE, () => {\n      const [range] = this.quill.selection.getRange(); // quill.getSelection triggers update\n      this.update(range);\n    });\n  }\n\n  addHandler(format: string, handler: Handler) {\n    this.handlers[format] = handler;\n  }\n\n  attach(input: HTMLElement) {\n    let format = Array.from(input.classList).find((className) => {\n      return className.indexOf('ql-') === 0;\n    });\n    if (!format) return;\n    format = format.slice('ql-'.length);\n    if (input.tagName === 'BUTTON') {\n      input.setAttribute('type', 'button');\n    }\n    if (\n      this.handlers[format] == null &&\n      this.quill.scroll.query(format) == null\n    ) {\n      debug.warn('ignoring attaching to nonexistent format', format, input);\n      return;\n    }\n    const eventName = input.tagName === 'SELECT' ? 'change' : 'click';\n    input.addEventListener(eventName, (e) => {\n      let value;\n      if (input.tagName === 'SELECT') {\n        // @ts-expect-error\n        if (input.selectedIndex < 0) return;\n        // @ts-expect-error\n        const selected = input.options[input.selectedIndex];\n        if (selected.hasAttribute('selected')) {\n          value = false;\n        } else {\n          value = selected.value || false;\n        }\n      } else {\n        if (input.classList.contains('ql-active')) {\n          value = false;\n        } else {\n          // @ts-expect-error\n          value = input.value || !input.hasAttribute('value');\n        }\n        e.preventDefault();\n      }\n      this.quill.focus();\n      const [range] = this.quill.selection.getRange();\n      if (this.handlers[format] != null) {\n        this.handlers[format].call(this, value);\n      } else if (\n        // @ts-expect-error\n        this.quill.scroll.query(format).prototype instanceof EmbedBlot\n      ) {\n        value = prompt(`Enter ${format}`); // eslint-disable-line no-alert\n        if (!value) return;\n        this.quill.updateContents(\n          new Delta()\n            // @ts-expect-error Fix me later\n            .retain(range.index)\n            // @ts-expect-error Fix me later\n            .delete(range.length)\n            .insert({ [format]: value }),\n          Quill.sources.USER,\n        );\n      } else {\n        this.quill.format(format, value, Quill.sources.USER);\n      }\n      this.update(range);\n    });\n    this.controls.push([format, input]);\n  }\n\n  update(range: Range | null) {\n    const formats = range == null ? {} : this.quill.getFormat(range);\n    this.controls.forEach((pair) => {\n      const [format, input] = pair;\n      if (input.tagName === 'SELECT') {\n        let option: HTMLOptionElement | null = null;\n        if (range == null) {\n          option = null;\n        } else if (formats[format] == null) {\n          option = input.querySelector('option[selected]');\n        } else if (!Array.isArray(formats[format])) {\n          let value = formats[format];\n          if (typeof value === 'string') {\n            value = value.replace(/\"/g, '\\\\\"');\n          }\n          option = input.querySelector(`option[value=\"${value}\"]`);\n        }\n        if (option == null) {\n          // @ts-expect-error TODO fix me later\n          input.value = ''; // TODO make configurable?\n          // @ts-expect-error TODO fix me later\n          input.selectedIndex = -1;\n        } else {\n          option.selected = true;\n        }\n      } else if (range == null) {\n        input.classList.remove('ql-active');\n        input.setAttribute('aria-pressed', 'false');\n      } else if (input.hasAttribute('value')) {\n        // both being null should match (default values)\n        // '1' should match with 1 (headers)\n        const value = formats[format] as boolean | number | string | object;\n        const isActive =\n          value === input.getAttribute('value') ||\n          (value != null && value.toString() === input.getAttribute('value')) ||\n          (value == null && !input.getAttribute('value'));\n        input.classList.toggle('ql-active', isActive);\n        input.setAttribute('aria-pressed', isActive.toString());\n      } else {\n        const isActive = formats[format] != null;\n        input.classList.toggle('ql-active', isActive);\n        input.setAttribute('aria-pressed', isActive.toString());\n      }\n    });\n  }\n}\nToolbar.DEFAULTS = {};\n\nfunction addButton(container: HTMLElement, format: string, value?: string) {\n  const input = document.createElement('button');\n  input.setAttribute('type', 'button');\n  input.classList.add(`ql-${format}`);\n  input.setAttribute('aria-pressed', 'false');\n  if (value != null) {\n    input.value = value;\n    input.setAttribute('aria-label', `${format}: ${value}`);\n  } else {\n    input.setAttribute('aria-label', format);\n  }\n  container.appendChild(input);\n}\n\nfunction addControls(\n  container: HTMLElement,\n  groups:\n    | (string | Record<string, unknown>)[][]\n    | (string | Record<string, unknown>)[],\n) {\n  if (!Array.isArray(groups[0])) {\n    // @ts-expect-error\n    groups = [groups];\n  }\n  groups.forEach((controls: any) => {\n    const group = document.createElement('span');\n    group.classList.add('ql-formats');\n    controls.forEach((control: any) => {\n      if (typeof control === 'string') {\n        addButton(group, control);\n      } else {\n        const format = Object.keys(control)[0];\n        const value = control[format];\n        if (Array.isArray(value)) {\n          addSelect(group, format, value);\n        } else {\n          addButton(group, format, value);\n        }\n      }\n    });\n    container.appendChild(group);\n  });\n}\n\nfunction addSelect(\n  container: HTMLElement,\n  format: string,\n  values: Array<string | boolean>,\n) {\n  const input = document.createElement('select');\n  input.classList.add(`ql-${format}`);\n  values.forEach((value) => {\n    const option = document.createElement('option');\n    if (value !== false) {\n      option.setAttribute('value', String(value));\n    } else {\n      option.setAttribute('selected', 'selected');\n    }\n    input.appendChild(option);\n  });\n  container.appendChild(input);\n}\n\nToolbar.DEFAULTS = {\n  container: null,\n  handlers: {\n    clean() {\n      const range = this.quill.getSelection();\n      if (range == null) return;\n      if (range.length === 0) {\n        const formats = this.quill.getFormat();\n        Object.keys(formats).forEach((name) => {\n          // Clean functionality in existing apps only clean inline formats\n          if (this.quill.scroll.query(name, Scope.INLINE) != null) {\n            this.quill.format(name, false, Quill.sources.USER);\n          }\n        });\n      } else {\n        this.quill.removeFormat(range.index, range.length, Quill.sources.USER);\n      }\n    },\n    direction(value) {\n      const { align } = this.quill.getFormat();\n      if (value === 'rtl' && align == null) {\n        this.quill.format('align', 'right', Quill.sources.USER);\n      } else if (!value && align === 'right') {\n        this.quill.format('align', false, Quill.sources.USER);\n      }\n      this.quill.format('direction', value, Quill.sources.USER);\n    },\n    indent(value) {\n      const range = this.quill.getSelection();\n      // @ts-expect-error\n      const formats = this.quill.getFormat(range);\n      // @ts-expect-error\n      const indent = parseInt(formats.indent || 0, 10);\n      if (value === '+1' || value === '-1') {\n        let modifier = value === '+1' ? 1 : -1;\n        if (formats.direction === 'rtl') modifier *= -1;\n        this.quill.format('indent', indent + modifier, Quill.sources.USER);\n      }\n    },\n    link(value) {\n      if (value === true) {\n        value = prompt('Enter link URL:'); // eslint-disable-line no-alert\n      }\n      this.quill.format('link', value, Quill.sources.USER);\n    },\n    list(value) {\n      const range = this.quill.getSelection();\n      // @ts-expect-error\n      const formats = this.quill.getFormat(range);\n      if (value === 'check') {\n        if (formats.list === 'checked' || formats.list === 'unchecked') {\n          this.quill.format('list', false, Quill.sources.USER);\n        } else {\n          this.quill.format('list', 'unchecked', Quill.sources.USER);\n        }\n      } else {\n        this.quill.format('list', value, Quill.sources.USER);\n      }\n    },\n  },\n};\n\nexport { Toolbar as default, addControls };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}