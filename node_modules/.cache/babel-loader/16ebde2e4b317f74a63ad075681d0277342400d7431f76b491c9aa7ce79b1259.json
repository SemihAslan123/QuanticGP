{"ast":null,"code":"import _toConsumableArray from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nvar normalWeightRegexp = /font-weight:\\s*normal/;\nvar blockTagNames = ['P', 'OL', 'UL'];\nvar isBlockElement = function isBlockElement(element) {\n  return element && blockTagNames.includes(element.tagName);\n};\nvar normalizeEmptyLines = function normalizeEmptyLines(doc) {\n  Array.from(doc.querySelectorAll('br')).filter(function (br) {\n    return isBlockElement(br.previousElementSibling) && isBlockElement(br.nextElementSibling);\n  }).forEach(function (br) {\n    var _br$parentNode;\n    (_br$parentNode = br.parentNode) === null || _br$parentNode === void 0 || _br$parentNode.removeChild(br);\n  });\n};\nvar normalizeFontWeight = function normalizeFontWeight(doc) {\n  Array.from(doc.querySelectorAll('b[style*=\"font-weight\"]')).filter(function (node) {\n    var _node$getAttribute;\n    return (_node$getAttribute = node.getAttribute('style')) === null || _node$getAttribute === void 0 ? void 0 : _node$getAttribute.match(normalWeightRegexp);\n  }).forEach(function (node) {\n    var _node$parentNode;\n    var fragment = doc.createDocumentFragment();\n    fragment.append.apply(fragment, _toConsumableArray(node.childNodes));\n    (_node$parentNode = node.parentNode) === null || _node$parentNode === void 0 || _node$parentNode.replaceChild(fragment, node);\n  });\n};\nexport default function normalize(doc) {\n  if (doc.querySelector('[id^=\"docs-internal-guid-\"]')) {\n    normalizeFontWeight(doc);\n    normalizeEmptyLines(doc);\n  }\n}","map":{"version":3,"names":["normalWeightRegexp","blockTagNames","isBlockElement","element","includes","tagName","normalizeEmptyLines","doc","Array","from","querySelectorAll","filter","br","previousElementSibling","nextElementSibling","forEach","_br$parentNode","parentNode","removeChild","normalizeFontWeight","node","_node$getAttribute","getAttribute","match","_node$parentNode","fragment","createDocumentFragment","append","apply","_toConsumableArray","childNodes","replaceChild","normalize","querySelector"],"sources":["../../../../src/modules/normalizeExternalHTML/normalizers/googleDocs.ts"],"sourcesContent":["const normalWeightRegexp = /font-weight:\\s*normal/;\nconst blockTagNames = ['P', 'OL', 'UL'];\n\nconst isBlockElement = (element: Element | null) => {\n  return element && blockTagNames.includes(element.tagName);\n};\n\nconst normalizeEmptyLines = (doc: Document) => {\n  Array.from(doc.querySelectorAll('br'))\n    .filter(\n      (br) =>\n        isBlockElement(br.previousElementSibling) &&\n        isBlockElement(br.nextElementSibling),\n    )\n    .forEach((br) => {\n      br.parentNode?.removeChild(br);\n    });\n};\n\nconst normalizeFontWeight = (doc: Document) => {\n  Array.from(doc.querySelectorAll('b[style*=\"font-weight\"]'))\n    .filter((node) => node.getAttribute('style')?.match(normalWeightRegexp))\n    .forEach((node) => {\n      const fragment = doc.createDocumentFragment();\n      fragment.append(...node.childNodes);\n      node.parentNode?.replaceChild(fragment, node);\n    });\n};\n\nexport default function normalize(doc: Document) {\n  if (doc.querySelector('[id^=\"docs-internal-guid-\"]')) {\n    normalizeFontWeight(doc);\n    normalizeEmptyLines(doc);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;AAAA,IAAMA,kBAAkB,GAAG,uBAAuB;AAClD,IAAMC,aAAa,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;AAEvC,IAAMC,cAAc,GAAI,SAAlBA,cAAcA,CAAIC,OAAuB,EAAK;EAClD,OAAOA,OAAO,IAAIF,aAAa,CAACG,QAAQ,CAACD,OAAO,CAACE,OAAO,CAAC;AAC3D,CAAC;AAED,IAAMC,mBAAmB,GAAI,SAAvBA,mBAAmBA,CAAIC,GAAa,EAAK;EAC7CC,KAAK,CAACC,IAAI,CAACF,GAAG,CAACG,gBAAgB,CAAC,IAAI,CAAC,CAAC,CACnCC,MAAM,CACJ,UAAAC,EAAE;IAAA,OACDV,cAAc,CAACU,EAAE,CAACC,sBAAsB,CAAC,IACzCX,cAAc,CAACU,EAAE,CAACE,kBAAkB,CACxC;EAAA,EAAC,CACAC,OAAO,CAAE,UAAAH,EAAE,EAAK;IAAA,IAAAI,cAAA;IACf,CAAAA,cAAA,GAAAJ,EAAE,CAACK,UAAU,cAAAD,cAAA,eAAbA,cAAA,CAAeE,WAAW,CAACN,EAAE,CAAC;EAChC,CAAC,CAAC;AACN,CAAC;AAED,IAAMO,mBAAmB,GAAI,SAAvBA,mBAAmBA,CAAIZ,GAAa,EAAK;EAC7CC,KAAK,CAACC,IAAI,CAACF,GAAG,CAACG,gBAAgB,CAAC,yBAAyB,CAAC,CAAC,CACxDC,MAAM,CAAE,UAAAS,IAAI;IAAA,IAAAC,kBAAA;IAAA,QAAAA,kBAAA,GAAKD,IAAI,CAACE,YAAY,CAAC,OAAO,CAAC,cAAAD,kBAAA,uBAA1BA,kBAAA,CAA4BE,KAAK,CAACvB,kBAAkB,CAAC;EAAA,EAAC,CACvEe,OAAO,CAAE,UAAAK,IAAI,EAAK;IAAA,IAAAI,gBAAA;IACjB,IAAMC,QAAQ,GAAGlB,GAAG,CAACmB,sBAAsB,CAAC,CAAC;IAC7CD,QAAQ,CAACE,MAAM,CAAAC,KAAA,CAAfH,QAAQ,EAAAI,kBAAA,CAAWT,IAAI,CAACU,UAAU,EAAC;IACnC,CAAAN,gBAAA,GAAAJ,IAAI,CAACH,UAAU,cAAAO,gBAAA,eAAfA,gBAAA,CAAiBO,YAAY,CAACN,QAAQ,EAAEL,IAAI,CAAC;EAC/C,CAAC,CAAC;AACN,CAAC;AAED,eAAe,SAASY,SAASA,CAACzB,GAAa,EAAE;EAC/C,IAAIA,GAAG,CAAC0B,aAAa,CAAC,6BAA6B,CAAC,EAAE;IACpDd,mBAAmB,CAACZ,GAAG,CAAC;IACxBD,mBAAmB,CAACC,GAAG,CAAC;EAC1B;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}