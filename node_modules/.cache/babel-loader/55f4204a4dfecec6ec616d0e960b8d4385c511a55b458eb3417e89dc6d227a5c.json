{"ast":null,"code":"import _objectSpread from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _defineProperty from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.replace-all.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { Attributor, BlockBlot, ClassAttributor, EmbedBlot, Scope, StyleAttributor } from 'parchment';\nimport Delta from 'quill-delta';\nimport { BlockEmbed } from '../blots/block.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\nimport { AlignAttribute, AlignStyle } from '../formats/align.js';\nimport { BackgroundStyle } from '../formats/background.js';\nimport CodeBlock from '../formats/code.js';\nimport { ColorStyle } from '../formats/color.js';\nimport { DirectionAttribute, DirectionStyle } from '../formats/direction.js';\nimport { FontStyle } from '../formats/font.js';\nimport { SizeStyle } from '../formats/size.js';\nimport { deleteRange } from './keyboard.js';\nimport normalizeExternalHTML from './normalizeExternalHTML/index.js';\nvar debug = logger('quill:clipboard');\nvar CLIPBOARD_CONFIG = [[Node.TEXT_NODE, matchText], [Node.TEXT_NODE, matchNewline], ['br', matchBreak], [Node.ELEMENT_NODE, matchNewline], [Node.ELEMENT_NODE, matchBlot], [Node.ELEMENT_NODE, matchAttributor], [Node.ELEMENT_NODE, matchStyles], ['li', matchIndent], ['ol, ul', matchList], ['pre', matchCodeBlock], ['tr', matchTable], ['b', createMatchAlias('bold')], ['i', createMatchAlias('italic')], ['strike', createMatchAlias('strike')], ['style', matchIgnore]];\nvar ATTRIBUTE_ATTRIBUTORS = [AlignAttribute, DirectionAttribute].reduce(function (memo, attr) {\n  memo[attr.keyName] = attr;\n  return memo;\n}, {});\nvar STYLE_ATTRIBUTORS = [AlignStyle, BackgroundStyle, ColorStyle, DirectionStyle, FontStyle, SizeStyle].reduce(function (memo, attr) {\n  memo[attr.keyName] = attr;\n  return memo;\n}, {});\nvar Clipboard = /*#__PURE__*/function (_Module) {\n  function Clipboard(quill, options) {\n    var _this$options$matcher;\n    var _this;\n    _classCallCheck(this, Clipboard);\n    _this = _callSuper(this, Clipboard, [quill, options]);\n    _this.quill.root.addEventListener('copy', function (e) {\n      return _this.onCaptureCopy(e, false);\n    });\n    _this.quill.root.addEventListener('cut', function (e) {\n      return _this.onCaptureCopy(e, true);\n    });\n    _this.quill.root.addEventListener('paste', _this.onCapturePaste.bind(_this));\n    _this.matchers = [];\n    CLIPBOARD_CONFIG.concat((_this$options$matcher = _this.options.matchers) !== null && _this$options$matcher !== void 0 ? _this$options$matcher : []).forEach(function (_ref) {\n      var _ref6 = _slicedToArray(_ref, 2),\n        selector = _ref6[0],\n        matcher = _ref6[1];\n      _this.addMatcher(selector, matcher);\n    });\n    return _this;\n  }\n  _inherits(Clipboard, _Module);\n  return _createClass(Clipboard, [{\n    key: \"addMatcher\",\n    value: function addMatcher(selector, matcher) {\n      this.matchers.push([selector, matcher]);\n    }\n  }, {\n    key: \"convert\",\n    value: function convert(_ref2) {\n      var html = _ref2.html,\n        text = _ref2.text;\n      var formats = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (formats[CodeBlock.blotName]) {\n        return new Delta().insert(text || '', _defineProperty({}, CodeBlock.blotName, formats[CodeBlock.blotName]));\n      }\n      if (!html) {\n        return new Delta().insert(text || '', formats);\n      }\n      var delta = this.convertHTML(html);\n      // Remove trailing newline\n      if (deltaEndsWith(delta, '\\n') && (delta.ops[delta.ops.length - 1].attributes == null || formats.table)) {\n        return delta.compose(new Delta().retain(delta.length() - 1)[\"delete\"](1));\n      }\n      return delta;\n    }\n  }, {\n    key: \"normalizeHTML\",\n    value: function normalizeHTML(doc) {\n      normalizeExternalHTML(doc);\n    }\n  }, {\n    key: \"convertHTML\",\n    value: function convertHTML(html) {\n      var doc = new DOMParser().parseFromString(html, 'text/html');\n      this.normalizeHTML(doc);\n      var container = doc.body;\n      var nodeMatches = new WeakMap();\n      var _this$prepareMatching = this.prepareMatching(container, nodeMatches),\n        _this$prepareMatching2 = _slicedToArray(_this$prepareMatching, 2),\n        elementMatchers = _this$prepareMatching2[0],\n        textMatchers = _this$prepareMatching2[1];\n      return traverse(this.quill.scroll, container, elementMatchers, textMatchers, nodeMatches);\n    }\n  }, {\n    key: \"dangerouslyPasteHTML\",\n    value: function dangerouslyPasteHTML(index, html) {\n      var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Quill.sources.API;\n      if (typeof index === 'string') {\n        var delta = this.convert({\n          html: index,\n          text: ''\n        });\n        // @ts-expect-error\n        this.quill.setContents(delta, html);\n        this.quill.setSelection(0, Quill.sources.SILENT);\n      } else {\n        var paste = this.convert({\n          html: html,\n          text: ''\n        });\n        this.quill.updateContents(new Delta().retain(index).concat(paste), source);\n        this.quill.setSelection(index + paste.length(), Quill.sources.SILENT);\n      }\n    }\n  }, {\n    key: \"onCaptureCopy\",\n    value: function onCaptureCopy(e) {\n      var _e$clipboardData, _e$clipboardData2;\n      var isCut = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (e.defaultPrevented) return;\n      e.preventDefault();\n      var _this$quill$selection = this.quill.selection.getRange(),\n        _this$quill$selection2 = _slicedToArray(_this$quill$selection, 1),\n        range = _this$quill$selection2[0];\n      if (range == null) return;\n      var _this$onCopy = this.onCopy(range, isCut),\n        html = _this$onCopy.html,\n        text = _this$onCopy.text;\n      (_e$clipboardData = e.clipboardData) === null || _e$clipboardData === void 0 || _e$clipboardData.setData('text/plain', text);\n      (_e$clipboardData2 = e.clipboardData) === null || _e$clipboardData2 === void 0 || _e$clipboardData2.setData('text/html', html);\n      if (isCut) {\n        deleteRange({\n          range: range,\n          quill: this.quill\n        });\n      }\n    }\n\n    /*\n     * https://www.iana.org/assignments/media-types/text/uri-list\n     */\n  }, {\n    key: \"normalizeURIList\",\n    value: function normalizeURIList(urlList) {\n      return urlList.split(/\\r?\\n/)\n      // Ignore all comments\n      .filter(function (url) {\n        return url[0] !== '#';\n      }).join('\\n');\n    }\n  }, {\n    key: \"onCapturePaste\",\n    value: function onCapturePaste(e) {\n      var _e$clipboardData3, _e$clipboardData4, _e$clipboardData6;\n      if (e.defaultPrevented || !this.quill.isEnabled()) return;\n      e.preventDefault();\n      var range = this.quill.getSelection(true);\n      if (range == null) return;\n      var html = (_e$clipboardData3 = e.clipboardData) === null || _e$clipboardData3 === void 0 ? void 0 : _e$clipboardData3.getData('text/html');\n      var text = (_e$clipboardData4 = e.clipboardData) === null || _e$clipboardData4 === void 0 ? void 0 : _e$clipboardData4.getData('text/plain');\n      if (!html && !text) {\n        var _e$clipboardData5;\n        var urlList = (_e$clipboardData5 = e.clipboardData) === null || _e$clipboardData5 === void 0 ? void 0 : _e$clipboardData5.getData('text/uri-list');\n        if (urlList) {\n          text = this.normalizeURIList(urlList);\n        }\n      }\n      var files = Array.from(((_e$clipboardData6 = e.clipboardData) === null || _e$clipboardData6 === void 0 ? void 0 : _e$clipboardData6.files) || []);\n      if (!html && files.length > 0) {\n        this.quill.uploader.upload(range, files);\n        return;\n      }\n      if (html && files.length > 0) {\n        var _doc$body$firstElemen;\n        var doc = new DOMParser().parseFromString(html, 'text/html');\n        if (doc.body.childElementCount === 1 && ((_doc$body$firstElemen = doc.body.firstElementChild) === null || _doc$body$firstElemen === void 0 ? void 0 : _doc$body$firstElemen.tagName) === 'IMG') {\n          this.quill.uploader.upload(range, files);\n          return;\n        }\n      }\n      this.onPaste(range, {\n        html: html,\n        text: text\n      });\n    }\n  }, {\n    key: \"onCopy\",\n    value: function onCopy(range) {\n      var text = this.quill.getText(range);\n      var html = this.quill.getSemanticHTML(range);\n      return {\n        html: html,\n        text: text\n      };\n    }\n  }, {\n    key: \"onPaste\",\n    value: function onPaste(range, _ref3) {\n      var text = _ref3.text,\n        html = _ref3.html;\n      var formats = this.quill.getFormat(range.index);\n      var pastedDelta = this.convert({\n        text: text,\n        html: html\n      }, formats);\n      debug.log('onPaste', pastedDelta, {\n        text: text,\n        html: html\n      });\n      var delta = new Delta().retain(range.index)[\"delete\"](range.length).concat(pastedDelta);\n      this.quill.updateContents(delta, Quill.sources.USER);\n      // range.length contributes to delta.length()\n      this.quill.setSelection(delta.length() - range.length, Quill.sources.SILENT);\n      this.quill.scrollSelectionIntoView();\n    }\n  }, {\n    key: \"prepareMatching\",\n    value: function prepareMatching(container, nodeMatches) {\n      var elementMatchers = [];\n      var textMatchers = [];\n      this.matchers.forEach(function (pair) {\n        var _pair = _slicedToArray(pair, 2),\n          selector = _pair[0],\n          matcher = _pair[1];\n        switch (selector) {\n          case Node.TEXT_NODE:\n            textMatchers.push(matcher);\n            break;\n          case Node.ELEMENT_NODE:\n            elementMatchers.push(matcher);\n            break;\n          default:\n            Array.from(container.querySelectorAll(selector)).forEach(function (node) {\n              if (nodeMatches.has(node)) {\n                var matches = nodeMatches.get(node);\n                matches === null || matches === void 0 || matches.push(matcher);\n              } else {\n                nodeMatches.set(node, [matcher]);\n              }\n            });\n            break;\n        }\n      });\n      return [elementMatchers, textMatchers];\n    }\n  }]);\n}(Module);\n_defineProperty(Clipboard, \"DEFAULTS\", {\n  matchers: []\n});\nfunction applyFormat(delta, format, value, scroll) {\n  if (!scroll.query(format)) {\n    return delta;\n  }\n  return delta.reduce(function (newDelta, op) {\n    if (!op.insert) return newDelta;\n    if (op.attributes && op.attributes[format]) {\n      return newDelta.push(op);\n    }\n    var formats = value ? _defineProperty({}, format, value) : {};\n    return newDelta.insert(op.insert, _objectSpread(_objectSpread({}, formats), op.attributes));\n  }, new Delta());\n}\nfunction deltaEndsWith(delta, text) {\n  var endText = '';\n  for (var i = delta.ops.length - 1; i >= 0 && endText.length < text.length; --i // eslint-disable-line no-plusplus\n  ) {\n    var op = delta.ops[i];\n    if (typeof op.insert !== 'string') break;\n    endText = op.insert + endText;\n  }\n  return endText.slice(-1 * text.length) === text;\n}\nfunction isLine(node, scroll) {\n  if (!(node instanceof Element)) return false;\n  var match = scroll.query(node);\n  // @ts-expect-error\n  if (match && match.prototype instanceof EmbedBlot) return false;\n  return ['address', 'article', 'blockquote', 'canvas', 'dd', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'iframe', 'li', 'main', 'nav', 'ol', 'output', 'p', 'pre', 'section', 'table', 'td', 'tr', 'ul', 'video'].includes(node.tagName.toLowerCase());\n}\nfunction isBetweenInlineElements(node, scroll) {\n  return node.previousElementSibling && node.nextElementSibling && !isLine(node.previousElementSibling, scroll) && !isLine(node.nextElementSibling, scroll);\n}\nvar preNodes = new WeakMap();\nfunction isPre(node) {\n  if (node == null) return false;\n  if (!preNodes.has(node)) {\n    // @ts-expect-error\n    if (node.tagName === 'PRE') {\n      preNodes.set(node, true);\n    } else {\n      preNodes.set(node, isPre(node.parentNode));\n    }\n  }\n  return preNodes.get(node);\n}\nfunction traverse(scroll, node, elementMatchers, textMatchers, nodeMatches) {\n  // Post-order\n  if (node.nodeType === node.TEXT_NODE) {\n    return textMatchers.reduce(function (delta, matcher) {\n      return matcher(node, delta, scroll);\n    }, new Delta());\n  }\n  if (node.nodeType === node.ELEMENT_NODE) {\n    return Array.from(node.childNodes || []).reduce(function (delta, childNode) {\n      var childrenDelta = traverse(scroll, childNode, elementMatchers, textMatchers, nodeMatches);\n      if (childNode.nodeType === node.ELEMENT_NODE) {\n        childrenDelta = elementMatchers.reduce(function (reducedDelta, matcher) {\n          return matcher(childNode, reducedDelta, scroll);\n        }, childrenDelta);\n        childrenDelta = (nodeMatches.get(childNode) || []).reduce(function (reducedDelta, matcher) {\n          return matcher(childNode, reducedDelta, scroll);\n        }, childrenDelta);\n      }\n      return delta.concat(childrenDelta);\n    }, new Delta());\n  }\n  return new Delta();\n}\nfunction createMatchAlias(format) {\n  return function (_node, delta, scroll) {\n    return applyFormat(delta, format, true, scroll);\n  };\n}\nfunction matchAttributor(node, delta, scroll) {\n  var attributes = Attributor.keys(node);\n  var classes = ClassAttributor.keys(node);\n  var styles = StyleAttributor.keys(node);\n  var formats = {};\n  attributes.concat(classes).concat(styles).forEach(function (name) {\n    var attr = scroll.query(name, Scope.ATTRIBUTE);\n    if (attr != null) {\n      formats[attr.attrName] = attr.value(node);\n      if (formats[attr.attrName]) return;\n    }\n    attr = ATTRIBUTE_ATTRIBUTORS[name];\n    if (attr != null && (attr.attrName === name || attr.keyName === name)) {\n      formats[attr.attrName] = attr.value(node) || undefined;\n    }\n    attr = STYLE_ATTRIBUTORS[name];\n    if (attr != null && (attr.attrName === name || attr.keyName === name)) {\n      attr = STYLE_ATTRIBUTORS[name];\n      formats[attr.attrName] = attr.value(node) || undefined;\n    }\n  });\n  return Object.entries(formats).reduce(function (newDelta, _ref4) {\n    var _ref8 = _slicedToArray(_ref4, 2),\n      name = _ref8[0],\n      value = _ref8[1];\n    return applyFormat(newDelta, name, value, scroll);\n  }, delta);\n}\nfunction matchBlot(node, delta, scroll) {\n  var match = scroll.query(node);\n  if (match == null) return delta;\n  // @ts-expect-error\n  if (match.prototype instanceof EmbedBlot) {\n    var embed = {};\n    // @ts-expect-error\n    var value = match.value(node);\n    if (value != null) {\n      // @ts-expect-error\n      embed[match.blotName] = value;\n      // @ts-expect-error\n      return new Delta().insert(embed, match.formats(node, scroll));\n    }\n  } else {\n    // @ts-expect-error\n    if (match.prototype instanceof BlockBlot && !deltaEndsWith(delta, '\\n')) {\n      delta.insert('\\n');\n    }\n    if ('blotName' in match && 'formats' in match && typeof match.formats === 'function') {\n      return applyFormat(delta, match.blotName, match.formats(node, scroll), scroll);\n    }\n  }\n  return delta;\n}\nfunction matchBreak(node, delta) {\n  if (!deltaEndsWith(delta, '\\n')) {\n    delta.insert('\\n');\n  }\n  return delta;\n}\nfunction matchCodeBlock(node, delta, scroll) {\n  var match = scroll.query('code-block');\n  var language = match && 'formats' in match && typeof match.formats === 'function' ? match.formats(node, scroll) : true;\n  return applyFormat(delta, 'code-block', language, scroll);\n}\nfunction matchIgnore() {\n  return new Delta();\n}\nfunction matchIndent(node, delta, scroll) {\n  var match = scroll.query(node);\n  if (match == null ||\n  // @ts-expect-error\n  match.blotName !== 'list' || !deltaEndsWith(delta, '\\n')) {\n    return delta;\n  }\n  var indent = -1;\n  var parent = node.parentNode;\n  while (parent != null) {\n    // @ts-expect-error\n    if (['OL', 'UL'].includes(parent.tagName)) {\n      indent += 1;\n    }\n    parent = parent.parentNode;\n  }\n  if (indent <= 0) return delta;\n  return delta.reduce(function (composed, op) {\n    if (!op.insert) return composed;\n    if (op.attributes && typeof op.attributes.indent === 'number') {\n      return composed.push(op);\n    }\n    return composed.insert(op.insert, _objectSpread({\n      indent: indent\n    }, op.attributes || {}));\n  }, new Delta());\n}\nfunction matchList(node, delta, scroll) {\n  var element = node;\n  var list = element.tagName === 'OL' ? 'ordered' : 'bullet';\n  var checkedAttr = element.getAttribute('data-checked');\n  if (checkedAttr) {\n    list = checkedAttr === 'true' ? 'checked' : 'unchecked';\n  }\n  return applyFormat(delta, 'list', list, scroll);\n}\nfunction matchNewline(node, delta, scroll) {\n  if (!deltaEndsWith(delta, '\\n')) {\n    if (isLine(node, scroll) && (node.childNodes.length > 0 || node instanceof HTMLParagraphElement)) {\n      return delta.insert('\\n');\n    }\n    if (delta.length() > 0 && node.nextSibling) {\n      var nextSibling = node.nextSibling;\n      while (nextSibling != null) {\n        if (isLine(nextSibling, scroll)) {\n          return delta.insert('\\n');\n        }\n        var match = scroll.query(nextSibling);\n        // @ts-expect-error\n        if (match && match.prototype instanceof BlockEmbed) {\n          return delta.insert('\\n');\n        }\n        nextSibling = nextSibling.firstChild;\n      }\n    }\n  }\n  return delta;\n}\nfunction matchStyles(node, delta, scroll) {\n  var _style$fontWeight;\n  var formats = {};\n  var style = node.style || {};\n  if (style.fontStyle === 'italic') {\n    formats.italic = true;\n  }\n  if (style.textDecoration === 'underline') {\n    formats.underline = true;\n  }\n  if (style.textDecoration === 'line-through') {\n    formats.strike = true;\n  }\n  if ((_style$fontWeight = style.fontWeight) !== null && _style$fontWeight !== void 0 && _style$fontWeight.startsWith('bold') ||\n  // @ts-expect-error Fix me later\n  parseInt(style.fontWeight, 10) >= 700) {\n    formats.bold = true;\n  }\n  delta = Object.entries(formats).reduce(function (newDelta, _ref5) {\n    var _ref9 = _slicedToArray(_ref5, 2),\n      name = _ref9[0],\n      value = _ref9[1];\n    return applyFormat(newDelta, name, value, scroll);\n  }, delta);\n  // @ts-expect-error\n  if (parseFloat(style.textIndent || 0) > 0) {\n    // Could be 0.5in\n    return new Delta().insert('\\t').concat(delta);\n  }\n  return delta;\n}\nfunction matchTable(node, delta, scroll) {\n  var _node$parentElement, _node$parentElement2;\n  var table = ((_node$parentElement = node.parentElement) === null || _node$parentElement === void 0 ? void 0 : _node$parentElement.tagName) === 'TABLE' ? node.parentElement : (_node$parentElement2 = node.parentElement) === null || _node$parentElement2 === void 0 ? void 0 : _node$parentElement2.parentElement;\n  if (table != null) {\n    var rows = Array.from(table.querySelectorAll('tr'));\n    var row = rows.indexOf(node) + 1;\n    return applyFormat(delta, 'table', row, scroll);\n  }\n  return delta;\n}\nfunction matchText(node, delta, scroll) {\n  var _node$parentElement3;\n  // @ts-expect-error\n  var text = node.data;\n  // Word represents empty line with <o:p>&nbsp;</o:p>\n  if (((_node$parentElement3 = node.parentElement) === null || _node$parentElement3 === void 0 ? void 0 : _node$parentElement3.tagName) === 'O:P') {\n    return delta.insert(text.trim());\n  }\n  if (!isPre(node)) {\n    if (text.trim().length === 0 && text.includes('\\n') && !isBetweenInlineElements(node, scroll)) {\n      return delta;\n    }\n    // convert all non-nbsp whitespace into regular space\n    text = text.replace(/[^\\S\\u00a0]/g, ' ');\n    // collapse consecutive spaces into one\n    text = text.replace(/ {2,}/g, ' ');\n    if (node.previousSibling == null && node.parentElement != null && isLine(node.parentElement, scroll) || node.previousSibling instanceof Element && isLine(node.previousSibling, scroll)) {\n      // block structure means we don't need leading space\n      text = text.replace(/^ /, '');\n    }\n    if (node.nextSibling == null && node.parentElement != null && isLine(node.parentElement, scroll) || node.nextSibling instanceof Element && isLine(node.nextSibling, scroll)) {\n      // block structure means we don't need trailing space\n      text = text.replace(/ $/, '');\n    }\n    // done removing whitespace and can normalize all to regular space\n    text = text.replaceAll(\"\\xA0\", ' ');\n  }\n  return delta.insert(text);\n}\nexport { Clipboard as default, matchAttributor, matchBlot, matchNewline, matchText, traverse };","map":{"version":3,"names":["Attributor","BlockBlot","ClassAttributor","EmbedBlot","Scope","StyleAttributor","Delta","BlockEmbed","logger","Module","Quill","AlignAttribute","AlignStyle","BackgroundStyle","CodeBlock","ColorStyle","DirectionAttribute","DirectionStyle","FontStyle","SizeStyle","deleteRange","normalizeExternalHTML","debug","CLIPBOARD_CONFIG","Node","TEXT_NODE","matchText","matchNewline","matchBreak","ELEMENT_NODE","matchBlot","matchAttributor","matchStyles","matchIndent","matchList","matchCodeBlock","matchTable","createMatchAlias","matchIgnore","ATTRIBUTE_ATTRIBUTORS","reduce","memo","attr","keyName","STYLE_ATTRIBUTORS","Clipboard","_Module","quill","options","_this$options$matcher","_this","_classCallCheck","_callSuper","root","addEventListener","e","onCaptureCopy","onCapturePaste","bind","matchers","concat","forEach","_ref","_ref6","_slicedToArray","selector","matcher","addMatcher","_inherits","_createClass","key","value","push","convert","_ref2","html","text","formats","arguments","length","undefined","blotName","insert","_defineProperty","delta","convertHTML","deltaEndsWith","ops","attributes","table","compose","retain","normalizeHTML","doc","DOMParser","parseFromString","container","body","nodeMatches","WeakMap","_this$prepareMatching","prepareMatching","_this$prepareMatching2","elementMatchers","textMatchers","traverse","scroll","dangerouslyPasteHTML","index","source","sources","API","setContents","setSelection","SILENT","paste","updateContents","_e$clipboardData","_e$clipboardData2","isCut","defaultPrevented","preventDefault","_this$quill$selection","selection","getRange","_this$quill$selection2","range","_this$onCopy","onCopy","clipboardData","setData","normalizeURIList","urlList","split","filter","url","join","_e$clipboardData3","_e$clipboardData4","_e$clipboardData6","isEnabled","getSelection","getData","_e$clipboardData5","files","Array","from","uploader","upload","_doc$body$firstElemen","childElementCount","firstElementChild","tagName","onPaste","getText","getSemanticHTML","_ref3","getFormat","pastedDelta","log","USER","scrollSelectionIntoView","pair","_pair","querySelectorAll","node","has","matches","get","set","applyFormat","format","query","newDelta","op","_objectSpread","endText","i","slice","isLine","Element","match","prototype","includes","toLowerCase","isBetweenInlineElements","previousElementSibling","nextElementSibling","preNodes","isPre","parentNode","nodeType","childNodes","childNode","childrenDelta","reducedDelta","_node","keys","classes","styles","name","ATTRIBUTE","attrName","Object","entries","_ref4","_ref8","embed","language","indent","parent","composed","element","list","checkedAttr","getAttribute","HTMLParagraphElement","nextSibling","firstChild","_style$fontWeight","style","fontStyle","italic","textDecoration","underline","strike","fontWeight","startsWith","parseInt","bold","_ref5","_ref9","parseFloat","textIndent","_node$parentElement","_node$parentElement2","parentElement","rows","row","indexOf","_node$parentElement3","data","trim","replace","previousSibling","replaceAll","default"],"sources":["../../src/modules/clipboard.ts"],"sourcesContent":["import type { ScrollBlot } from 'parchment';\nimport {\n  Attributor,\n  BlockBlot,\n  ClassAttributor,\n  EmbedBlot,\n  Scope,\n  StyleAttributor,\n} from 'parchment';\nimport Delta from 'quill-delta';\nimport { BlockEmbed } from '../blots/block.js';\nimport type { EmitterSource } from '../core/emitter.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\nimport type { Range } from '../core/selection.js';\nimport { AlignAttribute, AlignStyle } from '../formats/align.js';\nimport { BackgroundStyle } from '../formats/background.js';\nimport CodeBlock from '../formats/code.js';\nimport { ColorStyle } from '../formats/color.js';\nimport { DirectionAttribute, DirectionStyle } from '../formats/direction.js';\nimport { FontStyle } from '../formats/font.js';\nimport { SizeStyle } from '../formats/size.js';\nimport { deleteRange } from './keyboard.js';\nimport normalizeExternalHTML from './normalizeExternalHTML/index.js';\n\nconst debug = logger('quill:clipboard');\n\ntype Selector = string | Node['TEXT_NODE'] | Node['ELEMENT_NODE'];\ntype Matcher = (node: Node, delta: Delta, scroll: ScrollBlot) => Delta;\n\nconst CLIPBOARD_CONFIG: [Selector, Matcher][] = [\n  [Node.TEXT_NODE, matchText],\n  [Node.TEXT_NODE, matchNewline],\n  ['br', matchBreak],\n  [Node.ELEMENT_NODE, matchNewline],\n  [Node.ELEMENT_NODE, matchBlot],\n  [Node.ELEMENT_NODE, matchAttributor],\n  [Node.ELEMENT_NODE, matchStyles],\n  ['li', matchIndent],\n  ['ol, ul', matchList],\n  ['pre', matchCodeBlock],\n  ['tr', matchTable],\n  ['b', createMatchAlias('bold')],\n  ['i', createMatchAlias('italic')],\n  ['strike', createMatchAlias('strike')],\n  ['style', matchIgnore],\n];\n\nconst ATTRIBUTE_ATTRIBUTORS = [AlignAttribute, DirectionAttribute].reduce(\n  (memo: Record<string, Attributor>, attr) => {\n    memo[attr.keyName] = attr;\n    return memo;\n  },\n  {},\n);\n\nconst STYLE_ATTRIBUTORS = [\n  AlignStyle,\n  BackgroundStyle,\n  ColorStyle,\n  DirectionStyle,\n  FontStyle,\n  SizeStyle,\n].reduce((memo: Record<string, Attributor>, attr) => {\n  memo[attr.keyName] = attr;\n  return memo;\n}, {});\n\ninterface ClipboardOptions {\n  matchers: [Selector, Matcher][];\n}\n\nclass Clipboard extends Module<ClipboardOptions> {\n  static DEFAULTS: ClipboardOptions = {\n    matchers: [],\n  };\n\n  matchers: [Selector, Matcher][];\n\n  constructor(quill: Quill, options: Partial<ClipboardOptions>) {\n    super(quill, options);\n    this.quill.root.addEventListener('copy', (e) =>\n      this.onCaptureCopy(e, false),\n    );\n    this.quill.root.addEventListener('cut', (e) => this.onCaptureCopy(e, true));\n    this.quill.root.addEventListener('paste', this.onCapturePaste.bind(this));\n    this.matchers = [];\n    CLIPBOARD_CONFIG.concat(this.options.matchers ?? []).forEach(\n      ([selector, matcher]) => {\n        this.addMatcher(selector, matcher);\n      },\n    );\n  }\n\n  addMatcher(selector: Selector, matcher: Matcher) {\n    this.matchers.push([selector, matcher]);\n  }\n\n  convert(\n    { html, text }: { html?: string; text?: string },\n    formats: Record<string, unknown> = {},\n  ) {\n    if (formats[CodeBlock.blotName]) {\n      return new Delta().insert(text || '', {\n        [CodeBlock.blotName]: formats[CodeBlock.blotName],\n      });\n    }\n    if (!html) {\n      return new Delta().insert(text || '', formats);\n    }\n    const delta = this.convertHTML(html);\n    // Remove trailing newline\n    if (\n      deltaEndsWith(delta, '\\n') &&\n      (delta.ops[delta.ops.length - 1].attributes == null || formats.table)\n    ) {\n      return delta.compose(new Delta().retain(delta.length() - 1).delete(1));\n    }\n    return delta;\n  }\n\n  protected normalizeHTML(doc: Document) {\n    normalizeExternalHTML(doc);\n  }\n\n  protected convertHTML(html: string) {\n    const doc = new DOMParser().parseFromString(html, 'text/html');\n    this.normalizeHTML(doc);\n    const container = doc.body;\n    const nodeMatches = new WeakMap();\n    const [elementMatchers, textMatchers] = this.prepareMatching(\n      container,\n      nodeMatches,\n    );\n    return traverse(\n      this.quill.scroll,\n      container,\n      elementMatchers,\n      textMatchers,\n      nodeMatches,\n    );\n  }\n\n  dangerouslyPasteHTML(html: string, source?: EmitterSource): void;\n  dangerouslyPasteHTML(\n    index: number,\n    html: string,\n    source?: EmitterSource,\n  ): void;\n  dangerouslyPasteHTML(\n    index: number | string,\n    html?: string,\n    source: EmitterSource = Quill.sources.API,\n  ) {\n    if (typeof index === 'string') {\n      const delta = this.convert({ html: index, text: '' });\n      // @ts-expect-error\n      this.quill.setContents(delta, html);\n      this.quill.setSelection(0, Quill.sources.SILENT);\n    } else {\n      const paste = this.convert({ html, text: '' });\n      this.quill.updateContents(\n        new Delta().retain(index).concat(paste),\n        source,\n      );\n      this.quill.setSelection(index + paste.length(), Quill.sources.SILENT);\n    }\n  }\n\n  onCaptureCopy(e: ClipboardEvent, isCut = false) {\n    if (e.defaultPrevented) return;\n    e.preventDefault();\n    const [range] = this.quill.selection.getRange();\n    if (range == null) return;\n    const { html, text } = this.onCopy(range, isCut);\n    e.clipboardData?.setData('text/plain', text);\n    e.clipboardData?.setData('text/html', html);\n    if (isCut) {\n      deleteRange({ range, quill: this.quill });\n    }\n  }\n\n  /*\n   * https://www.iana.org/assignments/media-types/text/uri-list\n   */\n  private normalizeURIList(urlList: string) {\n    return (\n      urlList\n        .split(/\\r?\\n/)\n        // Ignore all comments\n        .filter((url) => url[0] !== '#')\n        .join('\\n')\n    );\n  }\n\n  onCapturePaste(e: ClipboardEvent) {\n    if (e.defaultPrevented || !this.quill.isEnabled()) return;\n    e.preventDefault();\n    const range = this.quill.getSelection(true);\n    if (range == null) return;\n    const html = e.clipboardData?.getData('text/html');\n    let text = e.clipboardData?.getData('text/plain');\n    if (!html && !text) {\n      const urlList = e.clipboardData?.getData('text/uri-list');\n      if (urlList) {\n        text = this.normalizeURIList(urlList);\n      }\n    }\n    const files = Array.from(e.clipboardData?.files || []);\n    if (!html && files.length > 0) {\n      this.quill.uploader.upload(range, files);\n      return;\n    }\n    if (html && files.length > 0) {\n      const doc = new DOMParser().parseFromString(html, 'text/html');\n      if (\n        doc.body.childElementCount === 1 &&\n        doc.body.firstElementChild?.tagName === 'IMG'\n      ) {\n        this.quill.uploader.upload(range, files);\n        return;\n      }\n    }\n    this.onPaste(range, { html, text });\n  }\n\n  onCopy(range: Range, isCut: boolean): { html: string; text: string };\n  onCopy(range: Range) {\n    const text = this.quill.getText(range);\n    const html = this.quill.getSemanticHTML(range);\n    return { html, text };\n  }\n\n  onPaste(range: Range, { text, html }: { text?: string; html?: string }) {\n    const formats = this.quill.getFormat(range.index);\n    const pastedDelta = this.convert({ text, html }, formats);\n    debug.log('onPaste', pastedDelta, { text, html });\n    const delta = new Delta()\n      .retain(range.index)\n      .delete(range.length)\n      .concat(pastedDelta);\n    this.quill.updateContents(delta, Quill.sources.USER);\n    // range.length contributes to delta.length()\n    this.quill.setSelection(\n      delta.length() - range.length,\n      Quill.sources.SILENT,\n    );\n    this.quill.scrollSelectionIntoView();\n  }\n\n  prepareMatching(container: Element, nodeMatches: WeakMap<Node, Matcher[]>) {\n    const elementMatchers: Matcher[] = [];\n    const textMatchers: Matcher[] = [];\n    this.matchers.forEach((pair) => {\n      const [selector, matcher] = pair;\n      switch (selector) {\n        case Node.TEXT_NODE:\n          textMatchers.push(matcher);\n          break;\n        case Node.ELEMENT_NODE:\n          elementMatchers.push(matcher);\n          break;\n        default:\n          Array.from(container.querySelectorAll(selector)).forEach((node) => {\n            if (nodeMatches.has(node)) {\n              const matches = nodeMatches.get(node);\n              matches?.push(matcher);\n            } else {\n              nodeMatches.set(node, [matcher]);\n            }\n          });\n          break;\n      }\n    });\n    return [elementMatchers, textMatchers];\n  }\n}\n\nfunction applyFormat(\n  delta: Delta,\n  format: string,\n  value: unknown,\n  scroll: ScrollBlot,\n): Delta {\n  if (!scroll.query(format)) {\n    return delta;\n  }\n\n  return delta.reduce((newDelta, op) => {\n    if (!op.insert) return newDelta;\n    if (op.attributes && op.attributes[format]) {\n      return newDelta.push(op);\n    }\n    const formats = value ? { [format]: value } : {};\n    return newDelta.insert(op.insert, { ...formats, ...op.attributes });\n  }, new Delta());\n}\n\nfunction deltaEndsWith(delta: Delta, text: string) {\n  let endText = '';\n  for (\n    let i = delta.ops.length - 1;\n    i >= 0 && endText.length < text.length;\n    --i // eslint-disable-line no-plusplus\n  ) {\n    const op = delta.ops[i];\n    if (typeof op.insert !== 'string') break;\n    endText = op.insert + endText;\n  }\n  return endText.slice(-1 * text.length) === text;\n}\n\nfunction isLine(node: Node, scroll: ScrollBlot) {\n  if (!(node instanceof Element)) return false;\n  const match = scroll.query(node);\n  // @ts-expect-error\n  if (match && match.prototype instanceof EmbedBlot) return false;\n\n  return [\n    'address',\n    'article',\n    'blockquote',\n    'canvas',\n    'dd',\n    'div',\n    'dl',\n    'dt',\n    'fieldset',\n    'figcaption',\n    'figure',\n    'footer',\n    'form',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'header',\n    'iframe',\n    'li',\n    'main',\n    'nav',\n    'ol',\n    'output',\n    'p',\n    'pre',\n    'section',\n    'table',\n    'td',\n    'tr',\n    'ul',\n    'video',\n  ].includes(node.tagName.toLowerCase());\n}\n\nfunction isBetweenInlineElements(node: HTMLElement, scroll: ScrollBlot) {\n  return (\n    node.previousElementSibling &&\n    node.nextElementSibling &&\n    !isLine(node.previousElementSibling, scroll) &&\n    !isLine(node.nextElementSibling, scroll)\n  );\n}\n\nconst preNodes = new WeakMap();\nfunction isPre(node: Node | null) {\n  if (node == null) return false;\n  if (!preNodes.has(node)) {\n    // @ts-expect-error\n    if (node.tagName === 'PRE') {\n      preNodes.set(node, true);\n    } else {\n      preNodes.set(node, isPre(node.parentNode));\n    }\n  }\n  return preNodes.get(node);\n}\n\nfunction traverse(\n  scroll: ScrollBlot,\n  node: ChildNode,\n  elementMatchers: Matcher[],\n  textMatchers: Matcher[],\n  nodeMatches: WeakMap<Node, Matcher[]>,\n): Delta {\n  // Post-order\n  if (node.nodeType === node.TEXT_NODE) {\n    return textMatchers.reduce((delta: Delta, matcher) => {\n      return matcher(node, delta, scroll);\n    }, new Delta());\n  }\n  if (node.nodeType === node.ELEMENT_NODE) {\n    return Array.from(node.childNodes || []).reduce((delta, childNode) => {\n      let childrenDelta = traverse(\n        scroll,\n        childNode,\n        elementMatchers,\n        textMatchers,\n        nodeMatches,\n      );\n      if (childNode.nodeType === node.ELEMENT_NODE) {\n        childrenDelta = elementMatchers.reduce((reducedDelta, matcher) => {\n          return matcher(childNode as HTMLElement, reducedDelta, scroll);\n        }, childrenDelta);\n        childrenDelta = (nodeMatches.get(childNode) || []).reduce(\n          (reducedDelta, matcher) => {\n            return matcher(childNode, reducedDelta, scroll);\n          },\n          childrenDelta,\n        );\n      }\n      return delta.concat(childrenDelta);\n    }, new Delta());\n  }\n  return new Delta();\n}\n\nfunction createMatchAlias(format: string) {\n  return (_node: Element, delta: Delta, scroll: ScrollBlot) => {\n    return applyFormat(delta, format, true, scroll);\n  };\n}\n\nfunction matchAttributor(node: HTMLElement, delta: Delta, scroll: ScrollBlot) {\n  const attributes = Attributor.keys(node);\n  const classes = ClassAttributor.keys(node);\n  const styles = StyleAttributor.keys(node);\n  const formats: Record<string, string | undefined> = {};\n  attributes\n    .concat(classes)\n    .concat(styles)\n    .forEach((name) => {\n      let attr = scroll.query(name, Scope.ATTRIBUTE) as Attributor;\n      if (attr != null) {\n        formats[attr.attrName] = attr.value(node);\n        if (formats[attr.attrName]) return;\n      }\n      attr = ATTRIBUTE_ATTRIBUTORS[name];\n      if (attr != null && (attr.attrName === name || attr.keyName === name)) {\n        formats[attr.attrName] = attr.value(node) || undefined;\n      }\n      attr = STYLE_ATTRIBUTORS[name];\n      if (attr != null && (attr.attrName === name || attr.keyName === name)) {\n        attr = STYLE_ATTRIBUTORS[name];\n        formats[attr.attrName] = attr.value(node) || undefined;\n      }\n    });\n\n  return Object.entries(formats).reduce(\n    (newDelta, [name, value]) => applyFormat(newDelta, name, value, scroll),\n    delta,\n  );\n}\n\nfunction matchBlot(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const match = scroll.query(node);\n  if (match == null) return delta;\n  // @ts-expect-error\n  if (match.prototype instanceof EmbedBlot) {\n    const embed = {};\n    // @ts-expect-error\n    const value = match.value(node);\n    if (value != null) {\n      // @ts-expect-error\n      embed[match.blotName] = value;\n      // @ts-expect-error\n      return new Delta().insert(embed, match.formats(node, scroll));\n    }\n  } else {\n    // @ts-expect-error\n    if (match.prototype instanceof BlockBlot && !deltaEndsWith(delta, '\\n')) {\n      delta.insert('\\n');\n    }\n    if (\n      'blotName' in match &&\n      'formats' in match &&\n      typeof match.formats === 'function'\n    ) {\n      return applyFormat(\n        delta,\n        match.blotName,\n        match.formats(node, scroll),\n        scroll,\n      );\n    }\n  }\n  return delta;\n}\n\nfunction matchBreak(node: Node, delta: Delta) {\n  if (!deltaEndsWith(delta, '\\n')) {\n    delta.insert('\\n');\n  }\n  return delta;\n}\n\nfunction matchCodeBlock(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const match = scroll.query('code-block');\n  const language =\n    match && 'formats' in match && typeof match.formats === 'function'\n      ? match.formats(node, scroll)\n      : true;\n  return applyFormat(delta, 'code-block', language, scroll);\n}\n\nfunction matchIgnore() {\n  return new Delta();\n}\n\nfunction matchIndent(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const match = scroll.query(node);\n  if (\n    match == null ||\n    // @ts-expect-error\n    match.blotName !== 'list' ||\n    !deltaEndsWith(delta, '\\n')\n  ) {\n    return delta;\n  }\n  let indent = -1;\n  let parent = node.parentNode;\n  while (parent != null) {\n    // @ts-expect-error\n    if (['OL', 'UL'].includes(parent.tagName)) {\n      indent += 1;\n    }\n    parent = parent.parentNode;\n  }\n  if (indent <= 0) return delta;\n  return delta.reduce((composed, op) => {\n    if (!op.insert) return composed;\n    if (op.attributes && typeof op.attributes.indent === 'number') {\n      return composed.push(op);\n    }\n    return composed.insert(op.insert, { indent, ...(op.attributes || {}) });\n  }, new Delta());\n}\n\nfunction matchList(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const element = node as Element;\n  let list = element.tagName === 'OL' ? 'ordered' : 'bullet';\n\n  const checkedAttr = element.getAttribute('data-checked');\n  if (checkedAttr) {\n    list = checkedAttr === 'true' ? 'checked' : 'unchecked';\n  }\n\n  return applyFormat(delta, 'list', list, scroll);\n}\n\nfunction matchNewline(node: Node, delta: Delta, scroll: ScrollBlot) {\n  if (!deltaEndsWith(delta, '\\n')) {\n    if (\n      isLine(node, scroll) &&\n      (node.childNodes.length > 0 || node instanceof HTMLParagraphElement)\n    ) {\n      return delta.insert('\\n');\n    }\n    if (delta.length() > 0 && node.nextSibling) {\n      let nextSibling: Node | null = node.nextSibling;\n      while (nextSibling != null) {\n        if (isLine(nextSibling, scroll)) {\n          return delta.insert('\\n');\n        }\n        const match = scroll.query(nextSibling);\n        // @ts-expect-error\n        if (match && match.prototype instanceof BlockEmbed) {\n          return delta.insert('\\n');\n        }\n        nextSibling = nextSibling.firstChild;\n      }\n    }\n  }\n  return delta;\n}\n\nfunction matchStyles(node: HTMLElement, delta: Delta, scroll: ScrollBlot) {\n  const formats: Record<string, unknown> = {};\n  const style: Partial<CSSStyleDeclaration> = node.style || {};\n  if (style.fontStyle === 'italic') {\n    formats.italic = true;\n  }\n  if (style.textDecoration === 'underline') {\n    formats.underline = true;\n  }\n  if (style.textDecoration === 'line-through') {\n    formats.strike = true;\n  }\n  if (\n    style.fontWeight?.startsWith('bold') ||\n    // @ts-expect-error Fix me later\n    parseInt(style.fontWeight, 10) >= 700\n  ) {\n    formats.bold = true;\n  }\n  delta = Object.entries(formats).reduce(\n    (newDelta, [name, value]) => applyFormat(newDelta, name, value, scroll),\n    delta,\n  );\n  // @ts-expect-error\n  if (parseFloat(style.textIndent || 0) > 0) {\n    // Could be 0.5in\n    return new Delta().insert('\\t').concat(delta);\n  }\n  return delta;\n}\n\nfunction matchTable(\n  node: HTMLTableRowElement,\n  delta: Delta,\n  scroll: ScrollBlot,\n) {\n  const table =\n    node.parentElement?.tagName === 'TABLE'\n      ? node.parentElement\n      : node.parentElement?.parentElement;\n  if (table != null) {\n    const rows = Array.from(table.querySelectorAll('tr'));\n    const row = rows.indexOf(node) + 1;\n    return applyFormat(delta, 'table', row, scroll);\n  }\n  return delta;\n}\n\nfunction matchText(node: HTMLElement, delta: Delta, scroll: ScrollBlot) {\n  // @ts-expect-error\n  let text = node.data as string;\n  // Word represents empty line with <o:p>&nbsp;</o:p>\n  if (node.parentElement?.tagName === 'O:P') {\n    return delta.insert(text.trim());\n  }\n  if (!isPre(node)) {\n    if (\n      text.trim().length === 0 &&\n      text.includes('\\n') &&\n      !isBetweenInlineElements(node, scroll)\n    ) {\n      return delta;\n    }\n    // convert all non-nbsp whitespace into regular space\n    text = text.replace(/[^\\S\\u00a0]/g, ' ');\n    // collapse consecutive spaces into one\n    text = text.replace(/ {2,}/g, ' ');\n    if (\n      (node.previousSibling == null &&\n        node.parentElement != null &&\n        isLine(node.parentElement, scroll)) ||\n      (node.previousSibling instanceof Element &&\n        isLine(node.previousSibling, scroll))\n    ) {\n      // block structure means we don't need leading space\n      text = text.replace(/^ /, '');\n    }\n    if (\n      (node.nextSibling == null &&\n        node.parentElement != null &&\n        isLine(node.parentElement, scroll)) ||\n      (node.nextSibling instanceof Element && isLine(node.nextSibling, scroll))\n    ) {\n      // block structure means we don't need trailing space\n      text = text.replace(/ $/, '');\n    }\n    // done removing whitespace and can normalize all to regular space\n    text = text.replaceAll('\\u00a0', ' ');\n  }\n  return delta.insert(text);\n}\n\nexport {\n  Clipboard as default,\n  matchAttributor,\n  matchBlot,\n  matchNewline,\n  matchText,\n  traverse,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}