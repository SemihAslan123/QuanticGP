{"ast":null,"code":"import _classCallCheck from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _superPropGet from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/superPropGet.js\";\nimport _inherits from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _defineProperty from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { EmbedBlot, Scope } from 'parchment';\nimport TextBlot from './text.js';\nvar Cursor = /*#__PURE__*/function (_EmbedBlot) {\n  function Cursor(scroll, domNode, selection) {\n    var _this;\n    _classCallCheck(this, Cursor);\n    _this = _callSuper(this, Cursor, [scroll, domNode]);\n    _this.selection = selection;\n    _this.textNode = document.createTextNode(Cursor.CONTENTS);\n    _this.domNode.appendChild(_this.textNode);\n    _this.savedLength = 0;\n    return _this;\n  }\n  _inherits(Cursor, _EmbedBlot);\n  return _createClass(Cursor, [{\n    key: \"detach\",\n    value: function detach() {\n      // super.detach() will also clear domNode.__blot\n      if (this.parent != null) this.parent.removeChild(this);\n    }\n  }, {\n    key: \"format\",\n    value: function format(name, value) {\n      if (this.savedLength !== 0) {\n        _superPropGet(Cursor, \"format\", this, 3)([name, value]);\n        return;\n      }\n      // TODO: Fix this next time the file is edited.\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      var target = this;\n      var index = 0;\n      while (target != null && target.statics.scope !== Scope.BLOCK_BLOT) {\n        index += target.offset(target.parent);\n        target = target.parent;\n      }\n      if (target != null) {\n        this.savedLength = Cursor.CONTENTS.length;\n        // @ts-expect-error TODO: allow empty context in Parchment\n        target.optimize();\n        target.formatAt(index, Cursor.CONTENTS.length, name, value);\n        this.savedLength = 0;\n      }\n    }\n  }, {\n    key: \"index\",\n    value: function index(node, offset) {\n      if (node === this.textNode) return 0;\n      return _superPropGet(Cursor, \"index\", this, 3)([node, offset]);\n    }\n  }, {\n    key: \"length\",\n    value: function length() {\n      return this.savedLength;\n    }\n  }, {\n    key: \"position\",\n    value: function position() {\n      return [this.textNode, this.textNode.data.length];\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      _superPropGet(Cursor, \"remove\", this, 3)([]);\n      // @ts-expect-error Fix me later\n      this.parent = null;\n    }\n  }, {\n    key: \"restore\",\n    value: function restore() {\n      if (this.selection.composing || this.parent == null) return null;\n      var range = this.selection.getNativeRange();\n      // Browser may push down styles/nodes inside the cursor blot.\n      // https://dvcs.w3.org/hg/editing/raw-file/tip/editing.html#push-down-values\n      while (this.domNode.lastChild != null && this.domNode.lastChild !== this.textNode) {\n        // @ts-expect-error Fix me later\n        this.domNode.parentNode.insertBefore(this.domNode.lastChild, this.domNode);\n      }\n      var prevTextBlot = this.prev instanceof TextBlot ? this.prev : null;\n      var prevTextLength = prevTextBlot ? prevTextBlot.length() : 0;\n      var nextTextBlot = this.next instanceof TextBlot ? this.next : null;\n      // @ts-expect-error TODO: make TextBlot.text public\n      var nextText = nextTextBlot ? nextTextBlot.text : '';\n      var textNode = this.textNode;\n      // take text from inside this blot and reset it\n      var newText = textNode.data.split(Cursor.CONTENTS).join('');\n      textNode.data = Cursor.CONTENTS;\n\n      // proactively merge TextBlots around cursor so that optimization\n      // doesn't lose the cursor.  the reason we are here in cursor.restore\n      // could be that the user clicked in prevTextBlot or nextTextBlot, or\n      // the user typed something.\n      var mergedTextBlot;\n      if (prevTextBlot) {\n        mergedTextBlot = prevTextBlot;\n        if (newText || nextTextBlot) {\n          prevTextBlot.insertAt(prevTextBlot.length(), newText + nextText);\n          if (nextTextBlot) {\n            nextTextBlot.remove();\n          }\n        }\n      } else if (nextTextBlot) {\n        mergedTextBlot = nextTextBlot;\n        nextTextBlot.insertAt(0, newText);\n      } else {\n        var newTextNode = document.createTextNode(newText);\n        mergedTextBlot = this.scroll.create(newTextNode);\n        this.parent.insertBefore(mergedTextBlot, this);\n      }\n      this.remove();\n      if (range) {\n        // calculate selection to restore\n        var remapOffset = function remapOffset(node, offset) {\n          if (prevTextBlot && node === prevTextBlot.domNode) {\n            return offset;\n          }\n          if (node === textNode) {\n            return prevTextLength + offset - 1;\n          }\n          if (nextTextBlot && node === nextTextBlot.domNode) {\n            return prevTextLength + newText.length + offset;\n          }\n          return null;\n        };\n        var start = remapOffset(range.start.node, range.start.offset);\n        var end = remapOffset(range.end.node, range.end.offset);\n        if (start !== null && end !== null) {\n          return {\n            startNode: mergedTextBlot.domNode,\n            startOffset: start,\n            endNode: mergedTextBlot.domNode,\n            endOffset: end\n          };\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mutations, context) {\n      var _this2 = this;\n      if (mutations.some(function (mutation) {\n        return mutation.type === 'characterData' && mutation.target === _this2.textNode;\n      })) {\n        var range = this.restore();\n        if (range) context.range = range;\n      }\n    }\n\n    // Avoid .ql-cursor being a descendant of `<a/>`.\n    // The reason is Safari pushes down `<a/>` on text insertion.\n    // That will cause DOM nodes not sync with the model.\n    //\n    // For example ({I} is the caret), given the markup:\n    //    <a><span class=\"ql-cursor\">\\uFEFF{I}</span></a>\n    // When typing a char \"x\", `<a/>` will be pushed down inside the `<span>` first:\n    //    <span class=\"ql-cursor\"><a>\\uFEFF{I}</a></span>\n    // And then \"x\" will be inserted after `<a/>`:\n    //    <span class=\"ql-cursor\"><a>\\uFEFF</a>d{I}</span>\n  }, {\n    key: \"optimize\",\n    value: function optimize(context) {\n      // @ts-expect-error Fix me later\n      _superPropGet(Cursor, \"optimize\", this, 3)([context]);\n      var parent = this.parent;\n      while (parent) {\n        if (parent.domNode.tagName === 'A') {\n          this.savedLength = Cursor.CONTENTS.length;\n          // @ts-expect-error TODO: make isolate generic\n          parent.isolate(this.offset(parent), this.length()).unwrap();\n          this.savedLength = 0;\n          break;\n        }\n        parent = parent.parent;\n      }\n    }\n  }, {\n    key: \"value\",\n    value: function value() {\n      return '';\n    }\n  }], [{\n    key: \"value\",\n    value:\n    // Zero width no break space\n\n    function value() {\n      return undefined;\n    }\n  }]);\n}(EmbedBlot);\n_defineProperty(Cursor, \"blotName\", 'cursor');\n_defineProperty(Cursor, \"className\", 'ql-cursor');\n_defineProperty(Cursor, \"tagName\", 'span');\n_defineProperty(Cursor, \"CONTENTS\", \"\\uFEFF\");\nexport default Cursor;","map":{"version":3,"names":["EmbedBlot","Scope","TextBlot","Cursor","_EmbedBlot","scroll","domNode","selection","_this","_classCallCheck","_callSuper","textNode","document","createTextNode","CONTENTS","appendChild","savedLength","_inherits","_createClass","key","value","detach","parent","removeChild","format","name","_superPropGet","target","index","statics","scope","BLOCK_BLOT","offset","length","optimize","formatAt","node","position","data","remove","restore","composing","range","getNativeRange","lastChild","parentNode","insertBefore","prevTextBlot","prev","prevTextLength","nextTextBlot","next","nextText","text","newText","split","join","mergedTextBlot","insertAt","newTextNode","create","remapOffset","start","end","startNode","startOffset","endNode","endOffset","update","mutations","context","_this2","some","mutation","type","tagName","isolate","unwrap","undefined","_defineProperty"],"sources":["../../src/blots/cursor.ts"],"sourcesContent":["import { EmbedBlot, Scope } from 'parchment';\nimport type { Parent, ScrollBlot } from 'parchment';\nimport type Selection from '../core/selection.js';\nimport TextBlot from './text.js';\nimport type { EmbedContextRange } from './embed.js';\n\nclass Cursor extends EmbedBlot {\n  static blotName = 'cursor';\n  static className = 'ql-cursor';\n  static tagName = 'span';\n  static CONTENTS = '\\uFEFF'; // Zero width no break space\n\n  static value() {\n    return undefined;\n  }\n\n  selection: Selection;\n  textNode: Text;\n  savedLength: number;\n\n  constructor(scroll: ScrollBlot, domNode: HTMLElement, selection: Selection) {\n    super(scroll, domNode);\n    this.selection = selection;\n    this.textNode = document.createTextNode(Cursor.CONTENTS);\n    this.domNode.appendChild(this.textNode);\n    this.savedLength = 0;\n  }\n\n  detach() {\n    // super.detach() will also clear domNode.__blot\n    if (this.parent != null) this.parent.removeChild(this);\n  }\n\n  format(name: string, value: unknown) {\n    if (this.savedLength !== 0) {\n      super.format(name, value);\n      return;\n    }\n    // TODO: Fix this next time the file is edited.\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let target: Parent | this = this;\n    let index = 0;\n    while (target != null && target.statics.scope !== Scope.BLOCK_BLOT) {\n      index += target.offset(target.parent);\n      target = target.parent;\n    }\n    if (target != null) {\n      this.savedLength = Cursor.CONTENTS.length;\n      // @ts-expect-error TODO: allow empty context in Parchment\n      target.optimize();\n      target.formatAt(index, Cursor.CONTENTS.length, name, value);\n      this.savedLength = 0;\n    }\n  }\n\n  index(node: Node, offset: number) {\n    if (node === this.textNode) return 0;\n    return super.index(node, offset);\n  }\n\n  length() {\n    return this.savedLength;\n  }\n\n  position(): [Text, number] {\n    return [this.textNode, this.textNode.data.length];\n  }\n\n  remove() {\n    super.remove();\n    // @ts-expect-error Fix me later\n    this.parent = null;\n  }\n\n  restore(): EmbedContextRange | null {\n    if (this.selection.composing || this.parent == null) return null;\n    const range = this.selection.getNativeRange();\n    // Browser may push down styles/nodes inside the cursor blot.\n    // https://dvcs.w3.org/hg/editing/raw-file/tip/editing.html#push-down-values\n    while (\n      this.domNode.lastChild != null &&\n      this.domNode.lastChild !== this.textNode\n    ) {\n      // @ts-expect-error Fix me later\n      this.domNode.parentNode.insertBefore(\n        this.domNode.lastChild,\n        this.domNode,\n      );\n    }\n\n    const prevTextBlot = this.prev instanceof TextBlot ? this.prev : null;\n    const prevTextLength = prevTextBlot ? prevTextBlot.length() : 0;\n    const nextTextBlot = this.next instanceof TextBlot ? this.next : null;\n    // @ts-expect-error TODO: make TextBlot.text public\n    const nextText = nextTextBlot ? nextTextBlot.text : '';\n    const { textNode } = this;\n    // take text from inside this blot and reset it\n    const newText = textNode.data.split(Cursor.CONTENTS).join('');\n    textNode.data = Cursor.CONTENTS;\n\n    // proactively merge TextBlots around cursor so that optimization\n    // doesn't lose the cursor.  the reason we are here in cursor.restore\n    // could be that the user clicked in prevTextBlot or nextTextBlot, or\n    // the user typed something.\n    let mergedTextBlot;\n    if (prevTextBlot) {\n      mergedTextBlot = prevTextBlot;\n      if (newText || nextTextBlot) {\n        prevTextBlot.insertAt(prevTextBlot.length(), newText + nextText);\n        if (nextTextBlot) {\n          nextTextBlot.remove();\n        }\n      }\n    } else if (nextTextBlot) {\n      mergedTextBlot = nextTextBlot;\n      nextTextBlot.insertAt(0, newText);\n    } else {\n      const newTextNode = document.createTextNode(newText);\n      mergedTextBlot = this.scroll.create(newTextNode);\n      this.parent.insertBefore(mergedTextBlot, this);\n    }\n\n    this.remove();\n    if (range) {\n      // calculate selection to restore\n      const remapOffset = (node: Node, offset: number) => {\n        if (prevTextBlot && node === prevTextBlot.domNode) {\n          return offset;\n        }\n        if (node === textNode) {\n          return prevTextLength + offset - 1;\n        }\n        if (nextTextBlot && node === nextTextBlot.domNode) {\n          return prevTextLength + newText.length + offset;\n        }\n        return null;\n      };\n\n      const start = remapOffset(range.start.node, range.start.offset);\n      const end = remapOffset(range.end.node, range.end.offset);\n      if (start !== null && end !== null) {\n        return {\n          startNode: mergedTextBlot.domNode,\n          startOffset: start,\n          endNode: mergedTextBlot.domNode,\n          endOffset: end,\n        };\n      }\n    }\n    return null;\n  }\n\n  update(mutations: MutationRecord[], context: Record<string, unknown>) {\n    if (\n      mutations.some((mutation) => {\n        return (\n          mutation.type === 'characterData' && mutation.target === this.textNode\n        );\n      })\n    ) {\n      const range = this.restore();\n      if (range) context.range = range;\n    }\n  }\n\n  // Avoid .ql-cursor being a descendant of `<a/>`.\n  // The reason is Safari pushes down `<a/>` on text insertion.\n  // That will cause DOM nodes not sync with the model.\n  //\n  // For example ({I} is the caret), given the markup:\n  //    <a><span class=\"ql-cursor\">\\uFEFF{I}</span></a>\n  // When typing a char \"x\", `<a/>` will be pushed down inside the `<span>` first:\n  //    <span class=\"ql-cursor\"><a>\\uFEFF{I}</a></span>\n  // And then \"x\" will be inserted after `<a/>`:\n  //    <span class=\"ql-cursor\"><a>\\uFEFF</a>d{I}</span>\n  optimize(context?: unknown) {\n    // @ts-expect-error Fix me later\n    super.optimize(context);\n\n    let { parent } = this;\n    while (parent) {\n      if (parent.domNode.tagName === 'A') {\n        this.savedLength = Cursor.CONTENTS.length;\n        // @ts-expect-error TODO: make isolate generic\n        parent.isolate(this.offset(parent), this.length()).unwrap();\n        this.savedLength = 0;\n        break;\n      }\n      parent = parent.parent;\n    }\n  }\n\n  value() {\n    return '';\n  }\n}\n\nexport default Cursor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}