{"ast":null,"code":"import _regeneratorRuntime from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nexport default {\n  data: function data() {\n    return {\n      email: '',\n      password: '',\n      isLoggedIn: false,\n      user: null,\n      // Stockera les données de l'utilisateur connecté\n      errorMessage: '' // Pour stocker les messages d'erreur\n    };\n  },\n  mounted: function mounted() {\n    // Vérifier si l'utilisateur est connecté au chargement de la page\n    var user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user) {\n      this.isLoggedIn = true;\n      this.user = user;\n    }\n  },\n  methods: {\n    goToInscription: function goToInscription() {\n      this.$router.push({\n        name: \"InscriptionView\"\n      });\n    },\n    logout: function logout() {\n      localStorage.removeItem(\"user\");\n      this.isLoggedIn = false;\n      this.user = null;\n    },\n    submitForm: function submitForm() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('http://localhost:3001/login', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  email: _this.email,\n                  password: _this.password\n                })\n              });\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n            case 5:\n              data = _context.sent;\n              if (data.success) {\n                localStorage.setItem('user', JSON.stringify(data.user));\n                _this.isLoggedIn = true;\n                _this.user = data.user;\n                _this.errorMessage = '';\n                window.location.reload();\n              } else {\n                _this.errorMessage = 'Saisissez une adresse e-mail et un mot de passe valide.';\n              }\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["data","email","password","isLoggedIn","user","errorMessage","mounted","JSON","parse","localStorage","getItem","methods","goToInscription","$router","push","name","logout","removeItem","submitForm","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","fetch","method","headers","body","stringify","sent","json","success","setItem","window","location","reload","stop"],"sources":["src/components/LoginComponent.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"login-box\">\n      <h2 v-if=\"!isLoggedIn\">Connexion</h2>\n      <form v-if=\"!isLoggedIn\" @submit.prevent=\"submitForm\">\n        <div class=\"form-group\">\n          <label for=\"email\">Email</label>\n          <input type=\"email\" v-model=\"email\" required />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">Mot de passe</label>\n          <input type=\"password\" v-model=\"password\" required />\n        </div>\n        <button class=\"login-button\" type=\"submit\">Se connecter</button>\n      </form>\n      <br>\n      <button v-if=\"!isLoggedIn\" @click=\"goToInscription\">S'inscrire</button>\n\n\n      <div v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\n\n      <div v-if=\"isLoggedIn\" class=\"welcome-box\">\n        <p>Bienvenue, {{ user?.prenom || \"Utilisateur\" }} !</p>\n        <button class=\"logout-button\" @click=\"logout\">Se déconnecter</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      email: '',\n      password: '',\n      isLoggedIn: false,\n      user: null, // Stockera les données de l'utilisateur connecté\n      errorMessage: '', // Pour stocker les messages d'erreur\n    };\n  },\n  mounted() {\n    // Vérifier si l'utilisateur est connecté au chargement de la page\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user) {\n      this.isLoggedIn = true;\n      this.user = user;\n    }\n  },\n  methods: {\n    goToInscription() {\n      this.$router.push({ name: \"InscriptionView\" });\n    },\n    logout() {\n      localStorage.removeItem(\"user\");\n      this.isLoggedIn = false;\n      this.user = null;\n    },\n    async submitForm() {\n      const response = await fetch('http://localhost:3001/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email: this.email, password: this.password }),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        localStorage.setItem('user', JSON.stringify(data.user));\n        this.isLoggedIn = true;\n        this.user = data.user;\n        this.errorMessage = '';\n        window.location.reload()\n      } else {\n        this.errorMessage = 'Saisissez une adresse e-mail et un mot de passe valide.';\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Conteneur principal centré */\n.login-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  margin: 0;\n}\n\n/* Cadre du formulaire de connexion */\n.login-box {\n  background: #f0ebeb;\n  padding: 30px;\n  border-radius: 10px;\n  box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 400px;\n  text-align: center;\n}\n\n/* Style des groupes de champs */\n.form-group {\n  margin-bottom: 20px;\n  text-align: left;\n}\n\n.form-group label {\n  display: block;\n  font-weight: bold;\n  margin-bottom: 5px;\n  color: #333;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  box-sizing: border-box;\n}\n\n/* Bouton de connexion */\n.login-button {\n  width: 100%;\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #4caf50;\n  color: white;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.login-button:hover {\n  background-color: #45a049;\n}\n\n/* Bouton de déconnexion */\n.logout-button {\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  background-color: #f44336;\n  color: white;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.logout-button:hover {\n  background-color: #e53935;\n}\n\n/* Message d'erreur */\n.error {\n  margin-top: 15px;\n  color: #e74c3c;\n  font-weight: bold;\n}\n\n/* Bienvenue box */\n.welcome-box {\n  margin-top: 20px;\n}\n\n</style>\n"],"mappings":";;;;;;;AA8BA;EACAA,IAAA,WAAAA,KAAA;IACA;MACAC,KAAA;MACAC,QAAA;MACAC,UAAA;MACAC,IAAA;MAAA;MACAC,YAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA;IACA,IAAAF,IAAA,GAAAG,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA,IAAAN,IAAA;MACA,KAAAD,UAAA;MACA,KAAAC,IAAA,GAAAA,IAAA;IACA;EACA;EACAO,OAAA;IACAC,eAAA,WAAAA,gBAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QAAAC,IAAA;MAAA;IACA;IACAC,MAAA,WAAAA,OAAA;MACAP,YAAA,CAAAQ,UAAA;MACA,KAAAd,UAAA;MACA,KAAAC,IAAA;IACA;IACAc,UAAA,WAAAA,WAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,QAAA,EAAAxB,IAAA;QAAA,OAAAqB,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACAC,KAAA;gBACAC,MAAA;gBACAC,OAAA;kBAAA;gBAAA;gBACAC,IAAA,EAAA1B,IAAA,CAAA2B,SAAA;kBAAAjC,KAAA,EAAAkB,KAAA,CAAAlB,KAAA;kBAAAC,QAAA,EAAAiB,KAAA,CAAAjB;gBAAA;cACA;YAAA;cAJAsB,QAAA,GAAAG,QAAA,CAAAQ,IAAA;cAAAR,QAAA,CAAAE,IAAA;cAAA,OAMAL,QAAA,CAAAY,IAAA;YAAA;cAAApC,IAAA,GAAA2B,QAAA,CAAAQ,IAAA;cAEA,IAAAnC,IAAA,CAAAqC,OAAA;gBACA5B,YAAA,CAAA6B,OAAA,SAAA/B,IAAA,CAAA2B,SAAA,CAAAlC,IAAA,CAAAI,IAAA;gBACAe,KAAA,CAAAhB,UAAA;gBACAgB,KAAA,CAAAf,IAAA,GAAAJ,IAAA,CAAAI,IAAA;gBACAe,KAAA,CAAAd,YAAA;gBACAkC,MAAA,CAAAC,QAAA,CAAAC,MAAA;cACA;gBACAtB,KAAA,CAAAd,YAAA;cACA;YAAA;YAAA;cAAA,OAAAsB,QAAA,CAAAe,IAAA;UAAA;QAAA,GAAAnB,OAAA;MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}