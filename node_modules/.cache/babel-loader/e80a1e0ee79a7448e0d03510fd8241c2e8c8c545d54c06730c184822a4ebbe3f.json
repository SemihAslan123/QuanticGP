{"ast":null,"code":"import _classCallCheck from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar isScrollable = function isScrollable(el) {\n  var _getComputedStyle = getComputedStyle(el, null),\n    overflowY = _getComputedStyle.overflowY;\n  return overflowY !== 'visible' && overflowY !== 'clip';\n};\nvar Tooltip = /*#__PURE__*/function () {\n  function Tooltip(quill, boundsContainer) {\n    var _this = this;\n    _classCallCheck(this, Tooltip);\n    this.quill = quill;\n    this.boundsContainer = boundsContainer || document.body;\n    this.root = quill.addContainer('ql-tooltip');\n    // @ts-expect-error\n    this.root.innerHTML = this.constructor.TEMPLATE;\n    if (isScrollable(this.quill.root)) {\n      this.quill.root.addEventListener('scroll', function () {\n        _this.root.style.marginTop = \"\".concat(-1 * _this.quill.root.scrollTop, \"px\");\n      });\n    }\n    this.hide();\n  }\n  return _createClass(Tooltip, [{\n    key: \"hide\",\n    value: function hide() {\n      this.root.classList.add('ql-hidden');\n    }\n  }, {\n    key: \"position\",\n    value: function position(reference) {\n      var left = reference.left + reference.width / 2 - this.root.offsetWidth / 2;\n      // root.scrollTop should be 0 if scrollContainer !== root\n      var top = reference.bottom + this.quill.root.scrollTop;\n      this.root.style.left = \"\".concat(left, \"px\");\n      this.root.style.top = \"\".concat(top, \"px\");\n      this.root.classList.remove('ql-flip');\n      var containerBounds = this.boundsContainer.getBoundingClientRect();\n      var rootBounds = this.root.getBoundingClientRect();\n      var shift = 0;\n      if (rootBounds.right > containerBounds.right) {\n        shift = containerBounds.right - rootBounds.right;\n        this.root.style.left = \"\".concat(left + shift, \"px\");\n      }\n      if (rootBounds.left < containerBounds.left) {\n        shift = containerBounds.left - rootBounds.left;\n        this.root.style.left = \"\".concat(left + shift, \"px\");\n      }\n      if (rootBounds.bottom > containerBounds.bottom) {\n        var height = rootBounds.bottom - rootBounds.top;\n        var verticalShift = reference.bottom - reference.top + height;\n        this.root.style.top = \"\".concat(top - verticalShift, \"px\");\n        this.root.classList.add('ql-flip');\n      }\n      return shift;\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.root.classList.remove('ql-editing');\n      this.root.classList.remove('ql-hidden');\n    }\n  }]);\n}();\nexport default Tooltip;","map":{"version":3,"names":["isScrollable","el","_getComputedStyle","getComputedStyle","overflowY","Tooltip","quill","boundsContainer","_this","_classCallCheck","document","body","root","addContainer","innerHTML","constructor","TEMPLATE","addEventListener","style","marginTop","concat","scrollTop","hide","_createClass","key","value","classList","add","position","reference","left","width","offsetWidth","top","bottom","remove","containerBounds","getBoundingClientRect","rootBounds","shift","right","height","verticalShift","show"],"sources":["../../src/ui/tooltip.ts"],"sourcesContent":["import type Quill from '../core.js';\nimport type { Bounds } from '../core/selection.js';\n\nconst isScrollable = (el: Element) => {\n  const { overflowY } = getComputedStyle(el, null);\n  return overflowY !== 'visible' && overflowY !== 'clip';\n};\n\nclass Tooltip {\n  quill: Quill;\n  boundsContainer: HTMLElement;\n  root: HTMLDivElement;\n\n  constructor(quill: Quill, boundsContainer?: HTMLElement) {\n    this.quill = quill;\n    this.boundsContainer = boundsContainer || document.body;\n    this.root = quill.addContainer('ql-tooltip');\n    // @ts-expect-error\n    this.root.innerHTML = this.constructor.TEMPLATE;\n    if (isScrollable(this.quill.root)) {\n      this.quill.root.addEventListener('scroll', () => {\n        this.root.style.marginTop = `${-1 * this.quill.root.scrollTop}px`;\n      });\n    }\n    this.hide();\n  }\n\n  hide() {\n    this.root.classList.add('ql-hidden');\n  }\n\n  position(reference: Bounds) {\n    const left =\n      reference.left + reference.width / 2 - this.root.offsetWidth / 2;\n    // root.scrollTop should be 0 if scrollContainer !== root\n    const top = reference.bottom + this.quill.root.scrollTop;\n    this.root.style.left = `${left}px`;\n    this.root.style.top = `${top}px`;\n    this.root.classList.remove('ql-flip');\n    const containerBounds = this.boundsContainer.getBoundingClientRect();\n    const rootBounds = this.root.getBoundingClientRect();\n    let shift = 0;\n    if (rootBounds.right > containerBounds.right) {\n      shift = containerBounds.right - rootBounds.right;\n      this.root.style.left = `${left + shift}px`;\n    }\n    if (rootBounds.left < containerBounds.left) {\n      shift = containerBounds.left - rootBounds.left;\n      this.root.style.left = `${left + shift}px`;\n    }\n    if (rootBounds.bottom > containerBounds.bottom) {\n      const height = rootBounds.bottom - rootBounds.top;\n      const verticalShift = reference.bottom - reference.top + height;\n      this.root.style.top = `${top - verticalShift}px`;\n      this.root.classList.add('ql-flip');\n    }\n    return shift;\n  }\n\n  show() {\n    this.root.classList.remove('ql-editing');\n    this.root.classList.remove('ql-hidden');\n  }\n}\n\nexport default Tooltip;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}