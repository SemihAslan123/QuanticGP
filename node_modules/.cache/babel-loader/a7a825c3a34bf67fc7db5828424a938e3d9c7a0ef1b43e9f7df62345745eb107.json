{"ast":null,"code":"import \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nexport default {\n  name: \"ReservationView\",\n  data: function data() {\n    return {\n      prenom: \"\",\n      nom: \"\",\n      email: \"\",\n      parking: false,\n      selectedHotel: null,\n      selectedCourses: [],\n      startDate: null,\n      endDate: null,\n      hotelStartDate: null,\n      hotelEndDate: null,\n      hotels: [{\n        id: 1,\n        nom: \"Riviera Marriott\",\n        emplacement: \"Ouest\",\n        image: \"/assets/hotels/hotel1.jpeg\",\n        prix: 200\n      }, {\n        id: 2,\n        nom: \"Fairmont Monte Carlo\",\n        emplacement: \"Est\",\n        image: \"/assets/hotels/hotel2.jpg\",\n        prix: 350\n      }],\n      courses: [{\n        id: 1,\n        nom: \"Course 1 Jour 1\",\n        prix: 50,\n        description: \"Une course amusante à travers la ville.\",\n        image: \"/assets/courses/course1.jpeg\"\n      }, {\n        id: 2,\n        nom: \"Course 2 Jour 2\",\n        prix: 75,\n        description: \"Course de vitesse sur un circuit.\",\n        image: \"/assets/courses/course2.png\"\n      }, {\n        id: 3,\n        nom: \"Course 3 Jour 3\",\n        prix: 100,\n        description: \"Un défi d’endurance pour les plus courageux.\",\n        image: \"/assets/courses/course3.png\"\n      }],\n      totalPrice: 0,\n      isVIP: false,\n      isVipInfoVisible: false,\n      isLoggedIn: false,\n      user: null,\n      errorMessage: \"\"\n    };\n  },\n  mounted: function mounted() {\n    var user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user) {\n      this.isLoggedIn = true;\n      this.user = user;\n      this.prenom = user.prenom;\n      this.nom = user.nom;\n      this.email = user.mail;\n    }\n  },\n  methods: {\n    toggleVipInfo: function toggleVipInfo() {\n      this.isVipInfoVisible = !this.isVipInfoVisible;\n    },\n    toggleCourseSelection: function toggleCourseSelection(course) {\n      var index = this.selectedCourses.findIndex(function (c) {\n        return c.id === course.id;\n      });\n      if (index > -1) {\n        this.selectedCourses.splice(index, 1);\n      } else {\n        this.selectedCourses.push(course);\n      }\n      this.calculateTotal();\n    },\n    updateMaxEndDate: function updateMaxEndDate() {\n      if (this.endDate && new Date(this.endDate) < new Date(this.startDate)) {\n        this.endDate = this.startDate;\n      }\n      this.calculateTotal();\n    },\n    updateMaxHotelEndDate: function updateMaxHotelEndDate() {\n      if (this.hotelEndDate && new Date(this.hotelEndDate) < new Date(this.hotelStartDate)) {\n        this.hotelEndDate = this.hotelStartDate;\n      }\n      this.calculateTotal();\n    },\n    calculateTotal: function calculateTotal() {\n      var price = 0;\n      this.selectedCourses.forEach(function (course) {\n        price += course.prix;\n      });\n      if (this.startDate && this.endDate) {\n        var start = new Date(this.startDate);\n        var end = new Date(this.endDate);\n        var days = Math.min(Math.ceil((end - start) / (1000 * 60 * 60 * 24)) + 1, 5);\n        price += days * 50;\n      }\n      if (this.selectedHotel && this.hotelStartDate && this.hotelEndDate) {\n        var _start = new Date(this.hotelStartDate);\n        var _end = new Date(this.hotelEndDate);\n        var nights = Math.ceil((_end - _start) / (1000 * 60 * 60 * 24));\n        price += Math.max(0, nights) * this.selectedHotel.prix;\n      }\n      if (this.isVIP) price += 100;\n      this.totalPrice = price;\n    },\n    submitReservation: function submitReservation() {\n      if (this.selectedCourses.length === 0) {\n        this.errorMessage = \"Veuillez sélectionner au moins une course.\";\n        return;\n      }\n      if (this.startDate && !this.endDate) {\n        this.errorMessage = \"Veuillez sélectionner une date de fin de parking si une date de début est définie.\";\n        return;\n      }\n      if (this.selectedHotel) {\n        if (!this.hotelStartDate || !this.hotelEndDate) {\n          this.errorMessage = \"Veuillez sélectionner des dates valides pour votre séjour à l'hôtel.\";\n          return;\n        }\n        if (this.hotelStartDate === this.hotelEndDate) {\n          this.errorMessage = \"La date d'arrivée et de départ pour l'hôtel ne peuvent pas être identiques.\";\n          return;\n        }\n      }\n      this.errorMessage = \"\";\n      this.$router.push({\n        name: \"Paiement\",\n        params: {\n          prenom: this.prenom,\n          nom: this.nom,\n          email: this.email,\n          selectedCourses: this.selectedCourses,\n          selectedHotel: this.selectedHotel,\n          hotelStartDate: this.hotelStartDate,\n          hotelEndDate: this.hotelEndDate,\n          startDate: this.startDate,\n          endDate: this.endDate,\n          isVIP: this.isVIP,\n          totalPrice: this.totalPrice\n        }\n      });\n    },\n    cancelParkingSelection: function cancelParkingSelection() {\n      this.startDate = null;\n      this.endDate = null;\n      this.calculateTotal();\n    },\n    cancelHotelSelection: function cancelHotelSelection() {\n      this.selectedHotel = null;\n      this.hotelStartDate = null;\n      this.hotelEndDate = null;\n      this.calculateTotal();\n    },\n    selectHotel: function selectHotel(hotel) {\n      var _this$selectedHotel;\n      this.selectedHotel = ((_this$selectedHotel = this.selectedHotel) === null || _this$selectedHotel === void 0 ? void 0 : _this$selectedHotel.id) === hotel.id ? null : hotel;\n      this.hotelStartDate = null;\n      this.hotelEndDate = null;\n      this.calculateTotal();\n    }\n  }\n};","map":{"version":3,"names":["name","data","prenom","nom","email","parking","selectedHotel","selectedCourses","startDate","endDate","hotelStartDate","hotelEndDate","hotels","id","emplacement","image","prix","courses","description","totalPrice","isVIP","isVipInfoVisible","isLoggedIn","user","errorMessage","mounted","JSON","parse","localStorage","getItem","mail","methods","toggleVipInfo","toggleCourseSelection","course","index","findIndex","c","splice","push","calculateTotal","updateMaxEndDate","Date","updateMaxHotelEndDate","price","forEach","start","end","days","Math","min","ceil","nights","max","submitReservation","length","$router","params","cancelParkingSelection","cancelHotelSelection","selectHotel","hotel","_this$selectedHotel"],"sources":["src/views/ReservationBilletView.vue"],"sourcesContent":["<template>\n  <div class=\"conteneur-reservation-billet\">\n    <h1>Réservation de billet</h1>\n    <form @submit.prevent=\"submitReservation\">\n\n      <!-- Afficher les champs prénom, nom et email uniquement si l'utilisateur n'est pas connecté -->\n      <div v-if=\"!isLoggedIn\">\n        <div>\n          <label for=\"prenom\">Prénom:</label>\n          <input type=\"text\" v-model=\"prenom\" required />\n        </div>\n\n        <div>\n          <label for=\"nom\">Nom:</label>\n          <input type=\"text\" v-model=\"nom\" required />\n        </div>\n\n        <div>\n          <label for=\"email\">Email:</label>\n          <input type=\"text\" v-model=\"email\" required />\n        </div>\n      </div>\n\n      <!-- Affichage des courses sous forme de cartes -->\n      <h2>Choisissez vos courses :</h2>\n      <div class=\"course-cards\">\n        <div\n            v-for=\"course in courses\"\n            :key=\"course.id\"\n            class=\"course-card\"\n            @click=\"toggleCourseSelection(course)\"\n            :class=\"{ selected: selectedCourses.includes(course) }\"\n        >\n          <img :src=\"course.image\" alt=\"Image de la course\" class=\"course-image\" />\n          <h3>{{ course.nom }}</h3>\n          <p>{{ course.description }}</p>\n          <p>Prix : {{ course.prix }}€</p>\n        </div>\n      </div>\n\n      <!-- Sélection des dates de parking -->\n      <h2>Choisissez vos dates de parking :</h2>\n      <div class=\"parking-dates\">\n        <label for=\"startDate\">Date de début du parking :</label>\n        <input\n            type=\"date\"\n            id=\"startDate\"\n            v-model=\"startDate\"\n            :min=\"'2025-06-15'\"\n            :max=\"'2025-06-19'\"\n            @change=\"updateMaxEndDate\"\n        />\n\n        <!-- Affichage conditionnel de la date de fin -->\n        <label v-if=\"startDate\" for=\"endDate\">Date de fin du parking :</label>\n        <input\n            v-if=\"startDate\"\n            type=\"date\"\n            id=\"endDate\"\n            v-model=\"endDate\"\n            :min=\"startDate\"\n            :max=\"'2025-06-19'\"\n            @change=\"calculateTotal\"\n        />\n      </div>\n\n      <!-- Affichage du bouton d'annulation de parking si des dates sont choisies -->\n      <div v-if=\"startDate || endDate\">\n        <button id=\"annulation\" type=\"button\" @click=\"cancelParkingSelection\">Annuler la sélection de parking</button>\n      </div>\n\n      <!-- Case à cocher pour un billet VIP -->\n      <h2>Souhaitez-vous un billet VIP ?</h2>\n      <div class=\"checkbox-group\">\n        <label for=\"vip\" class=\"checkbox-label\">\n          <input type=\"checkbox\" v-model=\"isVIP\" @change=\"calculateTotal\" id=\"vip\" />\n          <span class=\"checkbox-custom\"></span> Billet VIP (+100€)\n        </label>\n      </div>\n\n      <!-- Bouton \"C'est quoi VIP ?\" pour afficher plus d'informations -->\n      <div class=\"vip-info\">\n        <button type=\"button\" @click=\"toggleVipInfo\" id=\"info-button\">C'est quoi VIP ?</button>\n        <p v-if=\"isVipInfoVisible\" class=\"vip-description\">\n          Le billet VIP offre une expérience premium, y compris un accès exclusif aux zones réservées, des boissons gratuites, et des sièges prioritaires.\n          Profitez de votre événement dans les meilleures conditions.\n        </p>\n      </div>\n\n      <!-- Affichage des hôtels sous forme de cartes -->\n      <h2>Choisissez un hôtel :</h2>\n      <div class=\"hotel-cards\">\n        <div\n            v-for=\"hotel in hotels\"\n            :key=\"hotel.id\"\n            class=\"hotel-card\"\n            @click=\"selectHotel(hotel)\"\n            :class=\"{ selected: selectedHotel && selectedHotel.id === hotel.id }\"\n        >\n          <img :src=\"hotel.image\" alt=\"Image de l'hôtel\" class=\"hotel-image\" />\n          <h3>{{ hotel.nom }}</h3>\n          <p>Emplacement : {{ hotel.emplacement }}</p>\n          <p> Prix : {{ hotel.prix }}€</p>\n        </div>\n      </div>\n\n      <!-- Sélection des dates pour l'hôtel -->\n      <h2>Choisissez vos dates pour l'hôtel :</h2>\n      <div class=\"hotel-dates\" v-if=\"selectedHotel\">\n        <label for=\"hotelStartDate\">Date de début :</label>\n        <input\n            type=\"date\"\n            id=\"hotelStartDate\"\n            v-model=\"hotelStartDate\"\n            :min=\"'2025-06-15'\"\n            :max=\"'2025-06-19'\"\n            @change=\"updateMaxHotelEndDate\"\n        />\n\n        <label v-if=\"hotelStartDate\" for=\"hotelEndDate\">Date de fin :</label>\n        <input\n            v-if=\"hotelStartDate\"\n            type=\"date\"\n            id=\"hotelEndDate\"\n            v-model=\"hotelEndDate\"\n            :min=\"hotelStartDate\"\n            :max=\"'2025-06-19'\"\n            @change=\"calculateTotal\"\n        />\n      </div>\n\n      <!-- Bouton pour annuler la sélection de l'hôtel -->\n      <div v-if=\"selectedHotel\">\n        <button id=\"annulation\" @click=\"cancelHotelSelection\">Annuler la sélection de l'hôtel</button>\n      </div>\n\n      <!-- Affichage du prix total -->\n      <div>\n        <h2>Prix Total: {{ totalPrice }}€</h2>\n      </div>\n\n      <div v-if=\"errorMessage\" class=\"error-message\">\n        {{ errorMessage }}\n      </div>\n\n      <!-- Bouton pour soumettre le formulaire -->\n      <button type=\"submit\">Payer</button>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"ReservationView\",\n  data() {\n    return {\n      prenom: \"\",\n      nom: \"\",\n      email: \"\",\n      parking: false,\n      selectedHotel: null,\n      selectedCourses: [],\n      startDate: null,\n      endDate: null,\n      hotelStartDate: null,\n      hotelEndDate: null,\n      hotels: [\n        { id: 1, nom: \"Riviera Marriott\", emplacement: \"Ouest\", image: \"/assets/hotels/hotel1.jpeg\", prix: 200 },\n        { id: 2, nom: \"Fairmont Monte Carlo\", emplacement: \"Est\", image: \"/assets/hotels/hotel2.jpg\", prix: 350 },\n      ],\n      courses: [\n        { id: 1, nom: \"Course 1 Jour 1\", prix: 50, description: \"Une course amusante à travers la ville.\", image: \"/assets/courses/course1.jpeg\" },\n        { id: 2, nom: \"Course 2 Jour 2\", prix: 75, description: \"Course de vitesse sur un circuit.\", image: \"/assets/courses/course2.png\" },\n        { id: 3, nom: \"Course 3 Jour 3\", prix: 100, description: \"Un défi d’endurance pour les plus courageux.\", image: \"/assets/courses/course3.png\" },\n      ],\n      totalPrice: 0,\n      isVIP: false,\n      isVipInfoVisible: false,\n      isLoggedIn: false,\n      user: null,\n      errorMessage: \"\",\n    };\n  },\n  mounted() {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user) {\n      this.isLoggedIn = true;\n      this.user = user;\n      this.prenom = user.prenom;\n      this.nom = user.nom;\n      this.email = user.mail;\n    }\n  },\n  methods: {\n    toggleVipInfo() {\n      this.isVipInfoVisible = !this.isVipInfoVisible;\n    },\n    toggleCourseSelection(course) {\n      const index = this.selectedCourses.findIndex((c) => c.id === course.id);\n      if (index > -1) {\n        this.selectedCourses.splice(index, 1);\n      } else {\n        this.selectedCourses.push(course);\n      }\n      this.calculateTotal();\n    },\n    updateMaxEndDate() {\n      if (this.endDate && new Date(this.endDate) < new Date(this.startDate)) {\n        this.endDate = this.startDate;\n      }\n      this.calculateTotal();\n    },\n    updateMaxHotelEndDate() {\n      if (this.hotelEndDate && new Date(this.hotelEndDate) < new Date(this.hotelStartDate)) {\n        this.hotelEndDate = this.hotelStartDate;\n      }\n      this.calculateTotal();\n    },\n    calculateTotal() {\n      let price = 0;\n      this.selectedCourses.forEach((course) => {\n        price += course.prix;\n      });\n      if (this.startDate && this.endDate) {\n        const start = new Date(this.startDate);\n        const end = new Date(this.endDate);\n        const days = Math.min(Math.ceil((end - start) / (1000 * 60 * 60 * 24)) + 1, 5);\n        price += days * 50;\n      }\n      if (this.selectedHotel && this.hotelStartDate && this.hotelEndDate) {\n        const start = new Date(this.hotelStartDate);\n        const end = new Date(this.hotelEndDate);\n        const nights = Math.ceil((end - start) / (1000 * 60 * 60 * 24));\n        price += Math.max(0, nights) * this.selectedHotel.prix;\n      }\n      if (this.isVIP) price += 100;\n      this.totalPrice = price;\n    },\n    submitReservation() {\n      if (this.selectedCourses.length === 0) {\n        this.errorMessage = \"Veuillez sélectionner au moins une course.\";\n        return;\n      }\n      if (this.startDate && !this.endDate) {\n        this.errorMessage = \"Veuillez sélectionner une date de fin de parking si une date de début est définie.\";\n        return;\n      }\n      if (this.selectedHotel) {\n        if (!this.hotelStartDate || !this.hotelEndDate) {\n          this.errorMessage = \"Veuillez sélectionner des dates valides pour votre séjour à l'hôtel.\";\n          return;\n        }\n        if (this.hotelStartDate === this.hotelEndDate) {\n          this.errorMessage = \"La date d'arrivée et de départ pour l'hôtel ne peuvent pas être identiques.\";\n          return;\n        }\n      }\n      this.errorMessage = \"\";\n      this.$router.push({\n        name: \"Paiement\",\n        params: {\n          prenom: this.prenom,\n          nom: this.nom,\n          email: this.email,\n          selectedCourses: this.selectedCourses,\n          selectedHotel: this.selectedHotel,\n          hotelStartDate: this.hotelStartDate,\n          hotelEndDate: this.hotelEndDate,\n          startDate: this.startDate,\n          endDate: this.endDate,\n          isVIP: this.isVIP,\n          totalPrice: this.totalPrice,\n        },\n      });\n    },\n    cancelParkingSelection() {\n      this.startDate = null;\n      this.endDate = null;\n      this.calculateTotal();\n    },\n    cancelHotelSelection() {\n      this.selectedHotel = null;\n      this.hotelStartDate = null;\n      this.hotelEndDate = null;\n      this.calculateTotal();\n    },\n    selectHotel(hotel) {\n      this.selectedHotel = this.selectedHotel?.id === hotel.id ? null : hotel;\n      this.hotelStartDate = null;\n      this.hotelEndDate = null;\n      this.calculateTotal();\n    },\n  },\n};\n</script>\n\n\n\n\n<style scoped>\n/* Style du bouton d'information \"C'est quoi VIP ?\" */\n.vip-info {\n  text-align: center;\n  margin-top: 20px;\n}\n\n#info-button {\n  background-color: #3498db; /* Bleu clair */\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  padding: 10px 20px;\n  cursor: pointer;\n  font-size: 1em;\n  transition: background-color 0.3s ease;\n}\n\n#info-button:hover {\n  background-color: #2980b9; /* Bleu plus foncé au survol */\n}\n\n.vip-description {\n  font-size: 1.1em;\n  color: #fff;\n  background-color: #2c3e50;\n  border-radius: 5px;\n  padding: 15px;\n  max-width: 30%;\n  margin: 10px auto;\n}\n\n\n.error-message {\n  color: #e74c3c;\n  font-weight: bold;\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.conteneur-reservation-billet{\n  padding-top: 70px;\n}\n\n.parking-dates {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n}\n\n.parking-dates label {\n  font-weight: bold;\n  margin-bottom: 10px;\n  color: #fff;\n}\n\n.parking-dates input {\n  width: 200px;\n  padding: 10px;\n  font-size: 1em;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n/* Organisation générale */\n.hotel-cards {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n.hotel-card {\n  border: 2px solid #e74c3c; /* Bordure rouge */\n  border-radius: 10px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n  padding: 20px;\n  width: 250px;\n  text-align: center;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  cursor: pointer;\n}\n\n.hotel-card:hover {\n  transform: scale(1.05);\n  box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.3);\n  background-color: #3f3232; /* Légère teinte rouge au survol */\n}\n\n.hotel-card.selected {\n  border: 2px solid #27ae60; /* Une bordure verte pour indiquer la sélection */\n}\n\n.hotel-image {\n  width: 100%;\n  height: 150px;\n  object-fit: cover;\n  border-radius: 8px;\n  margin-bottom: 15px;\n}\n\nh1 {\n  text-align: center;\n  color: #e74c3c; /* Titre rouge */\n  font-size: 2em;\n  margin-bottom: 20px;\n}\n\nh2 {\n  color: #e74c3c;\n  text-align: center;\n  font-size: 1.5em;\n  margin-top: 30px;\n}\n\nlabel {\n  display: block;\n  margin-top: 15px;\n  font-weight: bold;\n  color: #fff;\n}\n\nselect,\ninput[type=\"text\"],\ninput[type=\"checkbox\"] {\n  width: 80%; /* Réduit la taille des champs de texte */\n  max-width: 300px; /* Limite la taille maximale */\n  padding: 10px;\n  margin-top: 5px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  font-size: 1em;\n  text-align: center;\n}\n\nbutton[type=\"submit\"] {\n  background-color: #e74c3c; /* Rouge pour le bouton */\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  padding: 12px 20px;\n  font-size: 1em;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  margin-top: 20px;\n  width: 10em;\n}\n\nbutton[type=\"submit\"]:hover {\n  background-color: #c0392b; /* Rouge foncé au survol */\n}\n\nform div {\n  margin-bottom: 20px;\n}\n\n.hotel-card h3 {\n  color: #e74c3c;\n  margin-bottom: 10px;\n  font-size: 1.3em;\n}\n\n.hotel-card p {\n  color: #fff;\n  font-size: 0.9em;\n}\n\n/* Style du bouton d'annulation */\n#annulation {\n  background-color: #f39c12;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  padding: 12px 20px;\n  font-size: 1em;\n  cursor: pointer;\n  transition: background-color 0.3s ease, transform 0.3s ease;\n  margin-top: 10px;\n  width: auto;\n  display: inline-block;\n  text-align: center;\n}\n\n#annulation:hover {\n  background-color: #e67e22; /* Orange foncé au survol */\n  transform: scale(1.05); /* Légère augmentation de la taille au survol */\n}\n\nbutton[type=\"button\"]:focus {\n  outline: none;\n  box-shadow: 0 0 5px rgba(255, 165, 0, 0.7); /* Lueur orange autour du bouton lorsqu'il est sélectionné */\n}\n\nbutton[type=\"button\"]:active {\n  background-color: #d35400; /* Changer la couleur au clic */\n  transform: scale(1); /* Réduire l'effet de survol au clic */\n}\n\n/* Style du texte du bouton */\nbutton[type=\"button\"] {\n  font-weight: bold;\n  text-transform: uppercase;\n}\n\nform {\n  margin-bottom: 10em; /* Ajoute une marge de 50px en bas du formulaire */\n}\n\n/* Centrer les cases à cocher et leur texte, mais la case doit être à droite du texte */\n.checkbox-group {\n  display: flex;\n  justify-content: center; /* Centre les éléments horizontalement */\n  align-items: center; /* Centre verticalement */\n  margin-top: 20px;\n}\n\n.checkbox-label {\n  display: flex;\n  align-items: center;\n  font-size: 1.1em;\n  color: #fff;\n  cursor: pointer;\n  flex-direction: row-reverse; /* Mettre la case à cocher à droite du texte */\n}\n\n.checkbox-label input {\n  display: none; /* Cacher l'élément input natif */\n}\n\n.checkbox-custom {\n  width: 22px;\n  height: 22px;\n  border: 2px solid #e74c3c;\n  border-radius: 5px;\n  margin-left: 10px; /* Ajoute un espacement entre la case et le texte */\n  transition: background-color 0.3s ease, border-color 0.3s ease;\n  position: relative;\n}\n\n.checkbox-label input:checked + .checkbox-custom {\n  background-color: #06be06;\n  border-color: #06be06;\n}\n\n\n.checkbox-label input:checked + .checkbox-custom::after {\n  transform: scale(180%);\n}\n\n/* Style de l'image de la course */\n.course-image {\n  width: 260px;\n  height: 260px;\n  object-fit: cover;\n  border-radius: 8px;\n  margin-bottom: -18px;\n  border: 1px solid black; /* Ajoute une bordure rouge fine autour de l'image */\n}\n\n/* Style des boutons de navigation (flèches) */\nbutton[type=\"button\"] {\n  background-color: #e74c3c;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  padding: 20px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  font-size: 2em;\n}\n\nbutton[type=\"button\"]:hover {\n  background-color: #c0392b;\n}\n\nbutton[type=\"button\"]:focus {\n  outline: none;\n}\n\nbutton[type=\"button\"]:active {\n  background-color: #d35400;\n}\n\n/* Style du texte de la course */\n.course-info h3 {\n  font-size: 1.5em;\n  color: #e74c3c;\n  margin-bottom: 0;\n}\n\n.course-info p {\n  color: #fff;\n  font-size: 22px;\n  margin: 5px 0;\n}\n\n.course-cards {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n.course-card {\n  border: 2px solid #e74c3c;\n  border-radius: 10px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n  padding: 20px;\n  width: 250px;\n  text-align: center;\n  cursor: pointer;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.course-card:hover {\n  transform: scale(1.05);\n  box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.3);\n  background-color: #3f3232;\n}\n\n.course-card.selected {\n  border: 2px solid #27ae60;\n}\n\n.course-card img {\n  width: 100%;\n  height: 150px;\n  object-fit: cover;\n  border-radius: 8px;\n  margin-bottom: 15px;\n}\n\n.course-card h3 {\n  color: #e74c3c;\n  margin-bottom: 10px;\n  font-size: 1.3em;\n}\n\n.course-card p {\n  color: #fff;\n  font-size: 0.9em;\n}\n\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}