{"ast":null,"code":"import _regeneratorRuntime from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport axios from 'axios';\nexport default {\n  name: 'PaiementView',\n  data: function data() {\n    return {\n      prenom: '',\n      nom: '',\n      email: '',\n      selectedHotel: null,\n      selectedCourses: [],\n      startDate: null,\n      // Parking start date\n      endDate: null,\n      // Parking end date\n      hotelStartDate: null,\n      // Hotel start date\n      hotelEndDate: null,\n      // Hotel end date\n      isVIP: false,\n      totalPrice: 0,\n      parkingPrice: 0,\n      cardNumber: '',\n      expiryDate: '',\n      cvv: '',\n      nameOnCard: ''\n    };\n  },\n  created: function created() {\n    var _this$$route$params = this.$route.params,\n      prenom = _this$$route$params.prenom,\n      nom = _this$$route$params.nom,\n      email = _this$$route$params.email,\n      selectedCourses = _this$$route$params.selectedCourses,\n      selectedHotel = _this$$route$params.selectedHotel,\n      startDate = _this$$route$params.startDate,\n      endDate = _this$$route$params.endDate,\n      hotelStartDate = _this$$route$params.hotelStartDate,\n      hotelEndDate = _this$$route$params.hotelEndDate,\n      isVIP = _this$$route$params.isVIP,\n      totalPrice = _this$$route$params.totalPrice;\n    this.prenom = prenom;\n    this.nom = nom;\n    this.email = email;\n    this.selectedCourses = selectedCourses || [];\n    this.selectedHotel = selectedHotel;\n    this.startDate = startDate; // Parking dates\n    this.endDate = endDate;\n    this.hotelStartDate = hotelStartDate; // Hotel dates\n    this.hotelEndDate = hotelEndDate;\n    this.isVIP = isVIP;\n    this.totalPrice = totalPrice;\n    if (this.startDate && this.endDate) {\n      this.calculateParkingPrice();\n    }\n  },\n  mounted: function mounted() {\n    var user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user) {\n      this.id = user.id;\n      console.log('ID Utilisateur récupéré :', this.id);\n    }\n  },\n  methods: {\n    calculateParkingPrice: function calculateParkingPrice() {\n      var start = new Date(this.startDate);\n      var end = new Date(this.endDate);\n      var differenceInTime = end - start;\n      var differenceInDays = differenceInTime / (1000 * 3600 * 24) + 1;\n      this.parkingPrice = differenceInDays * 50;\n    },\n    handlePayment: function handlePayment() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.post('http://localhost:3001/billets', {\n                prenom: _this.prenom,\n                nom: _this.nom,\n                email: _this.email,\n                selectedCourses: _this.selectedCourses,\n                selectedHotel: _this.selectedHotel,\n                startDate: _this.startDate,\n                endDate: _this.endDate,\n                hotelStartDate: _this.hotelStartDate,\n                hotelEndDate: _this.hotelEndDate,\n                isVIP: _this.isVIP,\n                totalPrice: _this.totalPrice,\n                userId: _this.id || null\n              });\n            case 3:\n              response = _context.sent;\n              console.log('Réponse de l’API :', response.data);\n              alert('Le paiement a été effectué avec succès!');\n              _this.$router.push({\n                name: 'Home'\n              });\n              _context.next = 13;\n              break;\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Erreur lors du paiement :', _context.t0);\n              alert('Une erreur est survenue lors du paiement.');\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 9]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","prenom","nom","email","selectedHotel","selectedCourses","startDate","endDate","hotelStartDate","hotelEndDate","isVIP","totalPrice","parkingPrice","cardNumber","expiryDate","cvv","nameOnCard","created","_this$$route$params","$route","params","calculateParkingPrice","mounted","user","JSON","parse","localStorage","getItem","id","console","log","methods","start","Date","end","differenceInTime","differenceInDays","handlePayment","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","post","userId","sent","alert","$router","push","t0","error","stop"],"sources":["src/views/PaiementBilletView.vue"],"sourcesContent":["<template>\n  <div class=\"espace-au-dessus\">\n    <div class=\"payment-container\">\n      <h1>Paiement de votre réservation</h1>\n\n      <!-- Récapitulatif de la commande -->\n      <div class=\"order-summary\">\n        <h2>Récapitulatif de la commande :</h2>\n        <p><strong>Prénom:</strong> {{ prenom }}</p>\n        <p><strong>Nom:</strong> {{ nom }}</p>\n        <p><strong>Email:</strong> {{ email }}</p>\n\n        <!-- Liste des courses sélectionnées -->\n        <div v-if=\"selectedCourses.length\">\n          <h3>Courses choisies :</h3>\n          <ul>\n            <li v-for=\"course in selectedCourses\" :key=\"course.id\">\n              {{ course.nom }} - {{ course.prix }}€\n            </li>\n          </ul>\n        </div>\n\n        <!-- Hôtel sélectionné -->\n        <p v-if=\"selectedHotel\">\n          <strong>Hôtel choisi:</strong> {{ selectedHotel.nom }} - {{ selectedHotel.emplacement }} - {{ selectedHotel.prix }}€\n        </p>\n        <!-- Affichage des dates de l'hôtel -->\n        <p v-if=\"hotelStartDate\"><strong>Date d'arrivée à l'hôtel:</strong> {{ hotelStartDate }}</p>\n        <p v-if=\"hotelEndDate\"><strong>Date de départ de l'hôtel:</strong> {{ hotelEndDate }}</p>\n\n        <!-- Affichage des dates de parking si sélectionnées -->\n        <div v-if=\"startDate && endDate\">\n          <p><strong>Date de début du parking:</strong> {{ startDate }}</p>\n          <p><strong>Date de fin du parking:</strong> {{ endDate }}</p>\n          <p><strong>Prix du parking:</strong> {{ parkingPrice }}€</p>\n        </div>\n\n        <!-- Options supplémentaires -->\n        <p v-if=\"isVIP\">Billet VIP (+100€)</p>\n\n        <!-- Prix total -->\n        <h3>Prix Total: {{ totalPrice }}€</h3>\n      </div>\n\n      <!-- Formulaire de paiement -->\n      <div class=\"payment-form\">\n        <h2>Informations de paiement</h2>\n        <form @submit.prevent=\"handlePayment\">\n          <div class=\"form-group\">\n            <label for=\"cardNumber\">Numéro de carte</label>\n            <input\n                v-model=\"cardNumber\"\n                type=\"text\"\n                id=\"cardNumber\"\n                placeholder=\"1234 5678 9012 3456\"\n                maxlength=\"19\"\n                required\n            />\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"expiryDate\">Date d'expiration</label>\n            <input\n                v-model=\"expiryDate\"\n                type=\"text\"\n                id=\"expiryDate\"\n                placeholder=\"MM/AA\"\n                maxlength=\"5\"\n                required\n            />\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"cvv\">Code de sécurité (CVV)</label>\n            <input\n                v-model=\"cvv\"\n                type=\"password\"\n                id=\"cvv\"\n                placeholder=\"XXX\"\n                maxlength=\"3\"\n                required\n            />\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"nameOnCard\">Nom sur la carte</label>\n            <input\n                v-model=\"nameOnCard\"\n                type=\"text\"\n                id=\"nameOnCard\"\n                placeholder=\"John Doe\"\n                required\n            />\n          </div>\n\n          <button type=\"submit\" class=\"submit-button\">Confirmer le paiement</button>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'PaiementView',\n  data() {\n    return {\n      prenom: '',\n      nom: '',\n      email: '',\n      selectedHotel: null,\n      selectedCourses: [],\n      startDate: null, // Parking start date\n      endDate: null, // Parking end date\n      hotelStartDate: null, // Hotel start date\n      hotelEndDate: null, // Hotel end date\n      isVIP: false,\n      totalPrice: 0,\n      parkingPrice: 0,\n      cardNumber: '',\n      expiryDate: '',\n      cvv: '',\n      nameOnCard: '',\n    };\n  },\n  created() {\n    const {\n      prenom, nom, email, selectedCourses, selectedHotel,\n      startDate, endDate, hotelStartDate, hotelEndDate,\n      isVIP, totalPrice\n    } = this.$route.params;\n\n    this.prenom = prenom;\n    this.nom = nom;\n    this.email = email;\n    this.selectedCourses = selectedCourses || [];\n    this.selectedHotel = selectedHotel;\n    this.startDate = startDate; // Parking dates\n    this.endDate = endDate;\n    this.hotelStartDate = hotelStartDate; // Hotel dates\n    this.hotelEndDate = hotelEndDate;\n    this.isVIP = isVIP;\n    this.totalPrice = totalPrice;\n\n    if (this.startDate && this.endDate) {\n      this.calculateParkingPrice();\n    }\n  },\n  mounted() {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user) {\n      this.id = user.id;\n      console.log('ID Utilisateur récupéré :', this.id);\n    }\n  },\n  methods: {\n    calculateParkingPrice() {\n      const start = new Date(this.startDate);\n      const end = new Date(this.endDate);\n      const differenceInTime = end - start;\n      const differenceInDays = (differenceInTime / (1000 * 3600 * 24)) + 1;\n      this.parkingPrice = differenceInDays * 50;\n    },\n    async handlePayment() {\n      try {\n        const response = await axios.post('http://localhost:3001/billets', {\n          prenom: this.prenom,\n          nom: this.nom,\n          email: this.email,\n          selectedCourses: this.selectedCourses,\n          selectedHotel: this.selectedHotel,\n          startDate: this.startDate,\n          endDate: this.endDate,\n          hotelStartDate: this.hotelStartDate,\n          hotelEndDate: this.hotelEndDate,\n          isVIP: this.isVIP,\n          totalPrice: this.totalPrice,\n          userId: this.id || null,\n        });\n\n        console.log('Réponse de l’API :', response.data);\n        alert('Le paiement a été effectué avec succès!');\n        this.$router.push({ name: 'Home' });\n      } catch (error) {\n        console.error('Erreur lors du paiement :', error);\n        alert('Une erreur est survenue lors du paiement.');\n      }\n    },\n  },\n};\n</script>\n\n\n\n\n<style scoped>\n\n.espace-au-dessus{\n  padding-top: 90px;\n}\n\n.payment-container {\n  width: 100%;\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: #dbd8d8;\n  border-radius: 8px;\n}\n\nh1 {\n  text-align: center;\n  color: #e74c3c;\n}\n\n.order-summary {\n  background-color: #fff;\n  padding: 20px;\n  margin-bottom: 30px;\n  border-radius: 8px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n.order-summary h2,\nh3 {\n  text-align: center;\n  color: #e74c3c;\n}\n\n.payment-form {\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n.payment-form h2 {\n  text-align: center;\n  color: #e74c3c;\n  margin-bottom: 20px;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.form-group label {\n  display: block;\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 10px;\n  font-size: 1em;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-sizing: border-box;\n}\n\n.submit-button {\n  width: 100%;\n  padding: 12px;\n  background-color: #e74c3c;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  font-size: 1.2em;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.submit-button:hover {\n  background-color: #c0392b;\n}\n\n.order-summary ul {\n  list-style-type: none;\n  padding: 0;\n}\n\n.order-summary li {\n  margin: 5px 0;\n  font-size: 1.1em;\n  color: #333;\n}\n</style>\n"],"mappings":";;;;;AAwGA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,MAAA;MACAC,GAAA;MACAC,KAAA;MACAC,aAAA;MACAC,eAAA;MACAC,SAAA;MAAA;MACAC,OAAA;MAAA;MACAC,cAAA;MAAA;MACAC,YAAA;MAAA;MACAC,KAAA;MACAC,UAAA;MACAC,YAAA;MACAC,UAAA;MACAC,UAAA;MACAC,GAAA;MACAC,UAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,IAAAC,mBAAA,GAIA,KAAAC,MAAA,CAAAC,MAAA;MAHAnB,MAAA,GAAAiB,mBAAA,CAAAjB,MAAA;MAAAC,GAAA,GAAAgB,mBAAA,CAAAhB,GAAA;MAAAC,KAAA,GAAAe,mBAAA,CAAAf,KAAA;MAAAE,eAAA,GAAAa,mBAAA,CAAAb,eAAA;MAAAD,aAAA,GAAAc,mBAAA,CAAAd,aAAA;MACAE,SAAA,GAAAY,mBAAA,CAAAZ,SAAA;MAAAC,OAAA,GAAAW,mBAAA,CAAAX,OAAA;MAAAC,cAAA,GAAAU,mBAAA,CAAAV,cAAA;MAAAC,YAAA,GAAAS,mBAAA,CAAAT,YAAA;MACAC,KAAA,GAAAQ,mBAAA,CAAAR,KAAA;MAAAC,UAAA,GAAAO,mBAAA,CAAAP,UAAA;IAGA,KAAAV,MAAA,GAAAA,MAAA;IACA,KAAAC,GAAA,GAAAA,GAAA;IACA,KAAAC,KAAA,GAAAA,KAAA;IACA,KAAAE,eAAA,GAAAA,eAAA;IACA,KAAAD,aAAA,GAAAA,aAAA;IACA,KAAAE,SAAA,GAAAA,SAAA;IACA,KAAAC,OAAA,GAAAA,OAAA;IACA,KAAAC,cAAA,GAAAA,cAAA;IACA,KAAAC,YAAA,GAAAA,YAAA;IACA,KAAAC,KAAA,GAAAA,KAAA;IACA,KAAAC,UAAA,GAAAA,UAAA;IAEA,SAAAL,SAAA,SAAAC,OAAA;MACA,KAAAc,qBAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,IAAAC,IAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA,IAAAJ,IAAA;MACA,KAAAK,EAAA,GAAAL,IAAA,CAAAK,EAAA;MACAC,OAAA,CAAAC,GAAA,mCAAAF,EAAA;IACA;EACA;EACAG,OAAA;IACAV,qBAAA,WAAAA,sBAAA;MACA,IAAAW,KAAA,OAAAC,IAAA,MAAA3B,SAAA;MACA,IAAA4B,GAAA,OAAAD,IAAA,MAAA1B,OAAA;MACA,IAAA4B,gBAAA,GAAAD,GAAA,GAAAF,KAAA;MACA,IAAAI,gBAAA,GAAAD,gBAAA;MACA,KAAAvB,YAAA,GAAAwB,gBAAA;IACA;IACAC,aAAA,WAAAA,cAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,QAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEAlD,KAAA,CAAAmD,IAAA;gBACAhD,MAAA,EAAAqC,KAAA,CAAArC,MAAA;gBACAC,GAAA,EAAAoC,KAAA,CAAApC,GAAA;gBACAC,KAAA,EAAAmC,KAAA,CAAAnC,KAAA;gBACAE,eAAA,EAAAiC,KAAA,CAAAjC,eAAA;gBACAD,aAAA,EAAAkC,KAAA,CAAAlC,aAAA;gBACAE,SAAA,EAAAgC,KAAA,CAAAhC,SAAA;gBACAC,OAAA,EAAA+B,KAAA,CAAA/B,OAAA;gBACAC,cAAA,EAAA8B,KAAA,CAAA9B,cAAA;gBACAC,YAAA,EAAA6B,KAAA,CAAA7B,YAAA;gBACAC,KAAA,EAAA4B,KAAA,CAAA5B,KAAA;gBACAC,UAAA,EAAA2B,KAAA,CAAA3B,UAAA;gBACAuC,MAAA,EAAAZ,KAAA,CAAAV,EAAA;cACA;YAAA;cAbAe,QAAA,GAAAG,QAAA,CAAAK,IAAA;cAeAtB,OAAA,CAAAC,GAAA,uBAAAa,QAAA,CAAA3C,IAAA;cACAoD,KAAA;cACAd,KAAA,CAAAe,OAAA,CAAAC,IAAA;gBAAAvD,IAAA;cAAA;cAAA+C,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAS,EAAA,GAAAT,QAAA;cAEAjB,OAAA,CAAA2B,KAAA,8BAAAV,QAAA,CAAAS,EAAA;cACAH,KAAA;YAAA;YAAA;cAAA,OAAAN,QAAA,CAAAW,IAAA;UAAA;QAAA,GAAAf,OAAA;MAAA;IAEA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}