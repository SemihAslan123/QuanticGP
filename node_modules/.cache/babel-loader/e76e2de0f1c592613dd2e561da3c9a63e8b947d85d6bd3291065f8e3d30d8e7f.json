{"ast":null,"code":"import _regeneratorRuntime from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/esteban/2emeAnnee/S3/devWeb/QuanticGP10/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      avis: [],\n      nouvelAvis: '',\n      note: '',\n      isLoggedIn: false,\n      user: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var user, response;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            user = JSON.parse(localStorage.getItem('user'));\n            if (user) {\n              _this.isLoggedIn = true;\n              _this.user = user;\n            }\n            _context.prev = 2;\n            _context.next = 5;\n            return axios.get('http://localhost:3001/livreDor');\n          case 5:\n            response = _context.sent;\n            _this.avis = response.data;\n            _context.next = 12;\n            break;\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](2);\n            console.error('Erreur lors de la récupération des avis :', _context.t0);\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[2, 9]]);\n    }))();\n  },\n  methods: {\n    soumettreAvis: function soumettreAvis() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (_this2.nouvelAvis.trim()) {\n                _context2.next = 3;\n                break;\n              }\n              alert('Veuillez écrire un avis avant de soumettre.');\n              return _context2.abrupt(\"return\");\n            case 3:\n              _context2.prev = 3;\n              _context2.next = 6;\n              return axios.post('http://localhost:3001/livreDor', {\n                userId: _this2.user.id,\n                commentaire: _this2.nouvelAvis,\n                note: _this2.note\n              });\n            case 6:\n              response = _context2.sent;\n              if (response.data.success) {\n                _this2.avis.push({\n                  id_avis: response.data.id,\n                  nom_utilisateur: _this2.user.nom_utilisateur,\n                  prenom_utilisateur: _this2.user.prenom_utilisateur,\n                  commentaire: _this2.nouvelAvis,\n                  note: _this2.note,\n                  date_avis: new Date().toISOString() // Format de la date ISO\n                });\n                _this2.nouvelAvis = '';\n                _this2.note = 1;\n                location.reload();\n              } else {\n                alert('Erreur lors de l\\'envoi de votre avis.');\n              }\n              _context2.next = 13;\n              break;\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](3);\n              console.error('Erreur lors de l\\'envoi de l\\'avis :', _context2.t0);\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[3, 10]]);\n      }))();\n    },\n    // Fonction pour formater la date\n    formatDate: function formatDate(date) {\n      var options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      };\n      return new Date(date).toLocaleDateString('fr-FR', options);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","avis","nouvelAvis","note","isLoggedIn","user","mounted","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","JSON","parse","localStorage","getItem","get","sent","t0","console","error","stop","methods","soumettreAvis","_this2","_callee2","_callee2$","_context2","trim","alert","abrupt","post","userId","id","commentaire","success","push","id_avis","nom_utilisateur","prenom_utilisateur","date_avis","Date","toISOString","location","reload","formatDate","date","options","year","month","day","hour","minute","toLocaleDateString"],"sources":["src/views/livreDor.vue"],"sourcesContent":["<template>\n  <div class=\"livre-dor\">\n    <h1>Livre d'Or</h1>\n\n    <!-- Formulaire d'avis (en haut) -->\n    <div v-if=\"isLoggedIn\" class=\"avis-form\">\n      <h2>Donnez votre avis</h2>\n      <textarea v-model=\"nouvelAvis\" placeholder=\"Écrivez votre avis ici...\"></textarea>\n\n      <!-- Ajout d'un champ pour la note -->\n      <select v-model=\"note\" required>\n        <option value=\"\" disabled selected>Sélectionner une note</option>\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n      </select>\n\n      <button @click=\"soumettreAvis\">Envoyer</button>\n    </div>\n\n    <!-- Liste des avis -->\n    <div v-if=\"avis.length > 0\" class=\"avis-list\">\n      <div v-for=\"avisItem in avis\" :key=\"avisItem.id_avis\" class=\"avis-item\">\n        <p><strong>{{ avisItem.nom_utilisateur }} {{ avisItem.prenom_utilisateur }}</strong> :</p>\n        <p>{{ avisItem.commentaire }}</p>\n        <p><strong>Date :</strong> {{ formatDate(avisItem.date_avis) }}</p>\n        <p><strong>Note :</strong> {{ avisItem.note }}</p>\n        <hr />\n      </div>\n    </div>\n\n    <!-- Message s'il n'y a pas encore d'avis -->\n    <div v-else>\n      <p>Aucun avis pour l'instant. Soyez le premier à donner votre avis !</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      avis: [],\n      nouvelAvis: '',\n      note: '',\n      isLoggedIn: false,\n      user: null,\n    };\n  },\n  async mounted() {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      this.isLoggedIn = true;\n      this.user = user;\n    }\n\n    try {\n      const response = await axios.get('http://localhost:3001/livreDor');\n      this.avis = response.data;\n    } catch (error) {\n      console.error('Erreur lors de la récupération des avis :', error);\n    }\n  },\n  methods: {\n    async soumettreAvis() {\n      if (!this.nouvelAvis.trim()) {\n        alert('Veuillez écrire un avis avant de soumettre.');\n        return;\n      }\n\n      try {\n        const response = await axios.post('http://localhost:3001/livreDor', {\n          userId: this.user.id,\n          commentaire: this.nouvelAvis,\n          note: this.note,\n        });\n\n        if (response.data.success) {\n          this.avis.push({\n            id_avis: response.data.id,\n            nom_utilisateur: this.user.nom_utilisateur,\n            prenom_utilisateur: this.user.prenom_utilisateur,\n            commentaire: this.nouvelAvis,\n            note: this.note,\n            date_avis: new Date().toISOString(), // Format de la date ISO\n          });\n          this.nouvelAvis = '';\n          this.note = 1;\n          location.reload();\n        } else {\n          alert('Erreur lors de l\\'envoi de votre avis.');\n        }\n      } catch (error) {\n        console.error('Erreur lors de l\\'envoi de l\\'avis :', error);\n      }\n    },\n\n    // Fonction pour formater la date\n    formatDate(date) {\n      const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n      return new Date(date).toLocaleDateString('fr-FR', options);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.livre-dor {\n  margin: 90px auto;\n  font-family: Arial, sans-serif;\n  max-width: 600px;\n  padding: 20px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\nh1 {\n  text-align: center;\n  color: #333;\n}\n\n.avis-form {\n  margin-bottom: 30px;\n}\n\n.avis-form h2 {\n  font-size: 1.5em;\n  color: #4CAF50;\n}\n\n.avis-form textarea {\n  width: 100%;\n  height: 120px;\n  margin-top: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-size: 1em;\n  resize: vertical;\n}\n\n.avis-form select {\n  width: 100%;\n  padding: 10px;\n  margin-top: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-size: 1em;\n}\n\n.avis-form button {\n  width: 100%;\n  padding: 10px;\n  margin-top: 15px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 1.2em;\n  cursor: pointer;\n}\n\n.avis-form button:hover {\n  background-color: #45a049;\n}\n\n.avis-list {\n  margin-top: 30px;\n}\n\n.avis-item {\n  background-color: #fff;\n  padding: 15px;\n  margin-bottom: 10px;\n  border-radius: 6px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  word-wrap: break-word; /* Pour que le texte ne dépasse pas */\n  overflow-wrap: break-word;\n  max-width: 100%; /* S'assurer que l'élément reste à l'intérieur de son conteneur */\n}\n\n.avis-item p {\n  margin: 5px 0;\n}\n\n.avis-item hr {\n  border: 0;\n  border-top: 1px solid #ddd;\n  margin-top: 15px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}